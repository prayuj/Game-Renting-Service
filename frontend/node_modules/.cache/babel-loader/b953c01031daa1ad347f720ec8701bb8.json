{"ast":null,"code":"'use strict';\n\nvar ES = require('es-abstract/es2017');\n\nvar MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER || Math.pow(2, 53) - 1; // eslint-disable-next-line max-params, max-statements\n\nvar FlattenIntoArray = function FlattenIntoArray(target, source, sourceLen, start, depth) {\n  var targetIndex = start;\n  var sourceIndex = 0;\n  /*\n  var mapperFunction;\n  if (arguments.length > 5) {\n  \tmapperFunction = arguments[5];\n  }\n  */\n\n  while (sourceIndex < sourceLen) {\n    var P = ES.ToString(sourceIndex);\n    var exists = ES.HasProperty(source, P);\n\n    if (exists) {\n      var element = ES.Get(source, P);\n      /*\n      if (typeof mapperFunction !== 'undefined') {\n      \tif (arguments.length <= 6) {\n      \t\tthrow new TypeError('Assertion failed: thisArg is required when mapperFunction is provided');\n      \t}\n      \telement = ES.Call(mapperFunction, arguments[6], [element, sourceIndex, source]);\n      }\n      */\n\n      var shouldFlatten = false;\n\n      if (depth > 0) {\n        shouldFlatten = ES.IsArray(element);\n      }\n\n      if (shouldFlatten) {\n        var elementLen = ES.ToLength(ES.Get(element, 'length'));\n        targetIndex = FlattenIntoArray(target, element, elementLen, targetIndex, depth - 1);\n      } else {\n        if (targetIndex >= MAX_SAFE_INTEGER) {\n          throw new TypeError('index too large');\n        }\n\n        ES.CreateDataPropertyOrThrow(target, ES.ToString(targetIndex), element);\n        targetIndex += 1;\n      }\n    }\n\n    sourceIndex += 1;\n  }\n\n  return targetIndex;\n};\n\nmodule.exports = function flat() {\n  var O = ES.ToObject(this);\n  var sourceLen = ES.ToLength(ES.Get(O, 'length'));\n  var depthNum = 1;\n\n  if (arguments.length > 0 && typeof arguments[0] !== 'undefined') {\n    depthNum = ES.ToInteger(arguments[0]);\n  }\n\n  var A = ES.ArraySpeciesCreate(O, 0);\n  FlattenIntoArray(A, O, sourceLen, 0, depthNum);\n  return A;\n};","map":{"version":3,"sources":["C:/Prayuj Folders/Game-Renting-Service/frontend/node_modules/array.prototype.flat/implementation.js"],"names":["ES","require","MAX_SAFE_INTEGER","Number","Math","pow","FlattenIntoArray","target","source","sourceLen","start","depth","targetIndex","sourceIndex","P","ToString","exists","HasProperty","element","Get","shouldFlatten","IsArray","elementLen","ToLength","TypeError","CreateDataPropertyOrThrow","module","exports","flat","O","ToObject","depthNum","arguments","length","ToInteger","A","ArraySpeciesCreate"],"mappings":"AAAA;;AAEA,IAAIA,EAAE,GAAGC,OAAO,CAAC,oBAAD,CAAhB;;AAEA,IAAIC,gBAAgB,GAAGC,MAAM,CAACD,gBAAP,IAA4BE,IAAI,CAACC,GAAL,CAAS,CAAT,EAAY,EAAZ,IAAkB,CAArE,C,CAEA;;AACA,IAAIC,gBAAgB,GAAG,SAASA,gBAAT,CAA0BC,MAA1B,EAAkCC,MAAlC,EAA0CC,SAA1C,EAAqDC,KAArD,EAA4DC,KAA5D,EAAmE;AACzF,MAAIC,WAAW,GAAGF,KAAlB;AACA,MAAIG,WAAW,GAAG,CAAlB;AAEA;;;;;;;AAOA,SAAOA,WAAW,GAAGJ,SAArB,EAAgC;AAC/B,QAAIK,CAAC,GAAGd,EAAE,CAACe,QAAH,CAAYF,WAAZ,CAAR;AACA,QAAIG,MAAM,GAAGhB,EAAE,CAACiB,WAAH,CAAeT,MAAf,EAAuBM,CAAvB,CAAb;;AACA,QAAIE,MAAJ,EAAY;AACX,UAAIE,OAAO,GAAGlB,EAAE,CAACmB,GAAH,CAAOX,MAAP,EAAeM,CAAf,CAAd;AACA;;;;;;;;;AAQA,UAAIM,aAAa,GAAG,KAApB;;AACA,UAAIT,KAAK,GAAG,CAAZ,EAAe;AACdS,QAAAA,aAAa,GAAGpB,EAAE,CAACqB,OAAH,CAAWH,OAAX,CAAhB;AACA;;AACD,UAAIE,aAAJ,EAAmB;AAClB,YAAIE,UAAU,GAAGtB,EAAE,CAACuB,QAAH,CAAYvB,EAAE,CAACmB,GAAH,CAAOD,OAAP,EAAgB,QAAhB,CAAZ,CAAjB;AACAN,QAAAA,WAAW,GAAGN,gBAAgB,CAACC,MAAD,EAASW,OAAT,EAAkBI,UAAlB,EAA8BV,WAA9B,EAA2CD,KAAK,GAAG,CAAnD,CAA9B;AACA,OAHD,MAGO;AACN,YAAIC,WAAW,IAAIV,gBAAnB,EAAqC;AACpC,gBAAM,IAAIsB,SAAJ,CAAc,iBAAd,CAAN;AACA;;AACDxB,QAAAA,EAAE,CAACyB,yBAAH,CAA6BlB,MAA7B,EAAqCP,EAAE,CAACe,QAAH,CAAYH,WAAZ,CAArC,EAA+DM,OAA/D;AACAN,QAAAA,WAAW,IAAI,CAAf;AACA;AACD;;AACDC,IAAAA,WAAW,IAAI,CAAf;AACA;;AAED,SAAOD,WAAP;AACA,CA3CD;;AA6CAc,MAAM,CAACC,OAAP,GAAiB,SAASC,IAAT,GAAgB;AAChC,MAAIC,CAAC,GAAG7B,EAAE,CAAC8B,QAAH,CAAY,IAAZ,CAAR;AACA,MAAIrB,SAAS,GAAGT,EAAE,CAACuB,QAAH,CAAYvB,EAAE,CAACmB,GAAH,CAAOU,CAAP,EAAU,QAAV,CAAZ,CAAhB;AAEA,MAAIE,QAAQ,GAAG,CAAf;;AACA,MAAIC,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwB,OAAOD,SAAS,CAAC,CAAD,CAAhB,KAAwB,WAApD,EAAiE;AAChED,IAAAA,QAAQ,GAAG/B,EAAE,CAACkC,SAAH,CAAaF,SAAS,CAAC,CAAD,CAAtB,CAAX;AACA;;AAED,MAAIG,CAAC,GAAGnC,EAAE,CAACoC,kBAAH,CAAsBP,CAAtB,EAAyB,CAAzB,CAAR;AACAvB,EAAAA,gBAAgB,CAAC6B,CAAD,EAAIN,CAAJ,EAAOpB,SAAP,EAAkB,CAAlB,EAAqBsB,QAArB,CAAhB;AACA,SAAOI,CAAP;AACA,CAZD","sourcesContent":["'use strict';\n\nvar ES = require('es-abstract/es2017');\n\nvar MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER || (Math.pow(2, 53) - 1);\n\n// eslint-disable-next-line max-params, max-statements\nvar FlattenIntoArray = function FlattenIntoArray(target, source, sourceLen, start, depth) {\n\tvar targetIndex = start;\n\tvar sourceIndex = 0;\n\n\t/*\n\tvar mapperFunction;\n\tif (arguments.length > 5) {\n\t\tmapperFunction = arguments[5];\n\t}\n\t*/\n\n\twhile (sourceIndex < sourceLen) {\n\t\tvar P = ES.ToString(sourceIndex);\n\t\tvar exists = ES.HasProperty(source, P);\n\t\tif (exists) {\n\t\t\tvar element = ES.Get(source, P);\n\t\t\t/*\n\t\t\tif (typeof mapperFunction !== 'undefined') {\n\t\t\t\tif (arguments.length <= 6) {\n\t\t\t\t\tthrow new TypeError('Assertion failed: thisArg is required when mapperFunction is provided');\n\t\t\t\t}\n\t\t\t\telement = ES.Call(mapperFunction, arguments[6], [element, sourceIndex, source]);\n\t\t\t}\n\t\t\t*/\n\t\t\tvar shouldFlatten = false;\n\t\t\tif (depth > 0) {\n\t\t\t\tshouldFlatten = ES.IsArray(element);\n\t\t\t}\n\t\t\tif (shouldFlatten) {\n\t\t\t\tvar elementLen = ES.ToLength(ES.Get(element, 'length'));\n\t\t\t\ttargetIndex = FlattenIntoArray(target, element, elementLen, targetIndex, depth - 1);\n\t\t\t} else {\n\t\t\t\tif (targetIndex >= MAX_SAFE_INTEGER) {\n\t\t\t\t\tthrow new TypeError('index too large');\n\t\t\t\t}\n\t\t\t\tES.CreateDataPropertyOrThrow(target, ES.ToString(targetIndex), element);\n\t\t\t\ttargetIndex += 1;\n\t\t\t}\n\t\t}\n\t\tsourceIndex += 1;\n\t}\n\n\treturn targetIndex;\n};\n\nmodule.exports = function flat() {\n\tvar O = ES.ToObject(this);\n\tvar sourceLen = ES.ToLength(ES.Get(O, 'length'));\n\n\tvar depthNum = 1;\n\tif (arguments.length > 0 && typeof arguments[0] !== 'undefined') {\n\t\tdepthNum = ES.ToInteger(arguments[0]);\n\t}\n\n\tvar A = ES.ArraySpeciesCreate(O, 0);\n\tFlattenIntoArray(A, O, sourceLen, 0, depthNum);\n\treturn A;\n};\n"]},"metadata":{},"sourceType":"script"}