{"ast":null,"code":"var _jsxFileName = \"C:\\\\Prayuj Folders\\\\Game-Renting-Service\\\\frontend\\\\src\\\\components\\\\games.js\";\nimport React, { Component } from \"react\";\nimport Game from \"./game\";\nimport axios from \"axios\";\nimport { Redirect } from \"react-router-dom\";\n\nclass Games extends Component {\n  constructor(props) {\n    super(props);\n\n    this.setRedirect = () => {\n      this.setState({\n        redirect: true\n      });\n    };\n\n    this.renderRedirect = () => {\n      if (this.state.redirect) {\n        return React.createElement(Redirect, {\n          push: true,\n          to: \"/add_game/\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42\n          },\n          __self: this\n        });\n      }\n    };\n\n    this.state = {\n      games: [],\n      filtered: [],\n      ascendingName: true,\n      ascendingAvailable: true,\n      nameSortButtonValue: React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      }, \"\\u2193\"),\n      availableSortButtonValue: \"Sort\"\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.onClickForSort = this.onClickForSort.bind(this);\n  }\n\n  componentDidMount() {\n    this.getGames();\n  }\n\n  getGames() {\n    axios.get(\"https://prayuj-gamerent.herokuapp.com/game/\").then(res => {\n      this.setState({\n        games: res.data,\n        filtered: res.data\n      });\n    });\n  }\n\n  handleChange(e) {\n    // Variable to hold the original version of the list\n    let currentList = []; // Variable to hold the filtered list before putting into state\n\n    let newList = []; // If the search bar isn't empty\n\n    if (e.target.value !== \"\") {\n      console.log(\"HERE 1\"); // Assign the original list to currentList\n\n      currentList = this.state.games; // Use .filter() to determine which items should be displayed\n      // based on the search terms\n\n      newList = currentList.filter(item => {\n        // change current item to lowercase\n        const lc = item.name.toLowerCase(); // change search term to lowercase\n\n        const filter = e.target.value.toLowerCase(); // check to see if the current list item includes the search term\n        // If it does, it will be added to newList. Using lowercase eliminates\n        // issues with capitalization in search terms and search content\n\n        return lc.includes(filter);\n      });\n      console.log(newList);\n    } else {\n      console.log(\"HERE 2\"); // If the search bar is empty, set newList to original task list\n\n      newList = this.state.games;\n    } // Set the filtered state based on what our rules added to newList\n\n\n    this.setState({\n      filtered: newList\n    });\n  }\n\n  onClickForSort(e) {\n    console.log(e.target.value);\n\n    if (e.target.value === \"Name\") {\n      let games = this.state.games;\n      games.sort((a, b) => {\n        var x = a.name.toLowerCase();\n        var y = b.name.toLowerCase();\n\n        if (this.state.ascendingName) {\n          if (x < y) {\n            return 1;\n          }\n\n          if (x > y) {\n            return -1;\n          }\n\n          return 0;\n        }\n\n        if (!this.state.ascendingName) {\n          if (x < y) {\n            return -1;\n          }\n\n          if (x > y) {\n            return 1;\n          }\n\n          return 0;\n        }\n      });\n      console.log(games);\n      let arrow = this.state.ascendingName ? React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, \"\\u2193\") : React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, \"\\u2191\");\n      this.setState({\n        games: games,\n        ascendingName: !this.state.ascendingName,\n        nameSortButtonValue: arrow,\n        availableSortButtonValue: \"Sort\"\n      });\n    }\n\n    if (e.target.value === \"Available\") {\n      let games = this.state.games;\n      games.sort((a, b) => {\n        var x = a.numberAvailable;\n        var y = b.numberAvailable;\n\n        if (this.state.ascendingAvailable) {\n          if (x < y) {\n            return 1;\n          }\n\n          if (x > y) {\n            return -1;\n          }\n\n          return 0;\n        }\n\n        if (!this.state.ascendingAvailable) {\n          if (x < y) {\n            return -1;\n          }\n\n          if (x > y) {\n            return 1;\n          }\n\n          return 0;\n        }\n      });\n      console.log(games);\n      let arrow = this.state.ascendingAvailable ? React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, \"\\u2193\") : React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, \"\\u2191\");\n      this.setState({\n        games: games,\n        ascendingAvailable: !this.state.ascendingAvailable,\n        availableSortButtonValue: arrow,\n        nameSortButtonValue: \"Sort\"\n      });\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, this.renderRedirect(), React.createElement(\"input\", {\n      type: \"button\",\n      className: \"btn btn-primary\",\n      value: \"Add Game\",\n      onClick: this.setRedirect,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      placeholder: \"Search...\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }), React.createElement(\"table\", {\n      className: \"table\",\n      style: {\n        marginTop: 20\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      style: {\n        paddingBottom: \"1.3%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, \"Sr\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, \"Name\", React.createElement(\"button\", {\n      className: \"btn btn-primary\",\n      value: \"Name\",\n      onClick: this.onClickForSort,\n      style: {\n        \"margin-left\": \"5%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, this.state.nameSortButtonValue)), React.createElement(\"th\", {\n      style: {\n        paddingBottom: \"1.3%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, \"Available In\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, \"Number Available\", \" \", React.createElement(\"button\", {\n      className: \"btn btn-primary\",\n      value: \"Available\",\n      onClick: this.onClickForSort,\n      style: {\n        \"margin-left\": \"5%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, this.state.availableSortButtonValue)))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, this.state.filtered.map((game, index) => React.createElement(Game, {\n      mode: \"games\",\n      _id: game._id,\n      sr: index + 1,\n      name: game.name,\n      availableIn: game.numberPS4Available > 0 ? game.numberXBOXAvailable > 0 ? [\"PS4\", \"XBOX One\"] : [\"PS4\"] : game.numberXBOXAvailable > 0 ? [\"XBOX One\"] : [\"Not Available\"],\n      noAvailable: game.numberAvailable,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nexport default Games;","map":{"version":3,"sources":["C:\\Prayuj Folders\\Game-Renting-Service\\frontend\\src\\components\\games.js"],"names":["React","Component","Game","axios","Redirect","Games","constructor","props","setRedirect","setState","redirect","renderRedirect","state","games","filtered","ascendingName","ascendingAvailable","nameSortButtonValue","availableSortButtonValue","handleChange","bind","onClickForSort","componentDidMount","getGames","get","then","res","data","e","currentList","newList","target","value","console","log","filter","item","lc","name","toLowerCase","includes","sort","a","b","x","y","arrow","numberAvailable","render","marginTop","paddingBottom","map","game","index","_id","numberPS4Available","numberXBOXAvailable"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport Game from \"./game\";\r\nimport axios from \"axios\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nclass Games extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      games: [],\r\n      filtered: [],\r\n      ascendingName: true,\r\n      ascendingAvailable: true,\r\n      nameSortButtonValue: <span>&darr;</span>,\r\n      availableSortButtonValue: \"Sort\",\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.onClickForSort = this.onClickForSort.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getGames();\r\n  }\r\n\r\n  getGames() {\r\n    axios.get(\"https://prayuj-gamerent.herokuapp.com/game/\").then((res) => {\r\n      this.setState({\r\n        games: res.data,\r\n        filtered: res.data,\r\n      });\r\n    });\r\n  }\r\n\r\n  setRedirect = () => {\r\n    this.setState({\r\n      redirect: true,\r\n    });\r\n  };\r\n\r\n  renderRedirect = () => {\r\n    if (this.state.redirect) {\r\n      return <Redirect push to={\"/add_game/\"} />;\r\n    }\r\n  };\r\n\r\n  handleChange(e) {\r\n    // Variable to hold the original version of the list\r\n    let currentList = [];\r\n    // Variable to hold the filtered list before putting into state\r\n    let newList = [];\r\n\r\n    // If the search bar isn't empty\r\n    if (e.target.value !== \"\") {\r\n      console.log(\"HERE 1\");\r\n      // Assign the original list to currentList\r\n      currentList = this.state.games;\r\n\r\n      // Use .filter() to determine which items should be displayed\r\n      // based on the search terms\r\n      newList = currentList.filter((item) => {\r\n        // change current item to lowercase\r\n        const lc = item.name.toLowerCase();\r\n        // change search term to lowercase\r\n        const filter = e.target.value.toLowerCase();\r\n        // check to see if the current list item includes the search term\r\n        // If it does, it will be added to newList. Using lowercase eliminates\r\n        // issues with capitalization in search terms and search content\r\n        return lc.includes(filter);\r\n      });\r\n      console.log(newList);\r\n    } else {\r\n      console.log(\"HERE 2\");\r\n      // If the search bar is empty, set newList to original task list\r\n      newList = this.state.games;\r\n    }\r\n    // Set the filtered state based on what our rules added to newList\r\n    this.setState({\r\n      filtered: newList,\r\n    });\r\n  }\r\n\r\n  onClickForSort(e) {\r\n    console.log(e.target.value);\r\n    if (e.target.value === \"Name\") {\r\n      let games = this.state.games;\r\n      games.sort((a, b) => {\r\n        var x = a.name.toLowerCase();\r\n        var y = b.name.toLowerCase();\r\n        if (this.state.ascendingName) {\r\n          if (x < y) {\r\n            return 1;\r\n          }\r\n          if (x > y) {\r\n            return -1;\r\n          }\r\n          return 0;\r\n        }\r\n        if (!this.state.ascendingName) {\r\n          if (x < y) {\r\n            return -1;\r\n          }\r\n          if (x > y) {\r\n            return 1;\r\n          }\r\n          return 0;\r\n        }\r\n      });\r\n      console.log(games);\r\n      let arrow = this.state.ascendingName ? (\r\n        <span>&darr;</span>\r\n      ) : (\r\n        <span>&uarr;</span>\r\n      );\r\n      this.setState({\r\n        games: games,\r\n        ascendingName: !this.state.ascendingName,\r\n        nameSortButtonValue: arrow,\r\n        availableSortButtonValue: \"Sort\",\r\n      });\r\n    }\r\n    if (e.target.value === \"Available\") {\r\n      let games = this.state.games;\r\n      games.sort((a, b) => {\r\n        var x = a.numberAvailable;\r\n        var y = b.numberAvailable;\r\n        if (this.state.ascendingAvailable) {\r\n          if (x < y) {\r\n            return 1;\r\n          }\r\n          if (x > y) {\r\n            return -1;\r\n          }\r\n          return 0;\r\n        }\r\n        if (!this.state.ascendingAvailable) {\r\n          if (x < y) {\r\n            return -1;\r\n          }\r\n          if (x > y) {\r\n            return 1;\r\n          }\r\n          return 0;\r\n        }\r\n      });\r\n      console.log(games);\r\n      let arrow = this.state.ascendingAvailable ? (\r\n        <span>&darr;</span>\r\n      ) : (\r\n        <span>&uarr;</span>\r\n      );\r\n      this.setState({\r\n        games: games,\r\n        ascendingAvailable: !this.state.ascendingAvailable,\r\n        availableSortButtonValue: arrow,\r\n        nameSortButtonValue: \"Sort\",\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.renderRedirect()}\r\n        <input\r\n          type=\"button\"\r\n          className=\"btn btn-primary\"\r\n          value=\"Add Game\"\r\n          onClick={this.setRedirect}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          placeholder=\"Search...\"\r\n          onChange={this.handleChange}\r\n        />\r\n        <table className=\"table\" style={{ marginTop: 20 }}>\r\n          <thead>\r\n            <tr>\r\n              <th style={{ paddingBottom: \"1.3%\" }}>Sr</th>\r\n              <th>\r\n                Name\r\n                <button\r\n                  className=\"btn btn-primary\"\r\n                  value=\"Name\"\r\n                  onClick={this.onClickForSort}\r\n                  style={{ \"margin-left\": \"5%\" }}\r\n                >\r\n                  {this.state.nameSortButtonValue}\r\n                </button>\r\n              </th>\r\n              <th style={{ paddingBottom: \"1.3%\" }}>Available In</th>\r\n              <th>\r\n                Number Available{\" \"}\r\n                <button\r\n                  className=\"btn btn-primary\"\r\n                  value=\"Available\"\r\n                  onClick={this.onClickForSort}\r\n                  style={{ \"margin-left\": \"5%\" }}\r\n                >\r\n                  {this.state.availableSortButtonValue}\r\n                </button>\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {this.state.filtered.map((game, index) => (\r\n              <Game\r\n                mode=\"games\"\r\n                _id={game._id}\r\n                sr={index + 1}\r\n                name={game.name}\r\n                availableIn={\r\n                  game.numberPS4Available > 0\r\n                    ? game.numberXBOXAvailable > 0\r\n                      ? [\"PS4\", \"XBOX One\"]\r\n                      : [\"PS4\"]\r\n                    : game.numberXBOXAvailable > 0\r\n                    ? [\"XBOX One\"]\r\n                    : [\"Not Available\"]\r\n                }\r\n                noAvailable={game.numberAvailable}\r\n              />\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Games;\r\n"]},"metadata":{},"sourceType":"module"}