{"ast":null,"code":"var _jsxFileName = \"C:\\\\Prayuj Folders\\\\Game-Renting-Service\\\\frontend\\\\src\\\\components\\\\issue.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Redirect } from \"react-router-dom\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Button from \"react-bootstrap/Button\";\nimport Toast from \"react-bootstrap/Toast\";\nimport LoadingSpinner from \"./loadingSpinner\";\n\nclass Issue extends Component {\n  constructor(props) {\n    super(props);\n\n    this.setRedirect = () => {\n      this.setState({\n        redirect_to_transaction: true\n      });\n    };\n\n    this.renderRedirect = () => {\n      if (this.state.redirect_to_transaction) {\n        return /*#__PURE__*/React.createElement(Redirect, {\n          push: true,\n          to: \"/transaction/\" + this.state.transactionid,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 357,\n            columnNumber: 14\n          }\n        });\n      }\n    };\n\n    if (props.match.params.mode === \"customer\") this.state = {\n      mode: \"customer\",\n      customer_id: props.match.params.id,\n      show: false,\n      games: [],\n      console: [],\n      redirect_to_transaction: false,\n      modal_show: false,\n      button_disable: true,\n      otp_issued: false,\n      verifying: false\n    };else if (props.match.params.mode === \"game\") this.state = {\n      mode: \"game\",\n      game_id: props.match.params.id,\n      show: false,\n      customers: [],\n      console: [],\n      redirect_to_transaction: false,\n      modal_show: false,\n      button_disable: true,\n      otp_issued: false,\n      verifying: false\n    };else if (props.match.params.mode === \"dashboard\") this.state = {\n      mode: \"dashboard\",\n      customers: [],\n      show: true,\n      games: [],\n      console: [],\n      redirect_to_transaction: false,\n      modal_show: false,\n      button_disable: true,\n      otp_issued: false,\n      verifying: false\n    };\n    this.handleForm = this.handleForm.bind(this);\n    this.handleGameChange = this.handleGameChange.bind(this);\n    this.confirmIssue = this.confirmIssue.bind(this);\n    this.modalClose = this.modalClose.bind(this);\n  }\n\n  componentDidMount() {\n    this.getCustomerDetail();\n    this.getGames();\n  }\n\n  componentDidUpdate() {\n    console.log(this.state.mode, this.props.match.params.mode);\n\n    if (this.state.mode !== this.props.match.params.mode) {\n      if (this.props.match.params.mode === \"customer\") this.setState({\n        mode: \"customer\",\n        customer_id: this.props.match.params.id\n      }, () => {\n        this.getCustomerDetail();\n        this.getGames();\n      });else if (this.props.match.params.mode === \"game\") this.setState({\n        mode: \"game\",\n        game_id: this.props.match.params.id\n      }, () => {\n        this.getCustomerDetail();\n        this.getGames();\n      });else if (this.props.match.params.mode === \"dashboard\") this.setState({\n        mode: \"dashboard\",\n        show: true\n      }, () => {\n        this.getCustomerDetail();\n        this.getGames();\n      });\n    }\n  }\n\n  getCustomerDetail() {\n    if (this.state.mode === \"customer\") {\n      axios.get(this.props.url + \"/customer/issue/\" + this.state.customer_id).then(res => {\n        console.log(res.data);\n        this.setState({\n          customers: [res.data]\n        });\n\n        if (res.data.length == 0) {\n          console.log(\"No Active Membership\");\n          this.setState({\n            show: false\n          });\n        } else if (res.data.plan === \"1Y4G\" && res.data.noOfGames < 4) {\n          console.log(\"4 game plan\");\n          this.setState({\n            show: true\n          });\n        } else if (res.data.plan === \"6M2G\" && res.data.noOfGames < 2) {\n          console.log(\"2 game plan\");\n          this.setState({\n            show: true\n          });\n        } else if (res.data.plan === \"3M1G\" && res.data.noOfGames < 1) {\n          console.log(\"1 game plan\");\n          this.setState({\n            show: true\n          });\n        } else {\n          console.log(\"5th condition\");\n          this.setState({\n            show: false\n          });\n        }\n\n        this.setState({\n          data: res.data[0]\n        });\n      }).catch(err => console.log(err));\n    } else {\n      axios.get(this.props.url + \"/customer\").then(res => {\n        let customers_to_display = [];\n\n        for (let i = 0; i < res.data.length; i++) {\n          if (res.data[i].latestMembership.active) {\n            if (res.data[i].latestMembership.plan === \"1Y4G\" && res.data[i].noOfGames < 4) {\n              console.log(\"4 game plan\");\n              customers_to_display.push(res.data[i]);\n            } else if (res.data[i].latestMembership.plan === \"6M2G\" && res.data[i].noOfGames < 2) {\n              console.log(\"2 game plan\");\n              customers_to_display.push(res.data[i]);\n            } else if (res.data[i].latestMembership.plan === \"3M1G\" && res.data[i].noOfGames < 1) {\n              console.log(\"1 game plan\");\n              customers_to_display.push(res.data[i]);\n            } else {\n              console.log(\"5th condition\");\n            }\n          }\n        }\n\n        this.setState({\n          customers: customers_to_display\n        });\n      }).catch(err => console.log(err));\n    }\n  }\n\n  getGames() {\n    if (this.state.mode === \"game\") axios.get(this.props.url + \"/game/\" + this.state.game_id).then(res => {\n      console.log(res.data);\n      this.setState({\n        games: [res.data]\n      });\n\n      if (res.data.numberAvailable > 0) {\n        this.setState({\n          show: true\n        });\n      }\n\n      if (res.data.numberPS4Available > 0 && res.data.numberXBOXAvailable > 0) {\n        this.setState({\n          console: [\"PS4\", \"XBOX One\"]\n        });\n      } else if (res.data.numberPS4Available > 0) {\n        this.setState({\n          console: [\"PS4\"]\n        });\n      } else if (res.data.numberXBOXAvailable > 0) {\n        this.setState({\n          console: [\"XBOX One\"]\n        });\n      } else {\n        this.setState({\n          console: []\n        });\n      }\n    });else axios.get(this.props.url + \"/game\").then(res => {\n      console.log(res.data);\n      this.setState({\n        games: res.data\n      });\n    });\n  }\n\n  modalClose() {\n    {\n      this.setState({\n        modal_show: false\n      });\n    }\n  }\n\n  confirmIssue(e) {\n    e.preventDefault();\n    console.log(e.target.game.value, e.target.console.value, e.target.customer.value);\n    this.setState({\n      otp_issued: false,\n      verifying: false\n    });\n\n    if (e.target.game.value != \"default\" && e.target.console.value != \"default\" && e.target.customer.value != \"default\") {\n      this.setState({\n        modal_show: true,\n        game_id: e.target.game.value,\n        selected_console: e.target.console.value,\n        customer_id: e.target.customer.value,\n        button_disable: false\n      });\n      console.log(this.props.url + \"/customer/generate_otp/id=\" + e.target.customer.value + \"&mode=Issuing\" + \"&game=\" + e.target.game.value + \"&console=\" + e.target.console.value);\n      axios.get(this.props.url + \"/customer/generate_otp/id=\" + e.target.customer.value + \"&mode=Issuing\" + \"&game=\" + e.target.game.value + \"&console=\" + e.target.console.value).then(res => {\n        console.log(res.data);\n        this.setState({\n          message: res.data.message,\n          otp_issued: true\n        });\n      });\n    } else this.setState({\n      modal_show: true\n    });\n  }\n\n  handleForm(e) {\n    e.preventDefault();\n    console.log(e.target.otp.value);\n    let customer_id = this.state.customer_id;\n    let game_id = this.state.game_id;\n    let game_console = this.state.selected_console;\n    let data = {\n      game_id: game_id,\n      console: game_console\n    };\n    this.setState({\n      verifying: true\n    });\n    console.log(JSON.stringify(data));\n    axios.post(this.props.url + \"/customer/verify_otp/\" + customer_id, {\n      otp: e.target.otp.value\n    }).then(res => {\n      console.log(res.data.isVerify);\n\n      if (res.data.isVerify) {\n        axios.post(this.props.url + \"/customer/issue/\" + customer_id, data).then(res => {\n          if (res.data.game != \"Not Available\") {\n            this.setState({\n              show: true\n            });\n            this.setState({\n              transactionid: res.data.game\n            });\n            this.setRedirect();\n          } else {\n            alert(res.data.game);\n          }\n        }).catch(err => {\n          alert(JSON.stringify(err));\n        });\n      } else {\n        alert(\"Incorrect OTP, Issue again\");\n      }\n    });\n  }\n\n  handleGameChange(e) {\n    console.log(e.target.value);\n    let games = this.state.games;\n\n    for (let i = 0; i < games.length; i++) {\n      if (games[i]._id === e.target.value) {\n        if (games[i].numberPS4Available > 0 && games[i].numberXBOXAvailable > 0) {\n          this.setState({\n            console: [\"PS4\", \"XBOX One\"]\n          });\n        } else if (games[i].numberPS4Available > 0) {\n          this.setState({\n            console: [\"PS4\"]\n          });\n        } else if (games[i].numberXBOXAvailable > 0) {\n          this.setState({\n            console: [\"XBOX One\"]\n          });\n        } else {\n          this.setState({\n            console: []\n          });\n        }\n      }\n    }\n  }\n\n  render() {\n    if (this.state.show) {\n      let customers;\n      let games;\n      let console = this.state.console.length == 0 ? /*#__PURE__*/React.createElement(\"select\", {\n        className: \"form-control\",\n        name: \"console\",\n        disabled: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"option\", {\n        value: \"default\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 13\n        }\n      }, \"Not Available\")) : /*#__PURE__*/React.createElement(\"select\", {\n        className: \"form-control\",\n        name: \"console\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 11\n        }\n      }, this.state.console.map(cons => /*#__PURE__*/React.createElement(\"option\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 15\n        }\n      }, cons)));\n\n      if (this.state.mode === \"customer\") {\n        customers = /*#__PURE__*/React.createElement(\"select\", {\n          className: \"form-control\",\n          name: \"customer\",\n          disabled: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 378,\n            columnNumber: 11\n          }\n        }, this.state.customers.map(customer => /*#__PURE__*/React.createElement(\"option\", {\n          value: customer._id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 380,\n            columnNumber: 15\n          }\n        }, customer.name)));\n        games = /*#__PURE__*/React.createElement(\"select\", {\n          className: \"form-control\",\n          name: \"game\",\n          onChange: this.handleGameChange,\n          required: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 385,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(\"option\", {\n          value: \"\",\n          selected: true,\n          disabled: true,\n          hidden: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 391,\n            columnNumber: 13\n          }\n        }, \"Choose a Game\"), this.state.games.map(game => /*#__PURE__*/React.createElement(\"option\", {\n          value: game._id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 395,\n            columnNumber: 15\n          }\n        }, game.name)));\n      }\n\n      if (this.state.mode === \"game\") {\n        customers = /*#__PURE__*/React.createElement(\"select\", {\n          className: \"form-control\",\n          name: \"customer\",\n          required: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 403,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(\"option\", {\n          value: \"\",\n          selected: true,\n          disabled: true,\n          hidden: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 404,\n            columnNumber: 13\n          }\n        }, \"Choose a Customer\"), this.state.customers.map(customer => /*#__PURE__*/React.createElement(\"option\", {\n          value: customer._id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 408,\n            columnNumber: 15\n          }\n        }, customer.name)));\n        games = /*#__PURE__*/React.createElement(\"select\", {\n          className: \"form-control\",\n          name: \"game\",\n          disabled: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 414,\n            columnNumber: 11\n          }\n        }, this.state.games.map(game => /*#__PURE__*/React.createElement(\"option\", {\n          value: game._id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 416,\n            columnNumber: 15\n          }\n        }, game.name)));\n      }\n\n      if (this.state.mode === \"dashboard\") {\n        customers = /*#__PURE__*/React.createElement(\"select\", {\n          className: \"form-control\",\n          name: \"customer\",\n          required: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 424,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(\"option\", {\n          value: \"\",\n          selected: true,\n          disabled: true,\n          hidden: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 425,\n            columnNumber: 13\n          }\n        }, \"Choose a Customer\"), this.state.customers.map(customer => /*#__PURE__*/React.createElement(\"option\", {\n          value: customer._id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 429,\n            columnNumber: 15\n          }\n        }, customer.name)));\n        games = /*#__PURE__*/React.createElement(\"select\", {\n          className: \"form-control\",\n          name: \"game\",\n          onChange: this.handleGameChange,\n          required: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 435,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(\"option\", {\n          value: \"\",\n          selected: true,\n          disabled: true,\n          hidden: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 441,\n            columnNumber: 13\n          }\n        }, \"Choose a Game\"), this.state.games.map(game => /*#__PURE__*/React.createElement(\"option\", {\n          value: game._id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 445,\n            columnNumber: 15\n          }\n        }, game.name)));\n      }\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 452,\n          columnNumber: 9\n        }\n      }, this.renderRedirect(), /*#__PURE__*/React.createElement(\"form\", {\n        onSubmit: this.confirmIssue,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 454,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 455,\n          columnNumber: 13\n        }\n      }, \"Customer Name\"), customers, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 457,\n          columnNumber: 13\n        }\n      }, \"Game\"), games, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 459,\n          columnNumber: 13\n        }\n      }, \"Console\"), console, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"submit\",\n        value: \"Issue OTP\",\n        className: \"btn btn-primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 461,\n          columnNumber: 13\n        }\n      })), /*#__PURE__*/React.createElement(Modal, {\n        show: this.state.modal_show,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 467,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Modal.Header, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 468,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Modal.Title, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 469,\n          columnNumber: 15\n        }\n      }, \"Game Issue\")), /*#__PURE__*/React.createElement(\"form\", {\n        onSubmit: this.handleForm,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 471,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Modal.Body, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 472,\n          columnNumber: 15\n        }\n      }, this.state.button_disable ? /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 474,\n          columnNumber: 19\n        }\n      }, \"Fill in Details\") : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 477,\n          columnNumber: 21\n        }\n      }, \"Enter OTP\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"number\",\n        name: \"otp\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 478,\n          columnNumber: 21\n        }\n      }), this.state.otp_issued ? /*#__PURE__*/React.createElement(Toast, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 480,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(Toast.Header, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 481,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"strong\", {\n        className: \"mr-auto\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 482,\n          columnNumber: 27\n        }\n      }, \"OTP\")), /*#__PURE__*/React.createElement(Toast.Body, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 484,\n          columnNumber: 25\n        }\n      }, this.state.message)) : /*#__PURE__*/React.createElement(LoadingSpinner, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 487,\n          columnNumber: 23\n        }\n      }))), /*#__PURE__*/React.createElement(Modal.Footer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 493,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        variant: \"secondary\",\n        onClick: this.modalClose,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 494,\n          columnNumber: 17\n        }\n      }, \"Close\"), /*#__PURE__*/React.createElement(Button, {\n        variant: \"primary\",\n        type: \"submit\",\n        disabled: this.state.button_disable,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 497,\n          columnNumber: 17\n        }\n      }, this.state.verifying ? /*#__PURE__*/React.createElement(LoadingSpinner, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 503,\n          columnNumber: 21\n        }\n      }) : \"Verify\")))));\n    } else return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 513,\n        columnNumber: 19\n      }\n    }, \"Can't Issue game\");\n  }\n\n}\n\nexport default Issue;","map":{"version":3,"sources":["C:/Prayuj Folders/Game-Renting-Service/frontend/src/components/issue.js"],"names":["React","Component","axios","Redirect","Modal","Button","Toast","LoadingSpinner","Issue","constructor","props","setRedirect","setState","redirect_to_transaction","renderRedirect","state","transactionid","match","params","mode","customer_id","id","show","games","console","modal_show","button_disable","otp_issued","verifying","game_id","customers","handleForm","bind","handleGameChange","confirmIssue","modalClose","componentDidMount","getCustomerDetail","getGames","componentDidUpdate","log","get","url","then","res","data","length","plan","noOfGames","catch","err","customers_to_display","i","latestMembership","active","push","numberAvailable","numberPS4Available","numberXBOXAvailable","e","preventDefault","target","game","value","customer","selected_console","message","otp","game_console","JSON","stringify","post","isVerify","alert","_id","render","map","cons","name"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Toast from \"react-bootstrap/Toast\";\r\nimport LoadingSpinner from \"./loadingSpinner\";\r\n\r\nclass Issue extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    if (props.match.params.mode === \"customer\")\r\n      this.state = {\r\n        mode: \"customer\",\r\n        customer_id: props.match.params.id,\r\n        show: false,\r\n        games: [],\r\n        console: [],\r\n        redirect_to_transaction: false,\r\n        modal_show: false,\r\n        button_disable: true,\r\n        otp_issued: false,\r\n        verifying: false,\r\n      };\r\n    else if (props.match.params.mode === \"game\")\r\n      this.state = {\r\n        mode: \"game\",\r\n        game_id: props.match.params.id,\r\n        show: false,\r\n        customers: [],\r\n        console: [],\r\n        redirect_to_transaction: false,\r\n        modal_show: false,\r\n        button_disable: true,\r\n        otp_issued: false,\r\n        verifying: false,\r\n      };\r\n    else if (props.match.params.mode === \"dashboard\")\r\n      this.state = {\r\n        mode: \"dashboard\",\r\n        customers: [],\r\n        show: true,\r\n        games: [],\r\n        console: [],\r\n        redirect_to_transaction: false,\r\n        modal_show: false,\r\n        button_disable: true,\r\n        otp_issued: false,\r\n        verifying: false,\r\n      };\r\n    this.handleForm = this.handleForm.bind(this);\r\n    this.handleGameChange = this.handleGameChange.bind(this);\r\n    this.confirmIssue = this.confirmIssue.bind(this);\r\n    this.modalClose = this.modalClose.bind(this);\r\n  }\r\n  componentDidMount() {\r\n    this.getCustomerDetail();\r\n    this.getGames();\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    console.log(this.state.mode, this.props.match.params.mode);\r\n    if (this.state.mode !== this.props.match.params.mode) {\r\n      if (this.props.match.params.mode === \"customer\")\r\n        this.setState(\r\n          {\r\n            mode: \"customer\",\r\n            customer_id: this.props.match.params.id,\r\n          },\r\n          () => {\r\n            this.getCustomerDetail();\r\n            this.getGames();\r\n          }\r\n        );\r\n      else if (this.props.match.params.mode === \"game\")\r\n        this.setState(\r\n          {\r\n            mode: \"game\",\r\n            game_id: this.props.match.params.id,\r\n          },\r\n          () => {\r\n            this.getCustomerDetail();\r\n            this.getGames();\r\n          }\r\n        );\r\n      else if (this.props.match.params.mode === \"dashboard\")\r\n        this.setState(\r\n          {\r\n            mode: \"dashboard\",\r\n            show: true,\r\n          },\r\n          () => {\r\n            this.getCustomerDetail();\r\n            this.getGames();\r\n          }\r\n        );\r\n    }\r\n  }\r\n\r\n  getCustomerDetail() {\r\n    if (this.state.mode === \"customer\") {\r\n      axios\r\n        .get(this.props.url + \"/customer/issue/\" + this.state.customer_id)\r\n        .then((res) => {\r\n          console.log(res.data);\r\n          this.setState({\r\n            customers: [res.data],\r\n          });\r\n          if (res.data.length == 0) {\r\n            console.log(\"No Active Membership\");\r\n            this.setState({\r\n              show: false,\r\n            });\r\n          } else if (res.data.plan === \"1Y4G\" && res.data.noOfGames < 4) {\r\n            console.log(\"4 game plan\");\r\n            this.setState({\r\n              show: true,\r\n            });\r\n          } else if (res.data.plan === \"6M2G\" && res.data.noOfGames < 2) {\r\n            console.log(\"2 game plan\");\r\n            this.setState({\r\n              show: true,\r\n            });\r\n          } else if (res.data.plan === \"3M1G\" && res.data.noOfGames < 1) {\r\n            console.log(\"1 game plan\");\r\n            this.setState({\r\n              show: true,\r\n            });\r\n          } else {\r\n            console.log(\"5th condition\");\r\n            this.setState({\r\n              show: false,\r\n            });\r\n          }\r\n          this.setState({\r\n            data: res.data[0],\r\n          });\r\n        })\r\n        .catch((err) => console.log(err));\r\n    } else {\r\n      axios\r\n        .get(this.props.url + \"/customer\")\r\n        .then((res) => {\r\n          let customers_to_display = [];\r\n          for (let i = 0; i < res.data.length; i++) {\r\n            if (res.data[i].latestMembership.active) {\r\n              if (\r\n                res.data[i].latestMembership.plan === \"1Y4G\" &&\r\n                res.data[i].noOfGames < 4\r\n              ) {\r\n                console.log(\"4 game plan\");\r\n                customers_to_display.push(res.data[i]);\r\n              } else if (\r\n                res.data[i].latestMembership.plan === \"6M2G\" &&\r\n                res.data[i].noOfGames < 2\r\n              ) {\r\n                console.log(\"2 game plan\");\r\n                customers_to_display.push(res.data[i]);\r\n              } else if (\r\n                res.data[i].latestMembership.plan === \"3M1G\" &&\r\n                res.data[i].noOfGames < 1\r\n              ) {\r\n                console.log(\"1 game plan\");\r\n                customers_to_display.push(res.data[i]);\r\n              } else {\r\n                console.log(\"5th condition\");\r\n              }\r\n            }\r\n          }\r\n          this.setState({\r\n            customers: customers_to_display,\r\n          });\r\n        })\r\n        .catch((err) => console.log(err));\r\n    }\r\n  }\r\n  getGames() {\r\n    if (this.state.mode === \"game\")\r\n      axios.get(this.props.url + \"/game/\" + this.state.game_id).then((res) => {\r\n        console.log(res.data);\r\n        this.setState({\r\n          games: [res.data],\r\n        });\r\n        if (res.data.numberAvailable > 0) {\r\n          this.setState({\r\n            show: true,\r\n          });\r\n        }\r\n        if (\r\n          res.data.numberPS4Available > 0 &&\r\n          res.data.numberXBOXAvailable > 0\r\n        ) {\r\n          this.setState({\r\n            console: [\"PS4\", \"XBOX One\"],\r\n          });\r\n        } else if (res.data.numberPS4Available > 0) {\r\n          this.setState({\r\n            console: [\"PS4\"],\r\n          });\r\n        } else if (res.data.numberXBOXAvailable > 0) {\r\n          this.setState({\r\n            console: [\"XBOX One\"],\r\n          });\r\n        } else {\r\n          this.setState({\r\n            console: [],\r\n          });\r\n        }\r\n      });\r\n    else\r\n      axios.get(this.props.url + \"/game\").then((res) => {\r\n        console.log(res.data);\r\n        this.setState({\r\n          games: res.data,\r\n        });\r\n      });\r\n  }\r\n\r\n  modalClose() {\r\n    {\r\n      this.setState({ modal_show: false });\r\n    }\r\n  }\r\n\r\n  confirmIssue(e) {\r\n    e.preventDefault();\r\n    console.log(\r\n      e.target.game.value,\r\n      e.target.console.value,\r\n      e.target.customer.value\r\n    );\r\n    this.setState({\r\n      otp_issued: false,\r\n      verifying: false,\r\n    });\r\n    if (\r\n      e.target.game.value != \"default\" &&\r\n      e.target.console.value != \"default\" &&\r\n      e.target.customer.value != \"default\"\r\n    ) {\r\n      this.setState({\r\n        modal_show: true,\r\n        game_id: e.target.game.value,\r\n        selected_console: e.target.console.value,\r\n        customer_id: e.target.customer.value,\r\n        button_disable: false,\r\n      });\r\n      console.log(\r\n        this.props.url +\r\n          \"/customer/generate_otp/id=\" +\r\n          e.target.customer.value +\r\n          \"&mode=Issuing\" +\r\n          \"&game=\" +\r\n          e.target.game.value +\r\n          \"&console=\" +\r\n          e.target.console.value\r\n      );\r\n      axios\r\n        .get(\r\n          this.props.url +\r\n            \"/customer/generate_otp/id=\" +\r\n            e.target.customer.value +\r\n            \"&mode=Issuing\" +\r\n            \"&game=\" +\r\n            e.target.game.value +\r\n            \"&console=\" +\r\n            e.target.console.value\r\n        )\r\n        .then((res) => {\r\n          console.log(res.data);\r\n          this.setState({ message: res.data.message, otp_issued: true });\r\n        });\r\n    } else this.setState({ modal_show: true });\r\n  }\r\n  handleForm(e) {\r\n    e.preventDefault();\r\n    console.log(e.target.otp.value);\r\n    let customer_id = this.state.customer_id;\r\n    let game_id = this.state.game_id;\r\n    let game_console = this.state.selected_console;\r\n    let data = {\r\n      game_id: game_id,\r\n      console: game_console,\r\n    };\r\n    this.setState({\r\n      verifying: true,\r\n    });\r\n    console.log(JSON.stringify(data));\r\n    axios\r\n      .post(this.props.url + \"/customer/verify_otp/\" + customer_id, {\r\n        otp: e.target.otp.value,\r\n      })\r\n      .then((res) => {\r\n        console.log(res.data.isVerify);\r\n        if (res.data.isVerify) {\r\n          axios\r\n            .post(this.props.url + \"/customer/issue/\" + customer_id, data)\r\n            .then((res) => {\r\n              if (res.data.game != \"Not Available\") {\r\n                this.setState({\r\n                  show: true,\r\n                });\r\n                this.setState({\r\n                  transactionid: res.data.game,\r\n                });\r\n                this.setRedirect();\r\n              } else {\r\n                alert(res.data.game);\r\n              }\r\n            })\r\n            .catch((err) => {\r\n              alert(JSON.stringify(err));\r\n            });\r\n        } else {\r\n          alert(\"Incorrect OTP, Issue again\");\r\n        }\r\n      });\r\n  }\r\n\r\n  handleGameChange(e) {\r\n    console.log(e.target.value);\r\n    let games = this.state.games;\r\n    for (let i = 0; i < games.length; i++) {\r\n      if (games[i]._id === e.target.value) {\r\n        if (\r\n          games[i].numberPS4Available > 0 &&\r\n          games[i].numberXBOXAvailable > 0\r\n        ) {\r\n          this.setState({\r\n            console: [\"PS4\", \"XBOX One\"],\r\n          });\r\n        } else if (games[i].numberPS4Available > 0) {\r\n          this.setState({\r\n            console: [\"PS4\"],\r\n          });\r\n        } else if (games[i].numberXBOXAvailable > 0) {\r\n          this.setState({\r\n            console: [\"XBOX One\"],\r\n          });\r\n        } else {\r\n          this.setState({\r\n            console: [],\r\n          });\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  setRedirect = () => {\r\n    this.setState({\r\n      redirect_to_transaction: true,\r\n    });\r\n  };\r\n\r\n  renderRedirect = () => {\r\n    if (this.state.redirect_to_transaction) {\r\n      return <Redirect push to={\"/transaction/\" + this.state.transactionid} />;\r\n    }\r\n  };\r\n  render() {\r\n    if (this.state.show) {\r\n      let customers;\r\n      let games;\r\n      let console =\r\n        this.state.console.length == 0 ? (\r\n          <select className=\"form-control\" name=\"console\" disabled={true}>\r\n            <option value=\"default\">Not Available</option>\r\n          </select>\r\n        ) : (\r\n          <select className=\"form-control\" name=\"console\">\r\n            {this.state.console.map((cons) => (\r\n              <option>{cons}</option>\r\n            ))}\r\n          </select>\r\n        );\r\n      if (this.state.mode === \"customer\") {\r\n        customers = (\r\n          <select className=\"form-control\" name=\"customer\" disabled={true}>\r\n            {this.state.customers.map((customer) => (\r\n              <option value={customer._id}>{customer.name}</option>\r\n            ))}\r\n          </select>\r\n        );\r\n        games = (\r\n          <select\r\n            className=\"form-control\"\r\n            name=\"game\"\r\n            onChange={this.handleGameChange}\r\n            required\r\n          >\r\n            <option value=\"\" selected disabled hidden>\r\n              Choose a Game\r\n            </option>\r\n            {this.state.games.map((game) => (\r\n              <option value={game._id}>{game.name}</option>\r\n            ))}\r\n          </select>\r\n        );\r\n      }\r\n\r\n      if (this.state.mode === \"game\") {\r\n        customers = (\r\n          <select className=\"form-control\" name=\"customer\" required>\r\n            <option value=\"\" selected disabled hidden>\r\n              Choose a Customer\r\n            </option>\r\n            {this.state.customers.map((customer) => (\r\n              <option value={customer._id}>{customer.name}</option>\r\n            ))}\r\n          </select>\r\n        );\r\n\r\n        games = (\r\n          <select className=\"form-control\" name=\"game\" disabled={true}>\r\n            {this.state.games.map((game) => (\r\n              <option value={game._id}>{game.name}</option>\r\n            ))}\r\n          </select>\r\n        );\r\n      }\r\n\r\n      if (this.state.mode === \"dashboard\") {\r\n        customers = (\r\n          <select className=\"form-control\" name=\"customer\" required>\r\n            <option value=\"\" selected disabled hidden>\r\n              Choose a Customer\r\n            </option>\r\n            {this.state.customers.map((customer) => (\r\n              <option value={customer._id}>{customer.name}</option>\r\n            ))}\r\n          </select>\r\n        );\r\n\r\n        games = (\r\n          <select\r\n            className=\"form-control\"\r\n            name=\"game\"\r\n            onChange={this.handleGameChange}\r\n            required\r\n          >\r\n            <option value=\"\" selected disabled hidden>\r\n              Choose a Game\r\n            </option>\r\n            {this.state.games.map((game) => (\r\n              <option value={game._id}>{game.name}</option>\r\n            ))}\r\n          </select>\r\n        );\r\n      }\r\n\r\n      return (\r\n        <div>\r\n          {this.renderRedirect()}\r\n          <form onSubmit={this.confirmIssue}>\r\n            <label>Customer Name</label>\r\n            {customers}\r\n            <label>Game</label>\r\n            {games}\r\n            <label>Console</label>\r\n            {console}\r\n            <input\r\n              type=\"submit\"\r\n              value=\"Issue OTP\"\r\n              className=\"btn btn-primary\"\r\n            />\r\n          </form>\r\n          <Modal show={this.state.modal_show}>\r\n            <Modal.Header>\r\n              <Modal.Title>Game Issue</Modal.Title>\r\n            </Modal.Header>\r\n            <form onSubmit={this.handleForm}>\r\n              <Modal.Body>\r\n                {this.state.button_disable ? (\r\n                  <p>Fill in Details</p>\r\n                ) : (\r\n                  <>\r\n                    <div>Enter OTP</div>\r\n                    <input type=\"number\" name=\"otp\" />\r\n                    {this.state.otp_issued ? (\r\n                      <Toast>\r\n                        <Toast.Header>\r\n                          <strong className=\"mr-auto\">OTP</strong>\r\n                        </Toast.Header>\r\n                        <Toast.Body>{this.state.message}</Toast.Body>\r\n                      </Toast>\r\n                    ) : (\r\n                      <LoadingSpinner></LoadingSpinner>\r\n                    )}\r\n                  </>\r\n                )}\r\n              </Modal.Body>\r\n\r\n              <Modal.Footer>\r\n                <Button variant=\"secondary\" onClick={this.modalClose}>\r\n                  Close\r\n                </Button>\r\n                <Button\r\n                  variant=\"primary\"\r\n                  type=\"submit\"\r\n                  disabled={this.state.button_disable}\r\n                >\r\n                  {this.state.verifying ? (\r\n                    <LoadingSpinner></LoadingSpinner>\r\n                  ) : (\r\n                    \"Verify\"\r\n                  )}\r\n                </Button>\r\n              </Modal.Footer>\r\n            </form>\r\n          </Modal>\r\n        </div>\r\n      );\r\n    } else return <div>Can't Issue game</div>;\r\n  }\r\n}\r\n\r\nexport default Issue;\r\n"]},"metadata":{},"sourceType":"module"}