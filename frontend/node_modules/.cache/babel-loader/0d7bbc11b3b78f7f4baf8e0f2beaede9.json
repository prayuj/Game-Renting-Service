{"ast":null,"code":"var _jsxFileName = \"C:\\\\Prayuj Folders\\\\Game-Renting-Service\\\\frontend\\\\src\\\\components\\\\customers.js\";\nimport React, { Component } from \"react\";\nimport Customer from \"./customer\";\nimport axios from \"axios\";\nimport { Redirect } from \"react-router-dom\";\n\nclass Customers extends Component {\n  constructor(props) {\n    super(props);\n\n    this.setRedirect = () => {\n      this.setState({\n        redirect: true\n      });\n    };\n\n    this.renderRedirect = () => {\n      if (this.state.redirect) {\n        return React.createElement(Redirect, {\n          push: true,\n          to: \"/add_customer/\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        });\n      }\n    };\n\n    this.state = {\n      customers: [],\n      search: \"\",\n      filtered: [],\n      ascendingName: true,\n      ascendingDOJ: true,\n      ascendingMembershipEnd: true,\n      ascendingNoOfGames: true,\n      nameSortButtonValue: \"Sort\",\n      DOJSortButtonValue: \"Sort\",\n      membershipEndSortButtonValue: React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, \"\\u2193\"),\n      noOfGamesSortButtonValue: \"Sort\"\n    };\n    this.getCustomers = this.getCustomers.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.onClickForSort = this.onClickForSort.bind(this);\n  }\n\n  componentDidMount() {\n    this.getCustomers();\n  }\n\n  getCustomers() {\n    axios.get(\"http://localhost:4000/customer/\").then(res => {\n      this.setState({\n        customers: res.data,\n        filtered: res.data\n      });\n    });\n  }\n\n  convertDate(dates) {\n    var date = new Date(dates);\n    var dd = String(date.getDate()).padStart(2, \"0\");\n    var mm = String(date.getMonth() + 1).padStart(2, \"0\"); //January is 0!\n\n    var yyyy = date.getFullYear();\n    var today = dd + \"/\" + mm + \"/\" + yyyy;\n    return today;\n  }\n\n  handleChange(e) {\n    // Variable to hold the original version of the list\n    let currentList = []; // Variable to hold the filtered list before putting into state\n\n    let newList = []; // If the search bar isn't empty\n\n    if (e.target.value !== \"\") {\n      //console.log(\"HERE 1\");\n      // Assign the original list to currentList\n      currentList = this.state.customers;\n      let firstList = [];\n      let secondList = []; // Use .filter() to determine which items should be displayed\n      // based on the search terms\n\n      firstList = currentList.filter(customer => {\n        // change current item to lowercase\n        const lc = customer.name.toLowerCase(); // change search term to lowercase\n\n        const filter = e.target.value.toLowerCase(); // check to see if the current list item includes the search term\n        // If it does, it will be added to newList. Using lowercase eliminates\n        // issues with capitalization in search terms and search content\n\n        return lc.includes(filter);\n      });\n      secondList = currentList.filter(customer => {\n        // change current item to lowercase\n        const lc = customer.name.toLowerCase(); // change search term to lowercase\n\n        const filter = e.target.value.toLowerCase(); // check to see if the current list item includes the search term\n        // If it does, it will be added to newList. Using lowercase eliminates\n        // issues with capitalization in search terms and search content\n\n        return lc.includes(filter);\n      });\n\n      for (let i = 0; i < secondList.length; i++) {\n        let flag = true;\n\n        for (let j = 0; j < firstList.length; j++) {\n          if (JSON.stringify(secondList[i]) === JSON.stringify(firstList[j])) flag = false;\n        }\n\n        if (flag) firstList.push(secondList[i]);\n      }\n\n      newList = firstList; //console.log(newList);\n    } else {\n      console.log(\"HERE 2\"); // If the search bar is empty, set newList to original task list\n\n      newList = this.state.customers;\n    } // Set the filtered state based on what our rules added to newList\n\n\n    this.setState({\n      filtered: newList\n    });\n  }\n\n  onClickForSort(e) {\n    console.log(e.target.value);\n\n    if (e.target.value === \"Name\") {\n      let customers = this.state.filtered;\n      customers.sort((a, b) => {\n        var x = a.name.toLowerCase();\n        var y = b.name.toLowerCase();\n\n        if (this.state.ascendingName) {\n          if (x < y) {\n            return 1;\n          }\n\n          if (x > y) {\n            return -1;\n          }\n\n          return 0;\n        }\n\n        if (!this.state.ascendingName) {\n          if (x < y) {\n            return -1;\n          }\n\n          if (x > y) {\n            return 1;\n          }\n\n          return 0;\n        }\n      });\n      console.log(customers);\n      let arrow = this.state.ascendingName ? React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, \"\\u2193\") : React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, \"\\u2191\");\n      this.setState({\n        filtered: customers,\n        ascendingName: !this.state.ascendingName,\n        nameSortButtonValue: arrow,\n        DOJSortButtonValue: \"Sort\",\n        membershipEndSortButtonValue: \"Sort\",\n        noOfGamesSortButtonValue: \"Sort\"\n      });\n    }\n\n    if (e.target.value === \"DOJ\") {\n      let customers = this.state.filtered;\n      customers.sort((a, b) => {\n        var x = a.dateOfJoin;\n        var y = b.dateOfJoin;\n\n        if (this.state.ascendingDOJ) {\n          if (x < y) {\n            return 1;\n          }\n\n          if (x > y) {\n            return -1;\n          }\n\n          return 0;\n        }\n\n        if (!this.state.ascendingDOJ) {\n          if (x < y) {\n            return -1;\n          }\n\n          if (x > y) {\n            return 1;\n          }\n\n          return 0;\n        }\n      });\n      console.log(customers);\n      let arrow = this.state.ascendingDOJ ? React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, \"\\u2193\") : React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, \"\\u2191\");\n      this.setState({\n        filtered: customers,\n        ascendingDOJ: !this.state.ascendingDOJ,\n        DOJSortButtonValue: arrow,\n        nameSortButtonValue: \"Sort\",\n        membershipEndSortButtonValue: \"Sort\",\n        noOfGamesSortButtonValue: \"Sort\"\n      });\n    }\n\n    if (e.target.value === \"Membership\") {\n      let customers = this.state.filtered;\n      customers.sort((a, b) => {\n        var x = a.latestMembership.end;\n        var y = b.latestMembership.end;\n\n        if (this.state.ascendingMembershipEnd) {\n          if (x < y) {\n            return 1;\n          }\n\n          if (x > y) {\n            return -1;\n          }\n\n          return 0;\n        }\n\n        if (!this.state.ascendingMembershipEnd) {\n          if (x < y) {\n            return -1;\n          }\n\n          if (x > y) {\n            return 1;\n          }\n\n          return 0;\n        }\n      });\n      console.log(customers);\n      let arrow = this.state.ascendingMembershipEnd ? React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      }, \"\\u2193\") : React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }, \"\\u2191\");\n      this.setState({\n        filtered: customers,\n        ascendingMembershipEnd: !this.state.ascendingMembershipEnd,\n        membershipEndSortButtonValue: arrow,\n        nameSortButtonValue: \"Sort\",\n        DOJSortButtonValue: \"Sort\",\n        noOfGamesSortButtonValue: \"Sort\"\n      });\n    }\n\n    if (e.target.value === \"No Of Games\") {\n      let customers = this.state.filtered;\n      customers.sort((a, b) => {\n        var x = a.noOfGames;\n        var y = b.noOfGames;\n\n        if (this.state.ascendingNoOfGames) {\n          if (x < y) {\n            return 1;\n          }\n\n          if (x > y) {\n            return -1;\n          }\n\n          return 0;\n        }\n\n        if (!this.state.ascendingNoOfGames) {\n          if (x < y) {\n            return -1;\n          }\n\n          if (x > y) {\n            return 1;\n          }\n\n          return 0;\n        }\n      });\n      console.log(customers);\n      let arrow = this.state.ascendingNoOfGames ? React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263\n        },\n        __self: this\n      }, \"\\u2193\") : React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265\n        },\n        __self: this\n      }, \"\\u2191\");\n      this.setState({\n        filtered: customers,\n        ascendingNoOfGames: !this.state.ascendingNoOfGames,\n        noOfGamesSortButtonValue: arrow,\n        nameSortButtonValue: \"Sort\",\n        DOJSortButtonValue: \"Sort\",\n        membershipEndSortButtonValue: \"Sort\"\n      });\n    }\n  }\n\n  render() {\n    console.log(this.state.filtered);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281\n      },\n      __self: this\n    }, this.renderRedirect(), React.createElement(\"input\", {\n      type: \"button\",\n      className: \"btn btn-primary\",\n      value: \"Add Customer\",\n      onClick: this.setRedirect,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      placeholder: \"Search...\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289\n      },\n      __self: this\n    }), React.createElement(\"table\", {\n      className: \"table\",\n      style: {\n        marginTop: 20\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      style: {\n        paddingBottom: \"1.3%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298\n      },\n      __self: this\n    }, \"Sr\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299\n      },\n      __self: this\n    }, \"Name\", React.createElement(\"button\", {\n      className: \"btn btn-primary\",\n      value: \"Name\",\n      onClick: this.onClickForSort,\n      style: {\n        \"margin-left\": \"5%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301\n      },\n      __self: this\n    }, this.state.nameSortButtonValue)), React.createElement(\"th\", {\n      style: {\n        paddingBottom: \"1.3%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310\n      },\n      __self: this\n    }, \"Email-ID\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311\n      },\n      __self: this\n    }, \"Date Of Joining\", React.createElement(\"button\", {\n      className: \"btn btn-primary\",\n      value: \"DOJ\",\n      onClick: this.onClickForSort,\n      style: {\n        \"margin-left\": \"5%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313\n      },\n      __self: this\n    }, this.state.DOJSortButtonValue)), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322\n      },\n      __self: this\n    }, \"Membership Expiry\", React.createElement(\"button\", {\n      className: \"btn btn-primary\",\n      value: \"Membership\",\n      onClick: this.onClickForSort,\n      style: {\n        \"margin-left\": \"5%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324\n      },\n      __self: this\n    }, this.state.membershipEndSortButtonValue)), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334\n      },\n      __self: this\n    }, \"NoOfGames\", React.createElement(\"button\", {\n      className: \"btn btn-primary\",\n      value: \"No Of Games\",\n      onClick: this.onClickForSort,\n      style: {\n        \"margin-left\": \"5%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336\n      },\n      __self: this\n    }, this.state.noOfGamesSortButtonValue)))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347\n      },\n      __self: this\n    }, this.state.filtered.map((filter, index) => React.createElement(Customer, {\n      mode: \"customers\",\n      id: filter._id,\n      sr: index + 1,\n      name: filter.name,\n      email: filter.email,\n      noOfGames: filter.noOfGames,\n      dateOfJoin: this.convertDate(filter.dateOfJoin),\n      dateOfMembershipEnd: filter.latestMembership.active ? this.convertDate(filter.latestMembership.end) : \"Expired Membership\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nexport default Customers;","map":{"version":3,"sources":["C:\\Prayuj Folders\\Game-Renting-Service\\frontend\\src\\components\\customers.js"],"names":["React","Component","Customer","axios","Redirect","Customers","constructor","props","setRedirect","setState","redirect","renderRedirect","state","customers","search","filtered","ascendingName","ascendingDOJ","ascendingMembershipEnd","ascendingNoOfGames","nameSortButtonValue","DOJSortButtonValue","membershipEndSortButtonValue","noOfGamesSortButtonValue","getCustomers","bind","handleChange","onClickForSort","componentDidMount","get","then","res","data","convertDate","dates","date","Date","dd","String","getDate","padStart","mm","getMonth","yyyy","getFullYear","today","e","currentList","newList","target","value","firstList","secondList","filter","customer","lc","name","toLowerCase","includes","i","length","flag","j","JSON","stringify","push","console","log","sort","a","b","x","y","arrow","dateOfJoin","latestMembership","end","noOfGames","render","marginTop","paddingBottom","map","index","_id","email","active"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport Customer from \"./customer\";\r\nimport axios from \"axios\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nclass Customers extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      customers: [],\r\n      search: \"\",\r\n      filtered: [],\r\n      ascendingName: true,\r\n      ascendingDOJ: true,\r\n      ascendingMembershipEnd: true,\r\n      ascendingNoOfGames: true,\r\n      nameSortButtonValue: \"Sort\",\r\n      DOJSortButtonValue: \"Sort\",\r\n      membershipEndSortButtonValue: <span>&darr;</span>,\r\n      noOfGamesSortButtonValue: \"Sort\"\r\n    };\r\n    this.getCustomers = this.getCustomers.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.onClickForSort = this.onClickForSort.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getCustomers();\r\n  }\r\n\r\n  getCustomers() {\r\n    axios.get(\"http://localhost:4000/customer/\").then(res => {\r\n      this.setState({\r\n        customers: res.data,\r\n        filtered: res.data\r\n      });\r\n    });\r\n  }\r\n\r\n  convertDate(dates) {\r\n    var date = new Date(dates);\r\n    var dd = String(date.getDate()).padStart(2, \"0\");\r\n    var mm = String(date.getMonth() + 1).padStart(2, \"0\"); //January is 0!\r\n    var yyyy = date.getFullYear();\r\n    var today = dd + \"/\" + mm + \"/\" + yyyy;\r\n    return today;\r\n  }\r\n\r\n  setRedirect = () => {\r\n    this.setState({\r\n      redirect: true\r\n    });\r\n  };\r\n\r\n  renderRedirect = () => {\r\n    if (this.state.redirect) {\r\n      return <Redirect push to={\"/add_customer/\"} />;\r\n    }\r\n  };\r\n\r\n  handleChange(e) {\r\n    // Variable to hold the original version of the list\r\n    let currentList = [];\r\n    // Variable to hold the filtered list before putting into state\r\n    let newList = [];\r\n\r\n    // If the search bar isn't empty\r\n    if (e.target.value !== \"\") {\r\n      //console.log(\"HERE 1\");\r\n      // Assign the original list to currentList\r\n      currentList = this.state.customers;\r\n      let firstList = [];\r\n      let secondList = [];\r\n\r\n      // Use .filter() to determine which items should be displayed\r\n      // based on the search terms\r\n      firstList = currentList.filter(customer => {\r\n        // change current item to lowercase\r\n        const lc = customer.name.toLowerCase();\r\n        // change search term to lowercase\r\n        const filter = e.target.value.toLowerCase();\r\n        // check to see if the current list item includes the search term\r\n        // If it does, it will be added to newList. Using lowercase eliminates\r\n        // issues with capitalization in search terms and search content\r\n        return lc.includes(filter);\r\n      });\r\n      secondList = currentList.filter(customer => {\r\n        // change current item to lowercase\r\n        const lc = customer.name.toLowerCase();\r\n        // change search term to lowercase\r\n        const filter = e.target.value.toLowerCase();\r\n        // check to see if the current list item includes the search term\r\n        // If it does, it will be added to newList. Using lowercase eliminates\r\n        // issues with capitalization in search terms and search content\r\n        return lc.includes(filter);\r\n      });\r\n      for (let i = 0; i < secondList.length; i++) {\r\n        let flag = true;\r\n        for (let j = 0; j < firstList.length; j++) {\r\n          if (JSON.stringify(secondList[i]) === JSON.stringify(firstList[j]))\r\n            flag = false;\r\n        }\r\n        if (flag) firstList.push(secondList[i]);\r\n      }\r\n      newList = firstList;\r\n      //console.log(newList);\r\n    } else {\r\n      console.log(\"HERE 2\");\r\n      // If the search bar is empty, set newList to original task list\r\n      newList = this.state.customers;\r\n    }\r\n    // Set the filtered state based on what our rules added to newList\r\n    this.setState({\r\n      filtered: newList\r\n    });\r\n  }\r\n\r\n  onClickForSort(e) {\r\n    console.log(e.target.value);\r\n    if (e.target.value === \"Name\") {\r\n      let customers = this.state.filtered;\r\n      customers.sort((a, b) => {\r\n        var x = a.name.toLowerCase();\r\n        var y = b.name.toLowerCase();\r\n        if (this.state.ascendingName) {\r\n          if (x < y) {\r\n            return 1;\r\n          }\r\n          if (x > y) {\r\n            return -1;\r\n          }\r\n          return 0;\r\n        }\r\n        if (!this.state.ascendingName) {\r\n          if (x < y) {\r\n            return -1;\r\n          }\r\n          if (x > y) {\r\n            return 1;\r\n          }\r\n          return 0;\r\n        }\r\n      });\r\n      console.log(customers);\r\n      let arrow = this.state.ascendingName ? (\r\n        <span>&darr;</span>\r\n      ) : (\r\n        <span>&uarr;</span>\r\n      );\r\n      this.setState({\r\n        filtered: customers,\r\n        ascendingName: !this.state.ascendingName,\r\n        nameSortButtonValue: arrow,\r\n        DOJSortButtonValue: \"Sort\",\r\n        membershipEndSortButtonValue: \"Sort\",\r\n        noOfGamesSortButtonValue: \"Sort\"\r\n      });\r\n    }\r\n    if (e.target.value === \"DOJ\") {\r\n      let customers = this.state.filtered;\r\n      customers.sort((a, b) => {\r\n        var x = a.dateOfJoin;\r\n        var y = b.dateOfJoin;\r\n        if (this.state.ascendingDOJ) {\r\n          if (x < y) {\r\n            return 1;\r\n          }\r\n          if (x > y) {\r\n            return -1;\r\n          }\r\n          return 0;\r\n        }\r\n        if (!this.state.ascendingDOJ) {\r\n          if (x < y) {\r\n            return -1;\r\n          }\r\n          if (x > y) {\r\n            return 1;\r\n          }\r\n          return 0;\r\n        }\r\n      });\r\n      console.log(customers);\r\n      let arrow = this.state.ascendingDOJ ? (\r\n        <span>&darr;</span>\r\n      ) : (\r\n        <span>&uarr;</span>\r\n      );\r\n      this.setState({\r\n        filtered: customers,\r\n        ascendingDOJ: !this.state.ascendingDOJ,\r\n        DOJSortButtonValue: arrow,\r\n        nameSortButtonValue: \"Sort\",\r\n        membershipEndSortButtonValue: \"Sort\",\r\n        noOfGamesSortButtonValue: \"Sort\"\r\n      });\r\n    }\r\n    if (e.target.value === \"Membership\") {\r\n      let customers = this.state.filtered;\r\n      customers.sort((a, b) => {\r\n        var x = a.latestMembership.end;\r\n        var y = b.latestMembership.end;\r\n        if (this.state.ascendingMembershipEnd) {\r\n          if (x < y) {\r\n            return 1;\r\n          }\r\n          if (x > y) {\r\n            return -1;\r\n          }\r\n          return 0;\r\n        }\r\n        if (!this.state.ascendingMembershipEnd) {\r\n          if (x < y) {\r\n            return -1;\r\n          }\r\n          if (x > y) {\r\n            return 1;\r\n          }\r\n          return 0;\r\n        }\r\n      });\r\n      console.log(customers);\r\n      let arrow = this.state.ascendingMembershipEnd ? (\r\n        <span>&darr;</span>\r\n      ) : (\r\n        <span>&uarr;</span>\r\n      );\r\n      this.setState({\r\n        filtered: customers,\r\n        ascendingMembershipEnd: !this.state.ascendingMembershipEnd,\r\n        membershipEndSortButtonValue: arrow,\r\n        nameSortButtonValue: \"Sort\",\r\n        DOJSortButtonValue: \"Sort\",\r\n        noOfGamesSortButtonValue: \"Sort\"\r\n      });\r\n    }\r\n    if (e.target.value === \"No Of Games\") {\r\n      let customers = this.state.filtered;\r\n      customers.sort((a, b) => {\r\n        var x = a.noOfGames;\r\n        var y = b.noOfGames;\r\n        if (this.state.ascendingNoOfGames) {\r\n          if (x < y) {\r\n            return 1;\r\n          }\r\n          if (x > y) {\r\n            return -1;\r\n          }\r\n          return 0;\r\n        }\r\n        if (!this.state.ascendingNoOfGames) {\r\n          if (x < y) {\r\n            return -1;\r\n          }\r\n          if (x > y) {\r\n            return 1;\r\n          }\r\n          return 0;\r\n        }\r\n      });\r\n      console.log(customers);\r\n      let arrow = this.state.ascendingNoOfGames ? (\r\n        <span>&darr;</span>\r\n      ) : (\r\n        <span>&uarr;</span>\r\n      );\r\n      this.setState({\r\n        filtered: customers,\r\n        ascendingNoOfGames: !this.state.ascendingNoOfGames,\r\n        noOfGamesSortButtonValue: arrow,\r\n        nameSortButtonValue: \"Sort\",\r\n        DOJSortButtonValue: \"Sort\",\r\n        membershipEndSortButtonValue: \"Sort\"\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    console.log(this.state.filtered);\r\n    return (\r\n      <div>\r\n        {this.renderRedirect()}\r\n        <input\r\n          type=\"button\"\r\n          className=\"btn btn-primary\"\r\n          value=\"Add Customer\"\r\n          onClick={this.setRedirect}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          placeholder=\"Search...\"\r\n          onChange={this.handleChange}\r\n        />\r\n        <table className=\"table\" style={{ marginTop: 20 }}>\r\n          <thead>\r\n            <tr>\r\n              <th style={{ paddingBottom: \"1.3%\" }}>Sr</th>\r\n              <th>\r\n                Name\r\n                <button\r\n                  className=\"btn btn-primary\"\r\n                  value=\"Name\"\r\n                  onClick={this.onClickForSort}\r\n                  style={{ \"margin-left\": \"5%\" }}\r\n                >\r\n                  {this.state.nameSortButtonValue}\r\n                </button>\r\n              </th>\r\n              <th style={{ paddingBottom: \"1.3%\" }}>Email-ID</th>\r\n              <th>\r\n                Date Of Joining\r\n                <button\r\n                  className=\"btn btn-primary\"\r\n                  value=\"DOJ\"\r\n                  onClick={this.onClickForSort}\r\n                  style={{ \"margin-left\": \"5%\" }}\r\n                >\r\n                  {this.state.DOJSortButtonValue}\r\n                </button>\r\n              </th>\r\n              <th>\r\n                Membership Expiry\r\n                <button\r\n                  className=\"btn btn-primary\"\r\n                  value=\"Membership\"\r\n                  onClick={this.onClickForSort}\r\n                  style={{ \"margin-left\": \"5%\" }}\r\n                >\r\n                  {this.state.membershipEndSortButtonValue}\r\n                </button>\r\n              </th>\r\n\r\n              <th>\r\n                NoOfGames\r\n                <button\r\n                  className=\"btn btn-primary\"\r\n                  value=\"No Of Games\"\r\n                  onClick={this.onClickForSort}\r\n                  style={{ \"margin-left\": \"5%\" }}\r\n                >\r\n                  {this.state.noOfGamesSortButtonValue}\r\n                </button>\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {this.state.filtered.map((filter, index) => (\r\n              <Customer\r\n                mode=\"customers\"\r\n                id={filter._id}\r\n                sr={index + 1}\r\n                name={filter.name}\r\n                email={filter.email}\r\n                noOfGames={filter.noOfGames}\r\n                dateOfJoin={this.convertDate(filter.dateOfJoin)}\r\n                dateOfMembershipEnd={\r\n                  filter.latestMembership.active\r\n                    ? this.convertDate(filter.latestMembership.end)\r\n                    : \"Expired Membership\"\r\n                }\r\n              />\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Customers;\r\n"]},"metadata":{},"sourceType":"module"}