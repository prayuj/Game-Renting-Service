{"ast":null,"code":"'use strict';\n\nvar has = require('has');\n\nvar toPrimitive = require('es-to-primitive/es6');\n\nvar keys = require('object-keys');\n\nvar GetIntrinsic = require('./GetIntrinsic');\n\nvar $TypeError = GetIntrinsic('%TypeError%');\nvar $SyntaxError = GetIntrinsic('%SyntaxError%');\nvar $Array = GetIntrinsic('%Array%');\nvar $String = GetIntrinsic('%String%');\nvar $Object = GetIntrinsic('%Object%');\nvar $Number = GetIntrinsic('%Number%');\nvar $Symbol = GetIntrinsic('%Symbol%', true);\nvar $RegExp = GetIntrinsic('%RegExp%');\nvar hasSymbols = !!$Symbol;\n\nvar assertRecord = require('./helpers/assertRecord');\n\nvar $isNaN = require('./helpers/isNaN');\n\nvar $isFinite = require('./helpers/isFinite');\n\nvar MAX_SAFE_INTEGER = $Number.MAX_SAFE_INTEGER || Math.pow(2, 53) - 1;\n\nvar assign = require('./helpers/assign');\n\nvar sign = require('./helpers/sign');\n\nvar mod = require('./helpers/mod');\n\nvar isPrimitive = require('./helpers/isPrimitive');\n\nvar parseInteger = parseInt;\n\nvar bind = require('function-bind');\n\nvar arraySlice = bind.call(Function.call, $Array.prototype.slice);\nvar strSlice = bind.call(Function.call, $String.prototype.slice);\nvar isBinary = bind.call(Function.call, $RegExp.prototype.test, /^0b[01]+$/i);\nvar isOctal = bind.call(Function.call, $RegExp.prototype.test, /^0o[0-7]+$/i);\nvar regexExec = bind.call(Function.call, $RegExp.prototype.exec);\nvar nonWS = [\"\\x85\", \"\\u200B\", \"\\uFFFE\"].join('');\nvar nonWSregex = new $RegExp('[' + nonWS + ']', 'g');\nvar hasNonWS = bind.call(Function.call, $RegExp.prototype.test, nonWSregex);\nvar invalidHexLiteral = /^[-+]0x[0-9a-f]+$/i;\nvar isInvalidHexLiteral = bind.call(Function.call, $RegExp.prototype.test, invalidHexLiteral);\nvar $charCodeAt = bind.call(Function.call, $String.prototype.charCodeAt);\nvar toStr = bind.call(Function.call, Object.prototype.toString);\nvar $NumberValueOf = bind.call(Function.call, GetIntrinsic('%NumberPrototype%').valueOf);\nvar $BooleanValueOf = bind.call(Function.call, GetIntrinsic('%BooleanPrototype%').valueOf);\nvar $StringValueOf = bind.call(Function.call, GetIntrinsic('%StringPrototype%').valueOf);\nvar $DateValueOf = bind.call(Function.call, GetIntrinsic('%DatePrototype%').valueOf);\nvar $floor = Math.floor;\nvar $abs = Math.abs;\nvar $ObjectCreate = Object.create;\nvar $gOPD = $Object.getOwnPropertyDescriptor;\nvar $isExtensible = $Object.isExtensible;\nvar $defineProperty = $Object.defineProperty; // whitespace from: http://es5.github.io/#x15.5.4.20\n// implementation from https://github.com/es-shims/es5-shim/blob/v3.4.0/es5-shim.js#L1304-L1324\n\nvar ws = [\"\\t\\n\\x0B\\f\\r \\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003\", \"\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028\", \"\\u2029\\uFEFF\"].join('');\nvar trimRegex = new RegExp('(^[' + ws + ']+)|([' + ws + ']+$)', 'g');\nvar replace = bind.call(Function.call, $String.prototype.replace);\n\nvar trim = function trim(value) {\n  return replace(value, trimRegex, '');\n};\n\nvar ES5 = require('./es5');\n\nvar hasRegExpMatcher = require('is-regex'); // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-abstract-operations\n\n\nvar ES6 = assign(assign({}, ES5), {\n  // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-call-f-v-args\n  Call: function Call(F, V) {\n    var args = arguments.length > 2 ? arguments[2] : [];\n\n    if (!this.IsCallable(F)) {\n      throw new $TypeError(F + ' is not a function');\n    }\n\n    return F.apply(V, args);\n  },\n  // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-toprimitive\n  ToPrimitive: toPrimitive,\n  // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-toboolean\n  // ToBoolean: ES5.ToBoolean,\n  // https://ecma-international.org/ecma-262/6.0/#sec-tonumber\n  ToNumber: function ToNumber(argument) {\n    var value = isPrimitive(argument) ? argument : toPrimitive(argument, $Number);\n\n    if (typeof value === 'symbol') {\n      throw new $TypeError('Cannot convert a Symbol value to a number');\n    }\n\n    if (typeof value === 'string') {\n      if (isBinary(value)) {\n        return this.ToNumber(parseInteger(strSlice(value, 2), 2));\n      } else if (isOctal(value)) {\n        return this.ToNumber(parseInteger(strSlice(value, 2), 8));\n      } else if (hasNonWS(value) || isInvalidHexLiteral(value)) {\n        return NaN;\n      } else {\n        var trimmed = trim(value);\n\n        if (trimmed !== value) {\n          return this.ToNumber(trimmed);\n        }\n      }\n    }\n\n    return $Number(value);\n  },\n  // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-tointeger\n  // ToInteger: ES5.ToNumber,\n  // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-toint32\n  // ToInt32: ES5.ToInt32,\n  // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-touint32\n  // ToUint32: ES5.ToUint32,\n  // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-toint16\n  ToInt16: function ToInt16(argument) {\n    var int16bit = this.ToUint16(argument);\n    return int16bit >= 0x8000 ? int16bit - 0x10000 : int16bit;\n  },\n  // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-touint16\n  // ToUint16: ES5.ToUint16,\n  // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-toint8\n  ToInt8: function ToInt8(argument) {\n    var int8bit = this.ToUint8(argument);\n    return int8bit >= 0x80 ? int8bit - 0x100 : int8bit;\n  },\n  // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-touint8\n  ToUint8: function ToUint8(argument) {\n    var number = this.ToNumber(argument);\n\n    if ($isNaN(number) || number === 0 || !$isFinite(number)) {\n      return 0;\n    }\n\n    var posInt = sign(number) * $floor($abs(number));\n    return mod(posInt, 0x100);\n  },\n  // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-touint8clamp\n  ToUint8Clamp: function ToUint8Clamp(argument) {\n    var number = this.ToNumber(argument);\n\n    if ($isNaN(number) || number <= 0) {\n      return 0;\n    }\n\n    if (number >= 0xFF) {\n      return 0xFF;\n    }\n\n    var f = $floor(argument);\n\n    if (f + 0.5 < number) {\n      return f + 1;\n    }\n\n    if (number < f + 0.5) {\n      return f;\n    }\n\n    if (f % 2 !== 0) {\n      return f + 1;\n    }\n\n    return f;\n  },\n  // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-tostring\n  ToString: function ToString(argument) {\n    if (typeof argument === 'symbol') {\n      throw new $TypeError('Cannot convert a Symbol value to a string');\n    }\n\n    return $String(argument);\n  },\n  // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-toobject\n  ToObject: function ToObject(value) {\n    this.RequireObjectCoercible(value);\n    return $Object(value);\n  },\n  // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-topropertykey\n  ToPropertyKey: function ToPropertyKey(argument) {\n    var key = this.ToPrimitive(argument, $String);\n    return typeof key === 'symbol' ? key : this.ToString(key);\n  },\n  // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength\n  ToLength: function ToLength(argument) {\n    var len = this.ToInteger(argument);\n\n    if (len <= 0) {\n      return 0;\n    } // includes converting -0 to +0\n\n\n    if (len > MAX_SAFE_INTEGER) {\n      return MAX_SAFE_INTEGER;\n    }\n\n    return len;\n  },\n  // https://ecma-international.org/ecma-262/6.0/#sec-canonicalnumericindexstring\n  CanonicalNumericIndexString: function CanonicalNumericIndexString(argument) {\n    if (toStr(argument) !== '[object String]') {\n      throw new $TypeError('must be a string');\n    }\n\n    if (argument === '-0') {\n      return -0;\n    }\n\n    var n = this.ToNumber(argument);\n\n    if (this.SameValue(this.ToString(n), argument)) {\n      return n;\n    }\n\n    return void 0;\n  },\n  // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-requireobjectcoercible\n  RequireObjectCoercible: ES5.CheckObjectCoercible,\n  // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-isarray\n  IsArray: $Array.isArray || function IsArray(argument) {\n    return toStr(argument) === '[object Array]';\n  },\n  // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-iscallable\n  // IsCallable: ES5.IsCallable,\n  // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-isconstructor\n  IsConstructor: function IsConstructor(argument) {\n    return typeof argument === 'function' && !!argument.prototype; // unfortunately there's no way to truly check this without try/catch `new argument`\n  },\n  // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-isextensible-o\n  IsExtensible: Object.preventExtensions ? function IsExtensible(obj) {\n    if (isPrimitive(obj)) {\n      return false;\n    }\n\n    return $isExtensible(obj);\n  } : function isExtensible(obj) {\n    return true;\n  },\n  // eslint-disable-line no-unused-vars\n  // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-isinteger\n  IsInteger: function IsInteger(argument) {\n    if (typeof argument !== 'number' || $isNaN(argument) || !$isFinite(argument)) {\n      return false;\n    }\n\n    var abs = $abs(argument);\n    return $floor(abs) === abs;\n  },\n  // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-ispropertykey\n  IsPropertyKey: function IsPropertyKey(argument) {\n    return typeof argument === 'string' || typeof argument === 'symbol';\n  },\n  // https://ecma-international.org/ecma-262/6.0/#sec-isregexp\n  IsRegExp: function IsRegExp(argument) {\n    if (!argument || typeof argument !== 'object') {\n      return false;\n    }\n\n    if (hasSymbols) {\n      var isRegExp = argument[$Symbol.match];\n\n      if (typeof isRegExp !== 'undefined') {\n        return ES5.ToBoolean(isRegExp);\n      }\n    }\n\n    return hasRegExpMatcher(argument);\n  },\n  // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevalue\n  // SameValue: ES5.SameValue,\n  // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero\n  SameValueZero: function SameValueZero(x, y) {\n    return x === y || $isNaN(x) && $isNaN(y);\n  },\n\n  /**\n   * 7.3.2 GetV (V, P)\n   * 1. Assert: IsPropertyKey(P) is true.\n   * 2. Let O be ToObject(V).\n   * 3. ReturnIfAbrupt(O).\n   * 4. Return O.[[Get]](P, V).\n   */\n  GetV: function GetV(V, P) {\n    // 7.3.2.1\n    if (!this.IsPropertyKey(P)) {\n      throw new $TypeError('Assertion failed: IsPropertyKey(P) is not true');\n    } // 7.3.2.2-3\n\n\n    var O = this.ToObject(V); // 7.3.2.4\n\n    return O[P];\n  },\n\n  /**\n   * 7.3.9 - https://ecma-international.org/ecma-262/6.0/#sec-getmethod\n   * 1. Assert: IsPropertyKey(P) is true.\n   * 2. Let func be GetV(O, P).\n   * 3. ReturnIfAbrupt(func).\n   * 4. If func is either undefined or null, return undefined.\n   * 5. If IsCallable(func) is false, throw a TypeError exception.\n   * 6. Return func.\n   */\n  GetMethod: function GetMethod(O, P) {\n    // 7.3.9.1\n    if (!this.IsPropertyKey(P)) {\n      throw new $TypeError('Assertion failed: IsPropertyKey(P) is not true');\n    } // 7.3.9.2\n\n\n    var func = this.GetV(O, P); // 7.3.9.4\n\n    if (func == null) {\n      return void 0;\n    } // 7.3.9.5\n\n\n    if (!this.IsCallable(func)) {\n      throw new $TypeError(P + 'is not a function');\n    } // 7.3.9.6\n\n\n    return func;\n  },\n\n  /**\n   * 7.3.1 Get (O, P) - https://ecma-international.org/ecma-262/6.0/#sec-get-o-p\n   * 1. Assert: Type(O) is Object.\n   * 2. Assert: IsPropertyKey(P) is true.\n   * 3. Return O.[[Get]](P, O).\n   */\n  Get: function Get(O, P) {\n    // 7.3.1.1\n    if (this.Type(O) !== 'Object') {\n      throw new $TypeError('Assertion failed: Type(O) is not Object');\n    } // 7.3.1.2\n\n\n    if (!this.IsPropertyKey(P)) {\n      throw new $TypeError('Assertion failed: IsPropertyKey(P) is not true');\n    } // 7.3.1.3\n\n\n    return O[P];\n  },\n  Type: function Type(x) {\n    if (typeof x === 'symbol') {\n      return 'Symbol';\n    }\n\n    return ES5.Type(x);\n  },\n  // https://ecma-international.org/ecma-262/6.0/#sec-speciesconstructor\n  SpeciesConstructor: function SpeciesConstructor(O, defaultConstructor) {\n    if (this.Type(O) !== 'Object') {\n      throw new $TypeError('Assertion failed: Type(O) is not Object');\n    }\n\n    var C = O.constructor;\n\n    if (typeof C === 'undefined') {\n      return defaultConstructor;\n    }\n\n    if (this.Type(C) !== 'Object') {\n      throw new $TypeError('O.constructor is not an Object');\n    }\n\n    var S = hasSymbols && $Symbol.species ? C[$Symbol.species] : void 0;\n\n    if (S == null) {\n      return defaultConstructor;\n    }\n\n    if (this.IsConstructor(S)) {\n      return S;\n    }\n\n    throw new $TypeError('no constructor found');\n  },\n  // https://ecma-international.org/ecma-262/6.0/#sec-completepropertydescriptor\n  CompletePropertyDescriptor: function CompletePropertyDescriptor(Desc) {\n    assertRecord(this, 'Property Descriptor', 'Desc', Desc);\n\n    if (this.IsGenericDescriptor(Desc) || this.IsDataDescriptor(Desc)) {\n      if (!has(Desc, '[[Value]]')) {\n        Desc['[[Value]]'] = void 0;\n      }\n\n      if (!has(Desc, '[[Writable]]')) {\n        Desc['[[Writable]]'] = false;\n      }\n    } else {\n      if (!has(Desc, '[[Get]]')) {\n        Desc['[[Get]]'] = void 0;\n      }\n\n      if (!has(Desc, '[[Set]]')) {\n        Desc['[[Set]]'] = void 0;\n      }\n    }\n\n    if (!has(Desc, '[[Enumerable]]')) {\n      Desc['[[Enumerable]]'] = false;\n    }\n\n    if (!has(Desc, '[[Configurable]]')) {\n      Desc['[[Configurable]]'] = false;\n    }\n\n    return Desc;\n  },\n  // https://ecma-international.org/ecma-262/6.0/#sec-set-o-p-v-throw\n  Set: function Set(O, P, V, Throw) {\n    if (this.Type(O) !== 'Object') {\n      throw new $TypeError('O must be an Object');\n    }\n\n    if (!this.IsPropertyKey(P)) {\n      throw new $TypeError('P must be a Property Key');\n    }\n\n    if (this.Type(Throw) !== 'Boolean') {\n      throw new $TypeError('Throw must be a Boolean');\n    }\n\n    if (Throw) {\n      O[P] = V;\n      return true;\n    } else {\n      try {\n        O[P] = V;\n      } catch (e) {\n        return false;\n      }\n    }\n  },\n  // https://ecma-international.org/ecma-262/6.0/#sec-hasownproperty\n  HasOwnProperty: function HasOwnProperty(O, P) {\n    if (this.Type(O) !== 'Object') {\n      throw new $TypeError('O must be an Object');\n    }\n\n    if (!this.IsPropertyKey(P)) {\n      throw new $TypeError('P must be a Property Key');\n    }\n\n    return has(O, P);\n  },\n  // https://ecma-international.org/ecma-262/6.0/#sec-hasproperty\n  HasProperty: function HasProperty(O, P) {\n    if (this.Type(O) !== 'Object') {\n      throw new $TypeError('O must be an Object');\n    }\n\n    if (!this.IsPropertyKey(P)) {\n      throw new $TypeError('P must be a Property Key');\n    }\n\n    return P in O;\n  },\n  // https://ecma-international.org/ecma-262/6.0/#sec-isconcatspreadable\n  IsConcatSpreadable: function IsConcatSpreadable(O) {\n    if (this.Type(O) !== 'Object') {\n      return false;\n    }\n\n    if (hasSymbols && typeof $Symbol.isConcatSpreadable === 'symbol') {\n      var spreadable = this.Get(O, Symbol.isConcatSpreadable);\n\n      if (typeof spreadable !== 'undefined') {\n        return this.ToBoolean(spreadable);\n      }\n    }\n\n    return this.IsArray(O);\n  },\n  // https://ecma-international.org/ecma-262/6.0/#sec-invoke\n  Invoke: function Invoke(O, P) {\n    if (!this.IsPropertyKey(P)) {\n      throw new $TypeError('P must be a Property Key');\n    }\n\n    var argumentsList = arraySlice(arguments, 2);\n    var func = this.GetV(O, P);\n    return this.Call(func, O, argumentsList);\n  },\n  // https://ecma-international.org/ecma-262/6.0/#sec-getiterator\n  GetIterator: function GetIterator(obj, method) {\n    if (!hasSymbols) {\n      throw new SyntaxError('ES.GetIterator depends on native iterator support.');\n    }\n\n    var actualMethod = method;\n\n    if (arguments.length < 2) {\n      actualMethod = this.GetMethod(obj, $Symbol.iterator);\n    }\n\n    var iterator = this.Call(actualMethod, obj);\n\n    if (this.Type(iterator) !== 'Object') {\n      throw new $TypeError('iterator must return an object');\n    }\n\n    return iterator;\n  },\n  // https://ecma-international.org/ecma-262/6.0/#sec-iteratornext\n  IteratorNext: function IteratorNext(iterator, value) {\n    var result = this.Invoke(iterator, 'next', arguments.length < 2 ? [] : [value]);\n\n    if (this.Type(result) !== 'Object') {\n      throw new $TypeError('iterator next must return an object');\n    }\n\n    return result;\n  },\n  // https://ecma-international.org/ecma-262/6.0/#sec-iteratorcomplete\n  IteratorComplete: function IteratorComplete(iterResult) {\n    if (this.Type(iterResult) !== 'Object') {\n      throw new $TypeError('Assertion failed: Type(iterResult) is not Object');\n    }\n\n    return this.ToBoolean(this.Get(iterResult, 'done'));\n  },\n  // https://ecma-international.org/ecma-262/6.0/#sec-iteratorvalue\n  IteratorValue: function IteratorValue(iterResult) {\n    if (this.Type(iterResult) !== 'Object') {\n      throw new $TypeError('Assertion failed: Type(iterResult) is not Object');\n    }\n\n    return this.Get(iterResult, 'value');\n  },\n  // https://ecma-international.org/ecma-262/6.0/#sec-iteratorstep\n  IteratorStep: function IteratorStep(iterator) {\n    var result = this.IteratorNext(iterator);\n    var done = this.IteratorComplete(result);\n    return done === true ? false : result;\n  },\n  // https://ecma-international.org/ecma-262/6.0/#sec-iteratorclose\n  IteratorClose: function IteratorClose(iterator, completion) {\n    if (this.Type(iterator) !== 'Object') {\n      throw new $TypeError('Assertion failed: Type(iterator) is not Object');\n    }\n\n    if (!this.IsCallable(completion)) {\n      throw new $TypeError('Assertion failed: completion is not a thunk for a Completion Record');\n    }\n\n    var completionThunk = completion;\n    var iteratorReturn = this.GetMethod(iterator, 'return');\n\n    if (typeof iteratorReturn === 'undefined') {\n      return completionThunk();\n    }\n\n    var completionRecord;\n\n    try {\n      var innerResult = this.Call(iteratorReturn, iterator, []);\n    } catch (e) {\n      // if we hit here, then \"e\" is the innerResult completion that needs re-throwing\n      // if the completion is of type \"throw\", this will throw.\n      completionRecord = completionThunk();\n      completionThunk = null; // ensure it's not called twice.\n      // if not, then return the innerResult completion\n\n      throw e;\n    }\n\n    completionRecord = completionThunk(); // if innerResult worked, then throw if the completion does\n\n    completionThunk = null; // ensure it's not called twice.\n\n    if (this.Type(innerResult) !== 'Object') {\n      throw new $TypeError('iterator .return must return an object');\n    }\n\n    return completionRecord;\n  },\n  // https://ecma-international.org/ecma-262/6.0/#sec-createiterresultobject\n  CreateIterResultObject: function CreateIterResultObject(value, done) {\n    if (this.Type(done) !== 'Boolean') {\n      throw new $TypeError('Assertion failed: Type(done) is not Boolean');\n    }\n\n    return {\n      value: value,\n      done: done\n    };\n  },\n  // https://ecma-international.org/ecma-262/6.0/#sec-regexpexec\n  RegExpExec: function RegExpExec(R, S) {\n    if (this.Type(R) !== 'Object') {\n      throw new $TypeError('R must be an Object');\n    }\n\n    if (this.Type(S) !== 'String') {\n      throw new $TypeError('S must be a String');\n    }\n\n    var exec = this.Get(R, 'exec');\n\n    if (this.IsCallable(exec)) {\n      var result = this.Call(exec, R, [S]);\n\n      if (result === null || this.Type(result) === 'Object') {\n        return result;\n      }\n\n      throw new $TypeError('\"exec\" method must return `null` or an Object');\n    }\n\n    return regexExec(R, S);\n  },\n  // https://ecma-international.org/ecma-262/6.0/#sec-arrayspeciescreate\n  ArraySpeciesCreate: function ArraySpeciesCreate(originalArray, length) {\n    if (!this.IsInteger(length) || length < 0) {\n      throw new $TypeError('Assertion failed: length must be an integer >= 0');\n    }\n\n    var len = length === 0 ? 0 : length;\n    var C;\n    var isArray = this.IsArray(originalArray);\n\n    if (isArray) {\n      C = this.Get(originalArray, 'constructor'); // TODO: figure out how to make a cross-realm normal Array, a same-realm Array\n      // if (this.IsConstructor(C)) {\n      // \tif C is another realm's Array, C = undefined\n      // \tObject.getPrototypeOf(Object.getPrototypeOf(Object.getPrototypeOf(Array))) === null ?\n      // }\n\n      if (this.Type(C) === 'Object' && hasSymbols && $Symbol.species) {\n        C = this.Get(C, $Symbol.species);\n\n        if (C === null) {\n          C = void 0;\n        }\n      }\n    }\n\n    if (typeof C === 'undefined') {\n      return $Array(len);\n    }\n\n    if (!this.IsConstructor(C)) {\n      throw new $TypeError('C must be a constructor');\n    }\n\n    return new C(len); // this.Construct(C, len);\n  },\n  CreateDataProperty: function CreateDataProperty(O, P, V) {\n    if (this.Type(O) !== 'Object') {\n      throw new $TypeError('Assertion failed: Type(O) is not Object');\n    }\n\n    if (!this.IsPropertyKey(P)) {\n      throw new $TypeError('Assertion failed: IsPropertyKey(P) is not true');\n    }\n\n    var oldDesc = $gOPD(O, P);\n    var extensible = oldDesc || typeof $isExtensible !== 'function' || $isExtensible(O);\n    var immutable = oldDesc && (!oldDesc.writable || !oldDesc.configurable);\n\n    if (immutable || !extensible) {\n      return false;\n    }\n\n    var newDesc = {\n      configurable: true,\n      enumerable: true,\n      value: V,\n      writable: true\n    };\n    $defineProperty(O, P, newDesc);\n    return true;\n  },\n  // https://ecma-international.org/ecma-262/6.0/#sec-createdatapropertyorthrow\n  CreateDataPropertyOrThrow: function CreateDataPropertyOrThrow(O, P, V) {\n    if (this.Type(O) !== 'Object') {\n      throw new $TypeError('Assertion failed: Type(O) is not Object');\n    }\n\n    if (!this.IsPropertyKey(P)) {\n      throw new $TypeError('Assertion failed: IsPropertyKey(P) is not true');\n    }\n\n    var success = this.CreateDataProperty(O, P, V);\n\n    if (!success) {\n      throw new $TypeError('unable to create data property');\n    }\n\n    return success;\n  },\n  // https://www.ecma-international.org/ecma-262/6.0/#sec-objectcreate\n  ObjectCreate: function ObjectCreate(proto, internalSlotsList) {\n    if (proto !== null && this.Type(proto) !== 'Object') {\n      throw new $TypeError('Assertion failed: proto must be null or an object');\n    }\n\n    var slots = arguments.length < 2 ? [] : internalSlotsList;\n\n    if (slots.length > 0) {\n      throw new $SyntaxError('es-abstract does not yet support internal slots');\n    }\n\n    if (proto === null && !$ObjectCreate) {\n      throw new $SyntaxError('native Object.create support is required to create null objects');\n    }\n\n    return $ObjectCreate(proto);\n  },\n  // https://ecma-international.org/ecma-262/6.0/#sec-advancestringindex\n  AdvanceStringIndex: function AdvanceStringIndex(S, index, unicode) {\n    if (this.Type(S) !== 'String') {\n      throw new $TypeError('S must be a String');\n    }\n\n    if (!this.IsInteger(index) || index < 0 || index > MAX_SAFE_INTEGER) {\n      throw new $TypeError('Assertion failed: length must be an integer >= 0 and <= 2**53');\n    }\n\n    if (this.Type(unicode) !== 'Boolean') {\n      throw new $TypeError('Assertion failed: unicode must be a Boolean');\n    }\n\n    if (!unicode) {\n      return index + 1;\n    }\n\n    var length = S.length;\n\n    if (index + 1 >= length) {\n      return index + 1;\n    }\n\n    var first = $charCodeAt(S, index);\n\n    if (first < 0xD800 || first > 0xDBFF) {\n      return index + 1;\n    }\n\n    var second = $charCodeAt(S, index + 1);\n\n    if (second < 0xDC00 || second > 0xDFFF) {\n      return index + 1;\n    }\n\n    return index + 2;\n  },\n  // https://www.ecma-international.org/ecma-262/6.0/#sec-createmethodproperty\n  CreateMethodProperty: function CreateMethodProperty(O, P, V) {\n    if (this.Type(O) !== 'Object') {\n      throw new $TypeError('Assertion failed: Type(O) is not Object');\n    }\n\n    if (!this.IsPropertyKey(P)) {\n      throw new $TypeError('Assertion failed: IsPropertyKey(P) is not true');\n    }\n\n    var newDesc = {\n      configurable: true,\n      enumerable: false,\n      value: V,\n      writable: true\n    };\n    return !!$defineProperty(O, P, newDesc);\n  },\n  // https://www.ecma-international.org/ecma-262/6.0/#sec-definepropertyorthrow\n  DefinePropertyOrThrow: function DefinePropertyOrThrow(O, P, desc) {\n    if (this.Type(O) !== 'Object') {\n      throw new $TypeError('Assertion failed: Type(O) is not Object');\n    }\n\n    if (!this.IsPropertyKey(P)) {\n      throw new $TypeError('Assertion failed: IsPropertyKey(P) is not true');\n    }\n\n    return !!$defineProperty(O, P, desc);\n  },\n  // https://www.ecma-international.org/ecma-262/6.0/#sec-deletepropertyorthrow\n  DeletePropertyOrThrow: function DeletePropertyOrThrow(O, P) {\n    if (this.Type(O) !== 'Object') {\n      throw new $TypeError('Assertion failed: Type(O) is not Object');\n    }\n\n    if (!this.IsPropertyKey(P)) {\n      throw new $TypeError('Assertion failed: IsPropertyKey(P) is not true');\n    }\n\n    var success = delete O[P];\n\n    if (!success) {\n      throw new TypeError('Attempt to delete property failed.');\n    }\n\n    return success;\n  },\n  // https://www.ecma-international.org/ecma-262/6.0/#sec-enumerableownnames\n  EnumerableOwnNames: function EnumerableOwnNames(O) {\n    if (this.Type(O) !== 'Object') {\n      throw new $TypeError('Assertion failed: Type(O) is not Object');\n    }\n\n    return keys(O);\n  },\n  // https://ecma-international.org/ecma-262/6.0/#sec-properties-of-the-number-prototype-object\n  thisNumberValue: function thisNumberValue(value) {\n    if (this.Type(value) === 'Number') {\n      return value;\n    }\n\n    return $NumberValueOf(value);\n  },\n  // https://ecma-international.org/ecma-262/6.0/#sec-properties-of-the-boolean-prototype-object\n  thisBooleanValue: function thisBooleanValue(value) {\n    if (this.Type(value) === 'Boolean') {\n      return value;\n    }\n\n    return $BooleanValueOf(value);\n  },\n  // https://ecma-international.org/ecma-262/6.0/#sec-properties-of-the-string-prototype-object\n  thisStringValue: function thisStringValue(value) {\n    if (this.Type(value) === 'String') {\n      return value;\n    }\n\n    return $StringValueOf(value);\n  },\n  // https://ecma-international.org/ecma-262/6.0/#sec-properties-of-the-date-prototype-object\n  thisTimeValue: function thisTimeValue(value) {\n    return $DateValueOf(value);\n  }\n});\ndelete ES6.CheckObjectCoercible; // renamed in ES6 to RequireObjectCoercible\n\nmodule.exports = ES6;","map":{"version":3,"sources":["C:/Prayuj Folders/Game-Renting-Service/frontend/node_modules/es-abstract/es2015.js"],"names":["has","require","toPrimitive","keys","GetIntrinsic","$TypeError","$SyntaxError","$Array","$String","$Object","$Number","$Symbol","$RegExp","hasSymbols","assertRecord","$isNaN","$isFinite","MAX_SAFE_INTEGER","Math","pow","assign","sign","mod","isPrimitive","parseInteger","parseInt","bind","arraySlice","call","Function","prototype","slice","strSlice","isBinary","test","isOctal","regexExec","exec","nonWS","join","nonWSregex","hasNonWS","invalidHexLiteral","isInvalidHexLiteral","$charCodeAt","charCodeAt","toStr","Object","toString","$NumberValueOf","valueOf","$BooleanValueOf","$StringValueOf","$DateValueOf","$floor","floor","$abs","abs","$ObjectCreate","create","$gOPD","getOwnPropertyDescriptor","$isExtensible","isExtensible","$defineProperty","defineProperty","ws","trimRegex","RegExp","replace","trim","value","ES5","hasRegExpMatcher","ES6","Call","F","V","args","arguments","length","IsCallable","apply","ToPrimitive","ToNumber","argument","NaN","trimmed","ToInt16","int16bit","ToUint16","ToInt8","int8bit","ToUint8","number","posInt","ToUint8Clamp","f","ToString","ToObject","RequireObjectCoercible","ToPropertyKey","key","ToLength","len","ToInteger","CanonicalNumericIndexString","n","SameValue","CheckObjectCoercible","IsArray","isArray","IsConstructor","IsExtensible","preventExtensions","obj","IsInteger","IsPropertyKey","IsRegExp","isRegExp","match","ToBoolean","SameValueZero","x","y","GetV","P","O","GetMethod","func","Get","Type","SpeciesConstructor","defaultConstructor","C","constructor","S","species","CompletePropertyDescriptor","Desc","IsGenericDescriptor","IsDataDescriptor","Set","Throw","e","HasOwnProperty","HasProperty","IsConcatSpreadable","isConcatSpreadable","spreadable","Symbol","Invoke","argumentsList","GetIterator","method","SyntaxError","actualMethod","iterator","IteratorNext","result","IteratorComplete","iterResult","IteratorValue","IteratorStep","done","IteratorClose","completion","completionThunk","iteratorReturn","completionRecord","innerResult","CreateIterResultObject","RegExpExec","R","ArraySpeciesCreate","originalArray","CreateDataProperty","oldDesc","extensible","immutable","writable","configurable","newDesc","enumerable","CreateDataPropertyOrThrow","success","ObjectCreate","proto","internalSlotsList","slots","AdvanceStringIndex","index","unicode","first","second","CreateMethodProperty","DefinePropertyOrThrow","desc","DeletePropertyOrThrow","TypeError","EnumerableOwnNames","thisNumberValue","thisBooleanValue","thisStringValue","thisTimeValue","module","exports"],"mappings":"AAAA;;AAEA,IAAIA,GAAG,GAAGC,OAAO,CAAC,KAAD,CAAjB;;AACA,IAAIC,WAAW,GAAGD,OAAO,CAAC,qBAAD,CAAzB;;AACA,IAAIE,IAAI,GAAGF,OAAO,CAAC,aAAD,CAAlB;;AAEA,IAAIG,YAAY,GAAGH,OAAO,CAAC,gBAAD,CAA1B;;AAEA,IAAII,UAAU,GAAGD,YAAY,CAAC,aAAD,CAA7B;AACA,IAAIE,YAAY,GAAGF,YAAY,CAAC,eAAD,CAA/B;AACA,IAAIG,MAAM,GAAGH,YAAY,CAAC,SAAD,CAAzB;AACA,IAAII,OAAO,GAAGJ,YAAY,CAAC,UAAD,CAA1B;AACA,IAAIK,OAAO,GAAGL,YAAY,CAAC,UAAD,CAA1B;AACA,IAAIM,OAAO,GAAGN,YAAY,CAAC,UAAD,CAA1B;AACA,IAAIO,OAAO,GAAGP,YAAY,CAAC,UAAD,EAAa,IAAb,CAA1B;AACA,IAAIQ,OAAO,GAAGR,YAAY,CAAC,UAAD,CAA1B;AAEA,IAAIS,UAAU,GAAG,CAAC,CAACF,OAAnB;;AAEA,IAAIG,YAAY,GAAGb,OAAO,CAAC,wBAAD,CAA1B;;AACA,IAAIc,MAAM,GAAGd,OAAO,CAAC,iBAAD,CAApB;;AACA,IAAIe,SAAS,GAAGf,OAAO,CAAC,oBAAD,CAAvB;;AACA,IAAIgB,gBAAgB,GAAGP,OAAO,CAACO,gBAAR,IAA4BC,IAAI,CAACC,GAAL,CAAS,CAAT,EAAY,EAAZ,IAAkB,CAArE;;AAEA,IAAIC,MAAM,GAAGnB,OAAO,CAAC,kBAAD,CAApB;;AACA,IAAIoB,IAAI,GAAGpB,OAAO,CAAC,gBAAD,CAAlB;;AACA,IAAIqB,GAAG,GAAGrB,OAAO,CAAC,eAAD,CAAjB;;AACA,IAAIsB,WAAW,GAAGtB,OAAO,CAAC,uBAAD,CAAzB;;AACA,IAAIuB,YAAY,GAAGC,QAAnB;;AACA,IAAIC,IAAI,GAAGzB,OAAO,CAAC,eAAD,CAAlB;;AACA,IAAI0B,UAAU,GAAGD,IAAI,CAACE,IAAL,CAAUC,QAAQ,CAACD,IAAnB,EAAyBrB,MAAM,CAACuB,SAAP,CAAiBC,KAA1C,CAAjB;AACA,IAAIC,QAAQ,GAAGN,IAAI,CAACE,IAAL,CAAUC,QAAQ,CAACD,IAAnB,EAAyBpB,OAAO,CAACsB,SAAR,CAAkBC,KAA3C,CAAf;AACA,IAAIE,QAAQ,GAAGP,IAAI,CAACE,IAAL,CAAUC,QAAQ,CAACD,IAAnB,EAAyBhB,OAAO,CAACkB,SAAR,CAAkBI,IAA3C,EAAiD,YAAjD,CAAf;AACA,IAAIC,OAAO,GAAGT,IAAI,CAACE,IAAL,CAAUC,QAAQ,CAACD,IAAnB,EAAyBhB,OAAO,CAACkB,SAAR,CAAkBI,IAA3C,EAAiD,aAAjD,CAAd;AACA,IAAIE,SAAS,GAAGV,IAAI,CAACE,IAAL,CAAUC,QAAQ,CAACD,IAAnB,EAAyBhB,OAAO,CAACkB,SAAR,CAAkBO,IAA3C,CAAhB;AACA,IAAIC,KAAK,GAAG,CAAC,MAAD,EAAW,QAAX,EAAqB,QAArB,EAA+BC,IAA/B,CAAoC,EAApC,CAAZ;AACA,IAAIC,UAAU,GAAG,IAAI5B,OAAJ,CAAY,MAAM0B,KAAN,GAAc,GAA1B,EAA+B,GAA/B,CAAjB;AACA,IAAIG,QAAQ,GAAGf,IAAI,CAACE,IAAL,CAAUC,QAAQ,CAACD,IAAnB,EAAyBhB,OAAO,CAACkB,SAAR,CAAkBI,IAA3C,EAAiDM,UAAjD,CAAf;AACA,IAAIE,iBAAiB,GAAG,oBAAxB;AACA,IAAIC,mBAAmB,GAAGjB,IAAI,CAACE,IAAL,CAAUC,QAAQ,CAACD,IAAnB,EAAyBhB,OAAO,CAACkB,SAAR,CAAkBI,IAA3C,EAAiDQ,iBAAjD,CAA1B;AACA,IAAIE,WAAW,GAAGlB,IAAI,CAACE,IAAL,CAAUC,QAAQ,CAACD,IAAnB,EAAyBpB,OAAO,CAACsB,SAAR,CAAkBe,UAA3C,CAAlB;AAEA,IAAIC,KAAK,GAAGpB,IAAI,CAACE,IAAL,CAAUC,QAAQ,CAACD,IAAnB,EAAyBmB,MAAM,CAACjB,SAAP,CAAiBkB,QAA1C,CAAZ;AAEA,IAAIC,cAAc,GAAGvB,IAAI,CAACE,IAAL,CAAUC,QAAQ,CAACD,IAAnB,EAAyBxB,YAAY,CAAC,mBAAD,CAAZ,CAAkC8C,OAA3D,CAArB;AACA,IAAIC,eAAe,GAAGzB,IAAI,CAACE,IAAL,CAAUC,QAAQ,CAACD,IAAnB,EAAyBxB,YAAY,CAAC,oBAAD,CAAZ,CAAmC8C,OAA5D,CAAtB;AACA,IAAIE,cAAc,GAAG1B,IAAI,CAACE,IAAL,CAAUC,QAAQ,CAACD,IAAnB,EAAyBxB,YAAY,CAAC,mBAAD,CAAZ,CAAkC8C,OAA3D,CAArB;AACA,IAAIG,YAAY,GAAG3B,IAAI,CAACE,IAAL,CAAUC,QAAQ,CAACD,IAAnB,EAAyBxB,YAAY,CAAC,iBAAD,CAAZ,CAAgC8C,OAAzD,CAAnB;AAEA,IAAII,MAAM,GAAGpC,IAAI,CAACqC,KAAlB;AACA,IAAIC,IAAI,GAAGtC,IAAI,CAACuC,GAAhB;AAEA,IAAIC,aAAa,GAAGX,MAAM,CAACY,MAA3B;AACA,IAAIC,KAAK,GAAGnD,OAAO,CAACoD,wBAApB;AAEA,IAAIC,aAAa,GAAGrD,OAAO,CAACsD,YAA5B;AAEA,IAAIC,eAAe,GAAGvD,OAAO,CAACwD,cAA9B,C,CAEA;AACA;;AACA,IAAIC,EAAE,GAAG,CACR,uDADQ,EAER,oEAFQ,EAGR,cAHQ,EAIP3B,IAJO,CAIF,EAJE,CAAT;AAKA,IAAI4B,SAAS,GAAG,IAAIC,MAAJ,CAAW,QAAQF,EAAR,GAAa,QAAb,GAAwBA,EAAxB,GAA6B,MAAxC,EAAgD,GAAhD,CAAhB;AACA,IAAIG,OAAO,GAAG3C,IAAI,CAACE,IAAL,CAAUC,QAAQ,CAACD,IAAnB,EAAyBpB,OAAO,CAACsB,SAAR,CAAkBuC,OAA3C,CAAd;;AACA,IAAIC,IAAI,GAAG,SAAPA,IAAO,CAAUC,KAAV,EAAiB;AAC3B,SAAOF,OAAO,CAACE,KAAD,EAAQJ,SAAR,EAAmB,EAAnB,CAAd;AACA,CAFD;;AAIA,IAAIK,GAAG,GAAGvE,OAAO,CAAC,OAAD,CAAjB;;AAEA,IAAIwE,gBAAgB,GAAGxE,OAAO,CAAC,UAAD,CAA9B,C,CAEA;;;AACA,IAAIyE,GAAG,GAAGtD,MAAM,CAACA,MAAM,CAAC,EAAD,EAAKoD,GAAL,CAAP,EAAkB;AAEjC;AACAG,EAAAA,IAAI,EAAE,SAASA,IAAT,CAAcC,CAAd,EAAiBC,CAAjB,EAAoB;AACzB,QAAIC,IAAI,GAAGC,SAAS,CAACC,MAAV,GAAmB,CAAnB,GAAuBD,SAAS,CAAC,CAAD,CAAhC,GAAsC,EAAjD;;AACA,QAAI,CAAC,KAAKE,UAAL,CAAgBL,CAAhB,CAAL,EAAyB;AACxB,YAAM,IAAIvE,UAAJ,CAAeuE,CAAC,GAAG,oBAAnB,CAAN;AACA;;AACD,WAAOA,CAAC,CAACM,KAAF,CAAQL,CAAR,EAAWC,IAAX,CAAP;AACA,GATgC;AAWjC;AACAK,EAAAA,WAAW,EAAEjF,WAZoB;AAcjC;AACA;AAEA;AACAkF,EAAAA,QAAQ,EAAE,SAASA,QAAT,CAAkBC,QAAlB,EAA4B;AACrC,QAAId,KAAK,GAAGhD,WAAW,CAAC8D,QAAD,CAAX,GAAwBA,QAAxB,GAAmCnF,WAAW,CAACmF,QAAD,EAAW3E,OAAX,CAA1D;;AACA,QAAI,OAAO6D,KAAP,KAAiB,QAArB,EAA+B;AAC9B,YAAM,IAAIlE,UAAJ,CAAe,2CAAf,CAAN;AACA;;AACD,QAAI,OAAOkE,KAAP,KAAiB,QAArB,EAA+B;AAC9B,UAAItC,QAAQ,CAACsC,KAAD,CAAZ,EAAqB;AACpB,eAAO,KAAKa,QAAL,CAAc5D,YAAY,CAACQ,QAAQ,CAACuC,KAAD,EAAQ,CAAR,CAAT,EAAqB,CAArB,CAA1B,CAAP;AACA,OAFD,MAEO,IAAIpC,OAAO,CAACoC,KAAD,CAAX,EAAoB;AAC1B,eAAO,KAAKa,QAAL,CAAc5D,YAAY,CAACQ,QAAQ,CAACuC,KAAD,EAAQ,CAAR,CAAT,EAAqB,CAArB,CAA1B,CAAP;AACA,OAFM,MAEA,IAAI9B,QAAQ,CAAC8B,KAAD,CAAR,IAAmB5B,mBAAmB,CAAC4B,KAAD,CAA1C,EAAmD;AACzD,eAAOe,GAAP;AACA,OAFM,MAEA;AACN,YAAIC,OAAO,GAAGjB,IAAI,CAACC,KAAD,CAAlB;;AACA,YAAIgB,OAAO,KAAKhB,KAAhB,EAAuB;AACtB,iBAAO,KAAKa,QAAL,CAAcG,OAAd,CAAP;AACA;AACD;AACD;;AACD,WAAO7E,OAAO,CAAC6D,KAAD,CAAd;AACA,GAtCgC;AAwCjC;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACAiB,EAAAA,OAAO,EAAE,SAASA,OAAT,CAAiBH,QAAjB,EAA2B;AACnC,QAAII,QAAQ,GAAG,KAAKC,QAAL,CAAcL,QAAd,CAAf;AACA,WAAOI,QAAQ,IAAI,MAAZ,GAAqBA,QAAQ,GAAG,OAAhC,GAA0CA,QAAjD;AACA,GArDgC;AAuDjC;AACA;AAEA;AACAE,EAAAA,MAAM,EAAE,SAASA,MAAT,CAAgBN,QAAhB,EAA0B;AACjC,QAAIO,OAAO,GAAG,KAAKC,OAAL,CAAaR,QAAb,CAAd;AACA,WAAOO,OAAO,IAAI,IAAX,GAAkBA,OAAO,GAAG,KAA5B,GAAoCA,OAA3C;AACA,GA9DgC;AAgEjC;AACAC,EAAAA,OAAO,EAAE,SAASA,OAAT,CAAiBR,QAAjB,EAA2B;AACnC,QAAIS,MAAM,GAAG,KAAKV,QAAL,CAAcC,QAAd,CAAb;;AACA,QAAItE,MAAM,CAAC+E,MAAD,CAAN,IAAkBA,MAAM,KAAK,CAA7B,IAAkC,CAAC9E,SAAS,CAAC8E,MAAD,CAAhD,EAA0D;AAAE,aAAO,CAAP;AAAW;;AACvE,QAAIC,MAAM,GAAG1E,IAAI,CAACyE,MAAD,CAAJ,GAAexC,MAAM,CAACE,IAAI,CAACsC,MAAD,CAAL,CAAlC;AACA,WAAOxE,GAAG,CAACyE,MAAD,EAAS,KAAT,CAAV;AACA,GAtEgC;AAwEjC;AACAC,EAAAA,YAAY,EAAE,SAASA,YAAT,CAAsBX,QAAtB,EAAgC;AAC7C,QAAIS,MAAM,GAAG,KAAKV,QAAL,CAAcC,QAAd,CAAb;;AACA,QAAItE,MAAM,CAAC+E,MAAD,CAAN,IAAkBA,MAAM,IAAI,CAAhC,EAAmC;AAAE,aAAO,CAAP;AAAW;;AAChD,QAAIA,MAAM,IAAI,IAAd,EAAoB;AAAE,aAAO,IAAP;AAAc;;AACpC,QAAIG,CAAC,GAAG3C,MAAM,CAAC+B,QAAD,CAAd;;AACA,QAAIY,CAAC,GAAG,GAAJ,GAAUH,MAAd,EAAsB;AAAE,aAAOG,CAAC,GAAG,CAAX;AAAe;;AACvC,QAAIH,MAAM,GAAGG,CAAC,GAAG,GAAjB,EAAsB;AAAE,aAAOA,CAAP;AAAW;;AACnC,QAAIA,CAAC,GAAG,CAAJ,KAAU,CAAd,EAAiB;AAAE,aAAOA,CAAC,GAAG,CAAX;AAAe;;AAClC,WAAOA,CAAP;AACA,GAlFgC;AAoFjC;AACAC,EAAAA,QAAQ,EAAE,SAASA,QAAT,CAAkBb,QAAlB,EAA4B;AACrC,QAAI,OAAOA,QAAP,KAAoB,QAAxB,EAAkC;AACjC,YAAM,IAAIhF,UAAJ,CAAe,2CAAf,CAAN;AACA;;AACD,WAAOG,OAAO,CAAC6E,QAAD,CAAd;AACA,GA1FgC;AA4FjC;AACAc,EAAAA,QAAQ,EAAE,SAASA,QAAT,CAAkB5B,KAAlB,EAAyB;AAClC,SAAK6B,sBAAL,CAA4B7B,KAA5B;AACA,WAAO9D,OAAO,CAAC8D,KAAD,CAAd;AACA,GAhGgC;AAkGjC;AACA8B,EAAAA,aAAa,EAAE,SAASA,aAAT,CAAuBhB,QAAvB,EAAiC;AAC/C,QAAIiB,GAAG,GAAG,KAAKnB,WAAL,CAAiBE,QAAjB,EAA2B7E,OAA3B,CAAV;AACA,WAAO,OAAO8F,GAAP,KAAe,QAAf,GAA0BA,GAA1B,GAAgC,KAAKJ,QAAL,CAAcI,GAAd,CAAvC;AACA,GAtGgC;AAwGjC;AACAC,EAAAA,QAAQ,EAAE,SAASA,QAAT,CAAkBlB,QAAlB,EAA4B;AACrC,QAAImB,GAAG,GAAG,KAAKC,SAAL,CAAepB,QAAf,CAAV;;AACA,QAAImB,GAAG,IAAI,CAAX,EAAc;AAAE,aAAO,CAAP;AAAW,KAFU,CAET;;;AAC5B,QAAIA,GAAG,GAAGvF,gBAAV,EAA4B;AAAE,aAAOA,gBAAP;AAA0B;;AACxD,WAAOuF,GAAP;AACA,GA9GgC;AAgHjC;AACAE,EAAAA,2BAA2B,EAAE,SAASA,2BAAT,CAAqCrB,QAArC,EAA+C;AAC3E,QAAIvC,KAAK,CAACuC,QAAD,CAAL,KAAoB,iBAAxB,EAA2C;AAC1C,YAAM,IAAIhF,UAAJ,CAAe,kBAAf,CAAN;AACA;;AACD,QAAIgF,QAAQ,KAAK,IAAjB,EAAuB;AAAE,aAAO,CAAC,CAAR;AAAY;;AACrC,QAAIsB,CAAC,GAAG,KAAKvB,QAAL,CAAcC,QAAd,CAAR;;AACA,QAAI,KAAKuB,SAAL,CAAe,KAAKV,QAAL,CAAcS,CAAd,CAAf,EAAiCtB,QAAjC,CAAJ,EAAgD;AAAE,aAAOsB,CAAP;AAAW;;AAC7D,WAAO,KAAK,CAAZ;AACA,GAzHgC;AA2HjC;AACAP,EAAAA,sBAAsB,EAAE5B,GAAG,CAACqC,oBA5HK;AA8HjC;AACAC,EAAAA,OAAO,EAAEvG,MAAM,CAACwG,OAAP,IAAkB,SAASD,OAAT,CAAiBzB,QAAjB,EAA2B;AACrD,WAAOvC,KAAK,CAACuC,QAAD,CAAL,KAAoB,gBAA3B;AACA,GAjIgC;AAmIjC;AACA;AAEA;AACA2B,EAAAA,aAAa,EAAE,SAASA,aAAT,CAAuB3B,QAAvB,EAAiC;AAC/C,WAAO,OAAOA,QAAP,KAAoB,UAApB,IAAkC,CAAC,CAACA,QAAQ,CAACvD,SAApD,CAD+C,CACgB;AAC/D,GAzIgC;AA2IjC;AACAmF,EAAAA,YAAY,EAAElE,MAAM,CAACmE,iBAAP,GACX,SAASD,YAAT,CAAsBE,GAAtB,EAA2B;AAC5B,QAAI5F,WAAW,CAAC4F,GAAD,CAAf,EAAsB;AACrB,aAAO,KAAP;AACA;;AACD,WAAOrD,aAAa,CAACqD,GAAD,CAApB;AACA,GANY,GAOX,SAASpD,YAAT,CAAsBoD,GAAtB,EAA2B;AAAE,WAAO,IAAP;AAAc,GAnJb;AAmJe;AAEhD;AACAC,EAAAA,SAAS,EAAE,SAASA,SAAT,CAAmB/B,QAAnB,EAA6B;AACvC,QAAI,OAAOA,QAAP,KAAoB,QAApB,IAAgCtE,MAAM,CAACsE,QAAD,CAAtC,IAAoD,CAACrE,SAAS,CAACqE,QAAD,CAAlE,EAA8E;AAC7E,aAAO,KAAP;AACA;;AACD,QAAI5B,GAAG,GAAGD,IAAI,CAAC6B,QAAD,CAAd;AACA,WAAO/B,MAAM,CAACG,GAAD,CAAN,KAAgBA,GAAvB;AACA,GA5JgC;AA8JjC;AACA4D,EAAAA,aAAa,EAAE,SAASA,aAAT,CAAuBhC,QAAvB,EAAiC;AAC/C,WAAO,OAAOA,QAAP,KAAoB,QAApB,IAAgC,OAAOA,QAAP,KAAoB,QAA3D;AACA,GAjKgC;AAmKjC;AACAiC,EAAAA,QAAQ,EAAE,SAASA,QAAT,CAAkBjC,QAAlB,EAA4B;AACrC,QAAI,CAACA,QAAD,IAAa,OAAOA,QAAP,KAAoB,QAArC,EAA+C;AAC9C,aAAO,KAAP;AACA;;AACD,QAAIxE,UAAJ,EAAgB;AACf,UAAI0G,QAAQ,GAAGlC,QAAQ,CAAC1E,OAAO,CAAC6G,KAAT,CAAvB;;AACA,UAAI,OAAOD,QAAP,KAAoB,WAAxB,EAAqC;AACpC,eAAO/C,GAAG,CAACiD,SAAJ,CAAcF,QAAd,CAAP;AACA;AACD;;AACD,WAAO9C,gBAAgB,CAACY,QAAD,CAAvB;AACA,GA/KgC;AAiLjC;AACA;AAEA;AACAqC,EAAAA,aAAa,EAAE,SAASA,aAAT,CAAuBC,CAAvB,EAA0BC,CAA1B,EAA6B;AAC3C,WAAQD,CAAC,KAAKC,CAAP,IAAc7G,MAAM,CAAC4G,CAAD,CAAN,IAAa5G,MAAM,CAAC6G,CAAD,CAAxC;AACA,GAvLgC;;AAyLjC;;;;;;;AAOAC,EAAAA,IAAI,EAAE,SAASA,IAAT,CAAchD,CAAd,EAAiBiD,CAAjB,EAAoB;AACzB;AACA,QAAI,CAAC,KAAKT,aAAL,CAAmBS,CAAnB,CAAL,EAA4B;AAC3B,YAAM,IAAIzH,UAAJ,CAAe,gDAAf,CAAN;AACA,KAJwB,CAMzB;;;AACA,QAAI0H,CAAC,GAAG,KAAK5B,QAAL,CAActB,CAAd,CAAR,CAPyB,CASzB;;AACA,WAAOkD,CAAC,CAACD,CAAD,CAAR;AACA,GA3MgC;;AA6MjC;;;;;;;;;AASAE,EAAAA,SAAS,EAAE,SAASA,SAAT,CAAmBD,CAAnB,EAAsBD,CAAtB,EAAyB;AACnC;AACA,QAAI,CAAC,KAAKT,aAAL,CAAmBS,CAAnB,CAAL,EAA4B;AAC3B,YAAM,IAAIzH,UAAJ,CAAe,gDAAf,CAAN;AACA,KAJkC,CAMnC;;;AACA,QAAI4H,IAAI,GAAG,KAAKJ,IAAL,CAAUE,CAAV,EAAaD,CAAb,CAAX,CAPmC,CASnC;;AACA,QAAIG,IAAI,IAAI,IAAZ,EAAkB;AACjB,aAAO,KAAK,CAAZ;AACA,KAZkC,CAcnC;;;AACA,QAAI,CAAC,KAAKhD,UAAL,CAAgBgD,IAAhB,CAAL,EAA4B;AAC3B,YAAM,IAAI5H,UAAJ,CAAeyH,CAAC,GAAG,mBAAnB,CAAN;AACA,KAjBkC,CAmBnC;;;AACA,WAAOG,IAAP;AACA,GA3OgC;;AA6OjC;;;;;;AAMAC,EAAAA,GAAG,EAAE,SAASA,GAAT,CAAaH,CAAb,EAAgBD,CAAhB,EAAmB;AACvB;AACA,QAAI,KAAKK,IAAL,CAAUJ,CAAV,MAAiB,QAArB,EAA+B;AAC9B,YAAM,IAAI1H,UAAJ,CAAe,yCAAf,CAAN;AACA,KAJsB,CAKvB;;;AACA,QAAI,CAAC,KAAKgH,aAAL,CAAmBS,CAAnB,CAAL,EAA4B;AAC3B,YAAM,IAAIzH,UAAJ,CAAe,gDAAf,CAAN;AACA,KARsB,CASvB;;;AACA,WAAO0H,CAAC,CAACD,CAAD,CAAR;AACA,GA9PgC;AAgQjCK,EAAAA,IAAI,EAAE,SAASA,IAAT,CAAcR,CAAd,EAAiB;AACtB,QAAI,OAAOA,CAAP,KAAa,QAAjB,EAA2B;AAC1B,aAAO,QAAP;AACA;;AACD,WAAOnD,GAAG,CAAC2D,IAAJ,CAASR,CAAT,CAAP;AACA,GArQgC;AAuQjC;AACAS,EAAAA,kBAAkB,EAAE,SAASA,kBAAT,CAA4BL,CAA5B,EAA+BM,kBAA/B,EAAmD;AACtE,QAAI,KAAKF,IAAL,CAAUJ,CAAV,MAAiB,QAArB,EAA+B;AAC9B,YAAM,IAAI1H,UAAJ,CAAe,yCAAf,CAAN;AACA;;AACD,QAAIiI,CAAC,GAAGP,CAAC,CAACQ,WAAV;;AACA,QAAI,OAAOD,CAAP,KAAa,WAAjB,EAA8B;AAC7B,aAAOD,kBAAP;AACA;;AACD,QAAI,KAAKF,IAAL,CAAUG,CAAV,MAAiB,QAArB,EAA+B;AAC9B,YAAM,IAAIjI,UAAJ,CAAe,gCAAf,CAAN;AACA;;AACD,QAAImI,CAAC,GAAG3H,UAAU,IAAIF,OAAO,CAAC8H,OAAtB,GAAgCH,CAAC,CAAC3H,OAAO,CAAC8H,OAAT,CAAjC,GAAqD,KAAK,CAAlE;;AACA,QAAID,CAAC,IAAI,IAAT,EAAe;AACd,aAAOH,kBAAP;AACA;;AACD,QAAI,KAAKrB,aAAL,CAAmBwB,CAAnB,CAAJ,EAA2B;AAC1B,aAAOA,CAAP;AACA;;AACD,UAAM,IAAInI,UAAJ,CAAe,sBAAf,CAAN;AACA,GA3RgC;AA6RjC;AACAqI,EAAAA,0BAA0B,EAAE,SAASA,0BAAT,CAAoCC,IAApC,EAA0C;AACrE7H,IAAAA,YAAY,CAAC,IAAD,EAAO,qBAAP,EAA8B,MAA9B,EAAsC6H,IAAtC,CAAZ;;AAEA,QAAI,KAAKC,mBAAL,CAAyBD,IAAzB,KAAkC,KAAKE,gBAAL,CAAsBF,IAAtB,CAAtC,EAAmE;AAClE,UAAI,CAAC3I,GAAG,CAAC2I,IAAD,EAAO,WAAP,CAAR,EAA6B;AAC5BA,QAAAA,IAAI,CAAC,WAAD,CAAJ,GAAoB,KAAK,CAAzB;AACA;;AACD,UAAI,CAAC3I,GAAG,CAAC2I,IAAD,EAAO,cAAP,CAAR,EAAgC;AAC/BA,QAAAA,IAAI,CAAC,cAAD,CAAJ,GAAuB,KAAvB;AACA;AACD,KAPD,MAOO;AACN,UAAI,CAAC3I,GAAG,CAAC2I,IAAD,EAAO,SAAP,CAAR,EAA2B;AAC1BA,QAAAA,IAAI,CAAC,SAAD,CAAJ,GAAkB,KAAK,CAAvB;AACA;;AACD,UAAI,CAAC3I,GAAG,CAAC2I,IAAD,EAAO,SAAP,CAAR,EAA2B;AAC1BA,QAAAA,IAAI,CAAC,SAAD,CAAJ,GAAkB,KAAK,CAAvB;AACA;AACD;;AACD,QAAI,CAAC3I,GAAG,CAAC2I,IAAD,EAAO,gBAAP,CAAR,EAAkC;AACjCA,MAAAA,IAAI,CAAC,gBAAD,CAAJ,GAAyB,KAAzB;AACA;;AACD,QAAI,CAAC3I,GAAG,CAAC2I,IAAD,EAAO,kBAAP,CAAR,EAAoC;AACnCA,MAAAA,IAAI,CAAC,kBAAD,CAAJ,GAA2B,KAA3B;AACA;;AACD,WAAOA,IAAP;AACA,GAvTgC;AAyTjC;AACAG,EAAAA,GAAG,EAAE,SAASA,GAAT,CAAaf,CAAb,EAAgBD,CAAhB,EAAmBjD,CAAnB,EAAsBkE,KAAtB,EAA6B;AACjC,QAAI,KAAKZ,IAAL,CAAUJ,CAAV,MAAiB,QAArB,EAA+B;AAC9B,YAAM,IAAI1H,UAAJ,CAAe,qBAAf,CAAN;AACA;;AACD,QAAI,CAAC,KAAKgH,aAAL,CAAmBS,CAAnB,CAAL,EAA4B;AAC3B,YAAM,IAAIzH,UAAJ,CAAe,0BAAf,CAAN;AACA;;AACD,QAAI,KAAK8H,IAAL,CAAUY,KAAV,MAAqB,SAAzB,EAAoC;AACnC,YAAM,IAAI1I,UAAJ,CAAe,yBAAf,CAAN;AACA;;AACD,QAAI0I,KAAJ,EAAW;AACVhB,MAAAA,CAAC,CAACD,CAAD,CAAD,GAAOjD,CAAP;AACA,aAAO,IAAP;AACA,KAHD,MAGO;AACN,UAAI;AACHkD,QAAAA,CAAC,CAACD,CAAD,CAAD,GAAOjD,CAAP;AACA,OAFD,CAEE,OAAOmE,CAAP,EAAU;AACX,eAAO,KAAP;AACA;AACD;AACD,GA9UgC;AAgVjC;AACAC,EAAAA,cAAc,EAAE,SAASA,cAAT,CAAwBlB,CAAxB,EAA2BD,CAA3B,EAA8B;AAC7C,QAAI,KAAKK,IAAL,CAAUJ,CAAV,MAAiB,QAArB,EAA+B;AAC9B,YAAM,IAAI1H,UAAJ,CAAe,qBAAf,CAAN;AACA;;AACD,QAAI,CAAC,KAAKgH,aAAL,CAAmBS,CAAnB,CAAL,EAA4B;AAC3B,YAAM,IAAIzH,UAAJ,CAAe,0BAAf,CAAN;AACA;;AACD,WAAOL,GAAG,CAAC+H,CAAD,EAAID,CAAJ,CAAV;AACA,GAzVgC;AA2VjC;AACAoB,EAAAA,WAAW,EAAE,SAASA,WAAT,CAAqBnB,CAArB,EAAwBD,CAAxB,EAA2B;AACvC,QAAI,KAAKK,IAAL,CAAUJ,CAAV,MAAiB,QAArB,EAA+B;AAC9B,YAAM,IAAI1H,UAAJ,CAAe,qBAAf,CAAN;AACA;;AACD,QAAI,CAAC,KAAKgH,aAAL,CAAmBS,CAAnB,CAAL,EAA4B;AAC3B,YAAM,IAAIzH,UAAJ,CAAe,0BAAf,CAAN;AACA;;AACD,WAAOyH,CAAC,IAAIC,CAAZ;AACA,GApWgC;AAsWjC;AACAoB,EAAAA,kBAAkB,EAAE,SAASA,kBAAT,CAA4BpB,CAA5B,EAA+B;AAClD,QAAI,KAAKI,IAAL,CAAUJ,CAAV,MAAiB,QAArB,EAA+B;AAC9B,aAAO,KAAP;AACA;;AACD,QAAIlH,UAAU,IAAI,OAAOF,OAAO,CAACyI,kBAAf,KAAsC,QAAxD,EAAkE;AACjE,UAAIC,UAAU,GAAG,KAAKnB,GAAL,CAASH,CAAT,EAAYuB,MAAM,CAACF,kBAAnB,CAAjB;;AACA,UAAI,OAAOC,UAAP,KAAsB,WAA1B,EAAuC;AACtC,eAAO,KAAK5B,SAAL,CAAe4B,UAAf,CAAP;AACA;AACD;;AACD,WAAO,KAAKvC,OAAL,CAAaiB,CAAb,CAAP;AACA,GAlXgC;AAoXjC;AACAwB,EAAAA,MAAM,EAAE,SAASA,MAAT,CAAgBxB,CAAhB,EAAmBD,CAAnB,EAAsB;AAC7B,QAAI,CAAC,KAAKT,aAAL,CAAmBS,CAAnB,CAAL,EAA4B;AAC3B,YAAM,IAAIzH,UAAJ,CAAe,0BAAf,CAAN;AACA;;AACD,QAAImJ,aAAa,GAAG7H,UAAU,CAACoD,SAAD,EAAY,CAAZ,CAA9B;AACA,QAAIkD,IAAI,GAAG,KAAKJ,IAAL,CAAUE,CAAV,EAAaD,CAAb,CAAX;AACA,WAAO,KAAKnD,IAAL,CAAUsD,IAAV,EAAgBF,CAAhB,EAAmByB,aAAnB,CAAP;AACA,GA5XgC;AA8XjC;AACAC,EAAAA,WAAW,EAAE,SAASA,WAAT,CAAqBtC,GAArB,EAA0BuC,MAA1B,EAAkC;AAC9C,QAAI,CAAC7I,UAAL,EAAiB;AAChB,YAAM,IAAI8I,WAAJ,CAAgB,oDAAhB,CAAN;AACA;;AAED,QAAIC,YAAY,GAAGF,MAAnB;;AACA,QAAI3E,SAAS,CAACC,MAAV,GAAmB,CAAvB,EAA0B;AACzB4E,MAAAA,YAAY,GAAG,KAAK5B,SAAL,CAAeb,GAAf,EAAoBxG,OAAO,CAACkJ,QAA5B,CAAf;AACA;;AACD,QAAIA,QAAQ,GAAG,KAAKlF,IAAL,CAAUiF,YAAV,EAAwBzC,GAAxB,CAAf;;AACA,QAAI,KAAKgB,IAAL,CAAU0B,QAAV,MAAwB,QAA5B,EAAsC;AACrC,YAAM,IAAIxJ,UAAJ,CAAe,gCAAf,CAAN;AACA;;AAED,WAAOwJ,QAAP;AACA,GA9YgC;AAgZjC;AACAC,EAAAA,YAAY,EAAE,SAASA,YAAT,CAAsBD,QAAtB,EAAgCtF,KAAhC,EAAuC;AACpD,QAAIwF,MAAM,GAAG,KAAKR,MAAL,CAAYM,QAAZ,EAAsB,MAAtB,EAA8B9E,SAAS,CAACC,MAAV,GAAmB,CAAnB,GAAuB,EAAvB,GAA4B,CAACT,KAAD,CAA1D,CAAb;;AACA,QAAI,KAAK4D,IAAL,CAAU4B,MAAV,MAAsB,QAA1B,EAAoC;AACnC,YAAM,IAAI1J,UAAJ,CAAe,qCAAf,CAAN;AACA;;AACD,WAAO0J,MAAP;AACA,GAvZgC;AAyZjC;AACAC,EAAAA,gBAAgB,EAAE,SAASA,gBAAT,CAA0BC,UAA1B,EAAsC;AACvD,QAAI,KAAK9B,IAAL,CAAU8B,UAAV,MAA0B,QAA9B,EAAwC;AACvC,YAAM,IAAI5J,UAAJ,CAAe,kDAAf,CAAN;AACA;;AACD,WAAO,KAAKoH,SAAL,CAAe,KAAKS,GAAL,CAAS+B,UAAT,EAAqB,MAArB,CAAf,CAAP;AACA,GA/ZgC;AAiajC;AACAC,EAAAA,aAAa,EAAE,SAASA,aAAT,CAAuBD,UAAvB,EAAmC;AACjD,QAAI,KAAK9B,IAAL,CAAU8B,UAAV,MAA0B,QAA9B,EAAwC;AACvC,YAAM,IAAI5J,UAAJ,CAAe,kDAAf,CAAN;AACA;;AACD,WAAO,KAAK6H,GAAL,CAAS+B,UAAT,EAAqB,OAArB,CAAP;AACA,GAvagC;AAyajC;AACAE,EAAAA,YAAY,EAAE,SAASA,YAAT,CAAsBN,QAAtB,EAAgC;AAC7C,QAAIE,MAAM,GAAG,KAAKD,YAAL,CAAkBD,QAAlB,CAAb;AACA,QAAIO,IAAI,GAAG,KAAKJ,gBAAL,CAAsBD,MAAtB,CAAX;AACA,WAAOK,IAAI,KAAK,IAAT,GAAgB,KAAhB,GAAwBL,MAA/B;AACA,GA9agC;AAgbjC;AACAM,EAAAA,aAAa,EAAE,SAASA,aAAT,CAAuBR,QAAvB,EAAiCS,UAAjC,EAA6C;AAC3D,QAAI,KAAKnC,IAAL,CAAU0B,QAAV,MAAwB,QAA5B,EAAsC;AACrC,YAAM,IAAIxJ,UAAJ,CAAe,gDAAf,CAAN;AACA;;AACD,QAAI,CAAC,KAAK4E,UAAL,CAAgBqF,UAAhB,CAAL,EAAkC;AACjC,YAAM,IAAIjK,UAAJ,CAAe,qEAAf,CAAN;AACA;;AACD,QAAIkK,eAAe,GAAGD,UAAtB;AAEA,QAAIE,cAAc,GAAG,KAAKxC,SAAL,CAAe6B,QAAf,EAAyB,QAAzB,CAArB;;AAEA,QAAI,OAAOW,cAAP,KAA0B,WAA9B,EAA2C;AAC1C,aAAOD,eAAe,EAAtB;AACA;;AAED,QAAIE,gBAAJ;;AACA,QAAI;AACH,UAAIC,WAAW,GAAG,KAAK/F,IAAL,CAAU6F,cAAV,EAA0BX,QAA1B,EAAoC,EAApC,CAAlB;AACA,KAFD,CAEE,OAAOb,CAAP,EAAU;AACX;AAEA;AACAyB,MAAAA,gBAAgB,GAAGF,eAAe,EAAlC;AACAA,MAAAA,eAAe,GAAG,IAAlB,CALW,CAKa;AAExB;;AACA,YAAMvB,CAAN;AACA;;AACDyB,IAAAA,gBAAgB,GAAGF,eAAe,EAAlC,CA5B2D,CA4BrB;;AACtCA,IAAAA,eAAe,GAAG,IAAlB,CA7B2D,CA6BnC;;AAExB,QAAI,KAAKpC,IAAL,CAAUuC,WAAV,MAA2B,QAA/B,EAAyC;AACxC,YAAM,IAAIrK,UAAJ,CAAe,wCAAf,CAAN;AACA;;AAED,WAAOoK,gBAAP;AACA,GArdgC;AAudjC;AACAE,EAAAA,sBAAsB,EAAE,SAASA,sBAAT,CAAgCpG,KAAhC,EAAuC6F,IAAvC,EAA6C;AACpE,QAAI,KAAKjC,IAAL,CAAUiC,IAAV,MAAoB,SAAxB,EAAmC;AAClC,YAAM,IAAI/J,UAAJ,CAAe,6CAAf,CAAN;AACA;;AACD,WAAO;AACNkE,MAAAA,KAAK,EAAEA,KADD;AAEN6F,MAAAA,IAAI,EAAEA;AAFA,KAAP;AAIA,GAhegC;AAkejC;AACAQ,EAAAA,UAAU,EAAE,SAASA,UAAT,CAAoBC,CAApB,EAAuBrC,CAAvB,EAA0B;AACrC,QAAI,KAAKL,IAAL,CAAU0C,CAAV,MAAiB,QAArB,EAA+B;AAC9B,YAAM,IAAIxK,UAAJ,CAAe,qBAAf,CAAN;AACA;;AACD,QAAI,KAAK8H,IAAL,CAAUK,CAAV,MAAiB,QAArB,EAA+B;AAC9B,YAAM,IAAInI,UAAJ,CAAe,oBAAf,CAAN;AACA;;AACD,QAAIgC,IAAI,GAAG,KAAK6F,GAAL,CAAS2C,CAAT,EAAY,MAAZ,CAAX;;AACA,QAAI,KAAK5F,UAAL,CAAgB5C,IAAhB,CAAJ,EAA2B;AAC1B,UAAI0H,MAAM,GAAG,KAAKpF,IAAL,CAAUtC,IAAV,EAAgBwI,CAAhB,EAAmB,CAACrC,CAAD,CAAnB,CAAb;;AACA,UAAIuB,MAAM,KAAK,IAAX,IAAmB,KAAK5B,IAAL,CAAU4B,MAAV,MAAsB,QAA7C,EAAuD;AACtD,eAAOA,MAAP;AACA;;AACD,YAAM,IAAI1J,UAAJ,CAAe,+CAAf,CAAN;AACA;;AACD,WAAO+B,SAAS,CAACyI,CAAD,EAAIrC,CAAJ,CAAhB;AACA,GAnfgC;AAqfjC;AACAsC,EAAAA,kBAAkB,EAAE,SAASA,kBAAT,CAA4BC,aAA5B,EAA2C/F,MAA3C,EAAmD;AACtE,QAAI,CAAC,KAAKoC,SAAL,CAAepC,MAAf,CAAD,IAA2BA,MAAM,GAAG,CAAxC,EAA2C;AAC1C,YAAM,IAAI3E,UAAJ,CAAe,kDAAf,CAAN;AACA;;AACD,QAAImG,GAAG,GAAGxB,MAAM,KAAK,CAAX,GAAe,CAAf,GAAmBA,MAA7B;AACA,QAAIsD,CAAJ;AACA,QAAIvB,OAAO,GAAG,KAAKD,OAAL,CAAaiE,aAAb,CAAd;;AACA,QAAIhE,OAAJ,EAAa;AACZuB,MAAAA,CAAC,GAAG,KAAKJ,GAAL,CAAS6C,aAAT,EAAwB,aAAxB,CAAJ,CADY,CAEZ;AACA;AACA;AACA;AACA;;AACA,UAAI,KAAK5C,IAAL,CAAUG,CAAV,MAAiB,QAAjB,IAA6BzH,UAA7B,IAA2CF,OAAO,CAAC8H,OAAvD,EAAgE;AAC/DH,QAAAA,CAAC,GAAG,KAAKJ,GAAL,CAASI,CAAT,EAAY3H,OAAO,CAAC8H,OAApB,CAAJ;;AACA,YAAIH,CAAC,KAAK,IAAV,EAAgB;AACfA,UAAAA,CAAC,GAAG,KAAK,CAAT;AACA;AACD;AACD;;AACD,QAAI,OAAOA,CAAP,KAAa,WAAjB,EAA8B;AAC7B,aAAO/H,MAAM,CAACiG,GAAD,CAAb;AACA;;AACD,QAAI,CAAC,KAAKQ,aAAL,CAAmBsB,CAAnB,CAAL,EAA4B;AAC3B,YAAM,IAAIjI,UAAJ,CAAe,yBAAf,CAAN;AACA;;AACD,WAAO,IAAIiI,CAAJ,CAAM9B,GAAN,CAAP,CA3BsE,CA2BnD;AACnB,GAlhBgC;AAohBjCwE,EAAAA,kBAAkB,EAAE,SAASA,kBAAT,CAA4BjD,CAA5B,EAA+BD,CAA/B,EAAkCjD,CAAlC,EAAqC;AACxD,QAAI,KAAKsD,IAAL,CAAUJ,CAAV,MAAiB,QAArB,EAA+B;AAC9B,YAAM,IAAI1H,UAAJ,CAAe,yCAAf,CAAN;AACA;;AACD,QAAI,CAAC,KAAKgH,aAAL,CAAmBS,CAAnB,CAAL,EAA4B;AAC3B,YAAM,IAAIzH,UAAJ,CAAe,gDAAf,CAAN;AACA;;AACD,QAAI4K,OAAO,GAAGrH,KAAK,CAACmE,CAAD,EAAID,CAAJ,CAAnB;AACA,QAAIoD,UAAU,GAAGD,OAAO,IAAK,OAAOnH,aAAP,KAAyB,UAAzB,IAAuCA,aAAa,CAACiE,CAAD,CAAjF;AACA,QAAIoD,SAAS,GAAGF,OAAO,KAAK,CAACA,OAAO,CAACG,QAAT,IAAqB,CAACH,OAAO,CAACI,YAAnC,CAAvB;;AACA,QAAIF,SAAS,IAAI,CAACD,UAAlB,EAA8B;AAC7B,aAAO,KAAP;AACA;;AACD,QAAII,OAAO,GAAG;AACbD,MAAAA,YAAY,EAAE,IADD;AAEbE,MAAAA,UAAU,EAAE,IAFC;AAGbhH,MAAAA,KAAK,EAAEM,CAHM;AAIbuG,MAAAA,QAAQ,EAAE;AAJG,KAAd;AAMApH,IAAAA,eAAe,CAAC+D,CAAD,EAAID,CAAJ,EAAOwD,OAAP,CAAf;AACA,WAAO,IAAP;AACA,GAziBgC;AA2iBjC;AACAE,EAAAA,yBAAyB,EAAE,SAASA,yBAAT,CAAmCzD,CAAnC,EAAsCD,CAAtC,EAAyCjD,CAAzC,EAA4C;AACtE,QAAI,KAAKsD,IAAL,CAAUJ,CAAV,MAAiB,QAArB,EAA+B;AAC9B,YAAM,IAAI1H,UAAJ,CAAe,yCAAf,CAAN;AACA;;AACD,QAAI,CAAC,KAAKgH,aAAL,CAAmBS,CAAnB,CAAL,EAA4B;AAC3B,YAAM,IAAIzH,UAAJ,CAAe,gDAAf,CAAN;AACA;;AACD,QAAIoL,OAAO,GAAG,KAAKT,kBAAL,CAAwBjD,CAAxB,EAA2BD,CAA3B,EAA8BjD,CAA9B,CAAd;;AACA,QAAI,CAAC4G,OAAL,EAAc;AACb,YAAM,IAAIpL,UAAJ,CAAe,gCAAf,CAAN;AACA;;AACD,WAAOoL,OAAP;AACA,GAxjBgC;AA0jBjC;AACAC,EAAAA,YAAY,EAAE,SAASA,YAAT,CAAsBC,KAAtB,EAA6BC,iBAA7B,EAAgD;AAC7D,QAAID,KAAK,KAAK,IAAV,IAAkB,KAAKxD,IAAL,CAAUwD,KAAV,MAAqB,QAA3C,EAAqD;AACpD,YAAM,IAAItL,UAAJ,CAAe,mDAAf,CAAN;AACA;;AACD,QAAIwL,KAAK,GAAG9G,SAAS,CAACC,MAAV,GAAmB,CAAnB,GAAuB,EAAvB,GAA4B4G,iBAAxC;;AACA,QAAIC,KAAK,CAAC7G,MAAN,GAAe,CAAnB,EAAsB;AACrB,YAAM,IAAI1E,YAAJ,CAAiB,iDAAjB,CAAN;AACA;;AAED,QAAIqL,KAAK,KAAK,IAAV,IAAkB,CAACjI,aAAvB,EAAsC;AACrC,YAAM,IAAIpD,YAAJ,CAAiB,iEAAjB,CAAN;AACA;;AAED,WAAOoD,aAAa,CAACiI,KAAD,CAApB;AACA,GAzkBgC;AA2kBjC;AACAG,EAAAA,kBAAkB,EAAE,SAASA,kBAAT,CAA4BtD,CAA5B,EAA+BuD,KAA/B,EAAsCC,OAAtC,EAA+C;AAClE,QAAI,KAAK7D,IAAL,CAAUK,CAAV,MAAiB,QAArB,EAA+B;AAC9B,YAAM,IAAInI,UAAJ,CAAe,oBAAf,CAAN;AACA;;AACD,QAAI,CAAC,KAAK+G,SAAL,CAAe2E,KAAf,CAAD,IAA0BA,KAAK,GAAG,CAAlC,IAAuCA,KAAK,GAAG9K,gBAAnD,EAAqE;AACpE,YAAM,IAAIZ,UAAJ,CAAe,+DAAf,CAAN;AACA;;AACD,QAAI,KAAK8H,IAAL,CAAU6D,OAAV,MAAuB,SAA3B,EAAsC;AACrC,YAAM,IAAI3L,UAAJ,CAAe,6CAAf,CAAN;AACA;;AACD,QAAI,CAAC2L,OAAL,EAAc;AACb,aAAOD,KAAK,GAAG,CAAf;AACA;;AACD,QAAI/G,MAAM,GAAGwD,CAAC,CAACxD,MAAf;;AACA,QAAK+G,KAAK,GAAG,CAAT,IAAe/G,MAAnB,EAA2B;AAC1B,aAAO+G,KAAK,GAAG,CAAf;AACA;;AAED,QAAIE,KAAK,GAAGrJ,WAAW,CAAC4F,CAAD,EAAIuD,KAAJ,CAAvB;;AACA,QAAIE,KAAK,GAAG,MAAR,IAAkBA,KAAK,GAAG,MAA9B,EAAsC;AACrC,aAAOF,KAAK,GAAG,CAAf;AACA;;AAED,QAAIG,MAAM,GAAGtJ,WAAW,CAAC4F,CAAD,EAAIuD,KAAK,GAAG,CAAZ,CAAxB;;AACA,QAAIG,MAAM,GAAG,MAAT,IAAmBA,MAAM,GAAG,MAAhC,EAAwC;AACvC,aAAOH,KAAK,GAAG,CAAf;AACA;;AAED,WAAOA,KAAK,GAAG,CAAf;AACA,GAzmBgC;AA2mBjC;AACAI,EAAAA,oBAAoB,EAAE,SAASA,oBAAT,CAA8BpE,CAA9B,EAAiCD,CAAjC,EAAoCjD,CAApC,EAAuC;AAC5D,QAAI,KAAKsD,IAAL,CAAUJ,CAAV,MAAiB,QAArB,EAA+B;AAC9B,YAAM,IAAI1H,UAAJ,CAAe,yCAAf,CAAN;AACA;;AAED,QAAI,CAAC,KAAKgH,aAAL,CAAmBS,CAAnB,CAAL,EAA4B;AAC3B,YAAM,IAAIzH,UAAJ,CAAe,gDAAf,CAAN;AACA;;AAED,QAAIiL,OAAO,GAAG;AACbD,MAAAA,YAAY,EAAE,IADD;AAEbE,MAAAA,UAAU,EAAE,KAFC;AAGbhH,MAAAA,KAAK,EAAEM,CAHM;AAIbuG,MAAAA,QAAQ,EAAE;AAJG,KAAd;AAMA,WAAO,CAAC,CAACpH,eAAe,CAAC+D,CAAD,EAAID,CAAJ,EAAOwD,OAAP,CAAxB;AACA,GA5nBgC;AA8nBjC;AACAc,EAAAA,qBAAqB,EAAE,SAASA,qBAAT,CAA+BrE,CAA/B,EAAkCD,CAAlC,EAAqCuE,IAArC,EAA2C;AACjE,QAAI,KAAKlE,IAAL,CAAUJ,CAAV,MAAiB,QAArB,EAA+B;AAC9B,YAAM,IAAI1H,UAAJ,CAAe,yCAAf,CAAN;AACA;;AAED,QAAI,CAAC,KAAKgH,aAAL,CAAmBS,CAAnB,CAAL,EAA4B;AAC3B,YAAM,IAAIzH,UAAJ,CAAe,gDAAf,CAAN;AACA;;AAED,WAAO,CAAC,CAAC2D,eAAe,CAAC+D,CAAD,EAAID,CAAJ,EAAOuE,IAAP,CAAxB;AACA,GAzoBgC;AA2oBjC;AACAC,EAAAA,qBAAqB,EAAE,SAASA,qBAAT,CAA+BvE,CAA/B,EAAkCD,CAAlC,EAAqC;AAC3D,QAAI,KAAKK,IAAL,CAAUJ,CAAV,MAAiB,QAArB,EAA+B;AAC9B,YAAM,IAAI1H,UAAJ,CAAe,yCAAf,CAAN;AACA;;AAED,QAAI,CAAC,KAAKgH,aAAL,CAAmBS,CAAnB,CAAL,EAA4B;AAC3B,YAAM,IAAIzH,UAAJ,CAAe,gDAAf,CAAN;AACA;;AAED,QAAIoL,OAAO,GAAG,OAAO1D,CAAC,CAACD,CAAD,CAAtB;;AACA,QAAI,CAAC2D,OAAL,EAAc;AACb,YAAM,IAAIc,SAAJ,CAAc,oCAAd,CAAN;AACA;;AACD,WAAOd,OAAP;AACA,GA1pBgC;AA4pBjC;AACAe,EAAAA,kBAAkB,EAAE,SAASA,kBAAT,CAA4BzE,CAA5B,EAA+B;AAClD,QAAI,KAAKI,IAAL,CAAUJ,CAAV,MAAiB,QAArB,EAA+B;AAC9B,YAAM,IAAI1H,UAAJ,CAAe,yCAAf,CAAN;AACA;;AAED,WAAOF,IAAI,CAAC4H,CAAD,CAAX;AACA,GAnqBgC;AAqqBjC;AACA0E,EAAAA,eAAe,EAAE,SAASA,eAAT,CAAyBlI,KAAzB,EAAgC;AAChD,QAAI,KAAK4D,IAAL,CAAU5D,KAAV,MAAqB,QAAzB,EAAmC;AAClC,aAAOA,KAAP;AACA;;AAED,WAAOtB,cAAc,CAACsB,KAAD,CAArB;AACA,GA5qBgC;AA8qBjC;AACAmI,EAAAA,gBAAgB,EAAE,SAASA,gBAAT,CAA0BnI,KAA1B,EAAiC;AAClD,QAAI,KAAK4D,IAAL,CAAU5D,KAAV,MAAqB,SAAzB,EAAoC;AACnC,aAAOA,KAAP;AACA;;AAED,WAAOpB,eAAe,CAACoB,KAAD,CAAtB;AACA,GArrBgC;AAurBjC;AACAoI,EAAAA,eAAe,EAAE,SAASA,eAAT,CAAyBpI,KAAzB,EAAgC;AAChD,QAAI,KAAK4D,IAAL,CAAU5D,KAAV,MAAqB,QAAzB,EAAmC;AAClC,aAAOA,KAAP;AACA;;AAED,WAAOnB,cAAc,CAACmB,KAAD,CAArB;AACA,GA9rBgC;AAgsBjC;AACAqI,EAAAA,aAAa,EAAE,SAASA,aAAT,CAAuBrI,KAAvB,EAA8B;AAC5C,WAAOlB,YAAY,CAACkB,KAAD,CAAnB;AACA;AAnsBgC,CAAlB,CAAhB;AAssBA,OAAOG,GAAG,CAACmC,oBAAX,C,CAAiC;;AAEjCgG,MAAM,CAACC,OAAP,GAAiBpI,GAAjB","sourcesContent":["'use strict';\n\nvar has = require('has');\nvar toPrimitive = require('es-to-primitive/es6');\nvar keys = require('object-keys');\n\nvar GetIntrinsic = require('./GetIntrinsic');\n\nvar $TypeError = GetIntrinsic('%TypeError%');\nvar $SyntaxError = GetIntrinsic('%SyntaxError%');\nvar $Array = GetIntrinsic('%Array%');\nvar $String = GetIntrinsic('%String%');\nvar $Object = GetIntrinsic('%Object%');\nvar $Number = GetIntrinsic('%Number%');\nvar $Symbol = GetIntrinsic('%Symbol%', true);\nvar $RegExp = GetIntrinsic('%RegExp%');\n\nvar hasSymbols = !!$Symbol;\n\nvar assertRecord = require('./helpers/assertRecord');\nvar $isNaN = require('./helpers/isNaN');\nvar $isFinite = require('./helpers/isFinite');\nvar MAX_SAFE_INTEGER = $Number.MAX_SAFE_INTEGER || Math.pow(2, 53) - 1;\n\nvar assign = require('./helpers/assign');\nvar sign = require('./helpers/sign');\nvar mod = require('./helpers/mod');\nvar isPrimitive = require('./helpers/isPrimitive');\nvar parseInteger = parseInt;\nvar bind = require('function-bind');\nvar arraySlice = bind.call(Function.call, $Array.prototype.slice);\nvar strSlice = bind.call(Function.call, $String.prototype.slice);\nvar isBinary = bind.call(Function.call, $RegExp.prototype.test, /^0b[01]+$/i);\nvar isOctal = bind.call(Function.call, $RegExp.prototype.test, /^0o[0-7]+$/i);\nvar regexExec = bind.call(Function.call, $RegExp.prototype.exec);\nvar nonWS = ['\\u0085', '\\u200b', '\\ufffe'].join('');\nvar nonWSregex = new $RegExp('[' + nonWS + ']', 'g');\nvar hasNonWS = bind.call(Function.call, $RegExp.prototype.test, nonWSregex);\nvar invalidHexLiteral = /^[-+]0x[0-9a-f]+$/i;\nvar isInvalidHexLiteral = bind.call(Function.call, $RegExp.prototype.test, invalidHexLiteral);\nvar $charCodeAt = bind.call(Function.call, $String.prototype.charCodeAt);\n\nvar toStr = bind.call(Function.call, Object.prototype.toString);\n\nvar $NumberValueOf = bind.call(Function.call, GetIntrinsic('%NumberPrototype%').valueOf);\nvar $BooleanValueOf = bind.call(Function.call, GetIntrinsic('%BooleanPrototype%').valueOf);\nvar $StringValueOf = bind.call(Function.call, GetIntrinsic('%StringPrototype%').valueOf);\nvar $DateValueOf = bind.call(Function.call, GetIntrinsic('%DatePrototype%').valueOf);\n\nvar $floor = Math.floor;\nvar $abs = Math.abs;\n\nvar $ObjectCreate = Object.create;\nvar $gOPD = $Object.getOwnPropertyDescriptor;\n\nvar $isExtensible = $Object.isExtensible;\n\nvar $defineProperty = $Object.defineProperty;\n\n// whitespace from: http://es5.github.io/#x15.5.4.20\n// implementation from https://github.com/es-shims/es5-shim/blob/v3.4.0/es5-shim.js#L1304-L1324\nvar ws = [\n\t'\\x09\\x0A\\x0B\\x0C\\x0D\\x20\\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003',\n\t'\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028',\n\t'\\u2029\\uFEFF'\n].join('');\nvar trimRegex = new RegExp('(^[' + ws + ']+)|([' + ws + ']+$)', 'g');\nvar replace = bind.call(Function.call, $String.prototype.replace);\nvar trim = function (value) {\n\treturn replace(value, trimRegex, '');\n};\n\nvar ES5 = require('./es5');\n\nvar hasRegExpMatcher = require('is-regex');\n\n// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-abstract-operations\nvar ES6 = assign(assign({}, ES5), {\n\n\t// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-call-f-v-args\n\tCall: function Call(F, V) {\n\t\tvar args = arguments.length > 2 ? arguments[2] : [];\n\t\tif (!this.IsCallable(F)) {\n\t\t\tthrow new $TypeError(F + ' is not a function');\n\t\t}\n\t\treturn F.apply(V, args);\n\t},\n\n\t// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-toprimitive\n\tToPrimitive: toPrimitive,\n\n\t// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-toboolean\n\t// ToBoolean: ES5.ToBoolean,\n\n\t// https://ecma-international.org/ecma-262/6.0/#sec-tonumber\n\tToNumber: function ToNumber(argument) {\n\t\tvar value = isPrimitive(argument) ? argument : toPrimitive(argument, $Number);\n\t\tif (typeof value === 'symbol') {\n\t\t\tthrow new $TypeError('Cannot convert a Symbol value to a number');\n\t\t}\n\t\tif (typeof value === 'string') {\n\t\t\tif (isBinary(value)) {\n\t\t\t\treturn this.ToNumber(parseInteger(strSlice(value, 2), 2));\n\t\t\t} else if (isOctal(value)) {\n\t\t\t\treturn this.ToNumber(parseInteger(strSlice(value, 2), 8));\n\t\t\t} else if (hasNonWS(value) || isInvalidHexLiteral(value)) {\n\t\t\t\treturn NaN;\n\t\t\t} else {\n\t\t\t\tvar trimmed = trim(value);\n\t\t\t\tif (trimmed !== value) {\n\t\t\t\t\treturn this.ToNumber(trimmed);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn $Number(value);\n\t},\n\n\t// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-tointeger\n\t// ToInteger: ES5.ToNumber,\n\n\t// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-toint32\n\t// ToInt32: ES5.ToInt32,\n\n\t// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-touint32\n\t// ToUint32: ES5.ToUint32,\n\n\t// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-toint16\n\tToInt16: function ToInt16(argument) {\n\t\tvar int16bit = this.ToUint16(argument);\n\t\treturn int16bit >= 0x8000 ? int16bit - 0x10000 : int16bit;\n\t},\n\n\t// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-touint16\n\t// ToUint16: ES5.ToUint16,\n\n\t// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-toint8\n\tToInt8: function ToInt8(argument) {\n\t\tvar int8bit = this.ToUint8(argument);\n\t\treturn int8bit >= 0x80 ? int8bit - 0x100 : int8bit;\n\t},\n\n\t// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-touint8\n\tToUint8: function ToUint8(argument) {\n\t\tvar number = this.ToNumber(argument);\n\t\tif ($isNaN(number) || number === 0 || !$isFinite(number)) { return 0; }\n\t\tvar posInt = sign(number) * $floor($abs(number));\n\t\treturn mod(posInt, 0x100);\n\t},\n\n\t// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-touint8clamp\n\tToUint8Clamp: function ToUint8Clamp(argument) {\n\t\tvar number = this.ToNumber(argument);\n\t\tif ($isNaN(number) || number <= 0) { return 0; }\n\t\tif (number >= 0xFF) { return 0xFF; }\n\t\tvar f = $floor(argument);\n\t\tif (f + 0.5 < number) { return f + 1; }\n\t\tif (number < f + 0.5) { return f; }\n\t\tif (f % 2 !== 0) { return f + 1; }\n\t\treturn f;\n\t},\n\n\t// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-tostring\n\tToString: function ToString(argument) {\n\t\tif (typeof argument === 'symbol') {\n\t\t\tthrow new $TypeError('Cannot convert a Symbol value to a string');\n\t\t}\n\t\treturn $String(argument);\n\t},\n\n\t// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-toobject\n\tToObject: function ToObject(value) {\n\t\tthis.RequireObjectCoercible(value);\n\t\treturn $Object(value);\n\t},\n\n\t// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-topropertykey\n\tToPropertyKey: function ToPropertyKey(argument) {\n\t\tvar key = this.ToPrimitive(argument, $String);\n\t\treturn typeof key === 'symbol' ? key : this.ToString(key);\n\t},\n\n\t// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength\n\tToLength: function ToLength(argument) {\n\t\tvar len = this.ToInteger(argument);\n\t\tif (len <= 0) { return 0; } // includes converting -0 to +0\n\t\tif (len > MAX_SAFE_INTEGER) { return MAX_SAFE_INTEGER; }\n\t\treturn len;\n\t},\n\n\t// https://ecma-international.org/ecma-262/6.0/#sec-canonicalnumericindexstring\n\tCanonicalNumericIndexString: function CanonicalNumericIndexString(argument) {\n\t\tif (toStr(argument) !== '[object String]') {\n\t\t\tthrow new $TypeError('must be a string');\n\t\t}\n\t\tif (argument === '-0') { return -0; }\n\t\tvar n = this.ToNumber(argument);\n\t\tif (this.SameValue(this.ToString(n), argument)) { return n; }\n\t\treturn void 0;\n\t},\n\n\t// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-requireobjectcoercible\n\tRequireObjectCoercible: ES5.CheckObjectCoercible,\n\n\t// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-isarray\n\tIsArray: $Array.isArray || function IsArray(argument) {\n\t\treturn toStr(argument) === '[object Array]';\n\t},\n\n\t// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-iscallable\n\t// IsCallable: ES5.IsCallable,\n\n\t// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-isconstructor\n\tIsConstructor: function IsConstructor(argument) {\n\t\treturn typeof argument === 'function' && !!argument.prototype; // unfortunately there's no way to truly check this without try/catch `new argument`\n\t},\n\n\t// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-isextensible-o\n\tIsExtensible: Object.preventExtensions\n\t\t? function IsExtensible(obj) {\n\t\t\tif (isPrimitive(obj)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn $isExtensible(obj);\n\t\t}\n\t\t: function isExtensible(obj) { return true; }, // eslint-disable-line no-unused-vars\n\n\t// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-isinteger\n\tIsInteger: function IsInteger(argument) {\n\t\tif (typeof argument !== 'number' || $isNaN(argument) || !$isFinite(argument)) {\n\t\t\treturn false;\n\t\t}\n\t\tvar abs = $abs(argument);\n\t\treturn $floor(abs) === abs;\n\t},\n\n\t// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-ispropertykey\n\tIsPropertyKey: function IsPropertyKey(argument) {\n\t\treturn typeof argument === 'string' || typeof argument === 'symbol';\n\t},\n\n\t// https://ecma-international.org/ecma-262/6.0/#sec-isregexp\n\tIsRegExp: function IsRegExp(argument) {\n\t\tif (!argument || typeof argument !== 'object') {\n\t\t\treturn false;\n\t\t}\n\t\tif (hasSymbols) {\n\t\t\tvar isRegExp = argument[$Symbol.match];\n\t\t\tif (typeof isRegExp !== 'undefined') {\n\t\t\t\treturn ES5.ToBoolean(isRegExp);\n\t\t\t}\n\t\t}\n\t\treturn hasRegExpMatcher(argument);\n\t},\n\n\t// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevalue\n\t// SameValue: ES5.SameValue,\n\n\t// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero\n\tSameValueZero: function SameValueZero(x, y) {\n\t\treturn (x === y) || ($isNaN(x) && $isNaN(y));\n\t},\n\n\t/**\n\t * 7.3.2 GetV (V, P)\n\t * 1. Assert: IsPropertyKey(P) is true.\n\t * 2. Let O be ToObject(V).\n\t * 3. ReturnIfAbrupt(O).\n\t * 4. Return O.[[Get]](P, V).\n\t */\n\tGetV: function GetV(V, P) {\n\t\t// 7.3.2.1\n\t\tif (!this.IsPropertyKey(P)) {\n\t\t\tthrow new $TypeError('Assertion failed: IsPropertyKey(P) is not true');\n\t\t}\n\n\t\t// 7.3.2.2-3\n\t\tvar O = this.ToObject(V);\n\n\t\t// 7.3.2.4\n\t\treturn O[P];\n\t},\n\n\t/**\n\t * 7.3.9 - https://ecma-international.org/ecma-262/6.0/#sec-getmethod\n\t * 1. Assert: IsPropertyKey(P) is true.\n\t * 2. Let func be GetV(O, P).\n\t * 3. ReturnIfAbrupt(func).\n\t * 4. If func is either undefined or null, return undefined.\n\t * 5. If IsCallable(func) is false, throw a TypeError exception.\n\t * 6. Return func.\n\t */\n\tGetMethod: function GetMethod(O, P) {\n\t\t// 7.3.9.1\n\t\tif (!this.IsPropertyKey(P)) {\n\t\t\tthrow new $TypeError('Assertion failed: IsPropertyKey(P) is not true');\n\t\t}\n\n\t\t// 7.3.9.2\n\t\tvar func = this.GetV(O, P);\n\n\t\t// 7.3.9.4\n\t\tif (func == null) {\n\t\t\treturn void 0;\n\t\t}\n\n\t\t// 7.3.9.5\n\t\tif (!this.IsCallable(func)) {\n\t\t\tthrow new $TypeError(P + 'is not a function');\n\t\t}\n\n\t\t// 7.3.9.6\n\t\treturn func;\n\t},\n\n\t/**\n\t * 7.3.1 Get (O, P) - https://ecma-international.org/ecma-262/6.0/#sec-get-o-p\n\t * 1. Assert: Type(O) is Object.\n\t * 2. Assert: IsPropertyKey(P) is true.\n\t * 3. Return O.[[Get]](P, O).\n\t */\n\tGet: function Get(O, P) {\n\t\t// 7.3.1.1\n\t\tif (this.Type(O) !== 'Object') {\n\t\t\tthrow new $TypeError('Assertion failed: Type(O) is not Object');\n\t\t}\n\t\t// 7.3.1.2\n\t\tif (!this.IsPropertyKey(P)) {\n\t\t\tthrow new $TypeError('Assertion failed: IsPropertyKey(P) is not true');\n\t\t}\n\t\t// 7.3.1.3\n\t\treturn O[P];\n\t},\n\n\tType: function Type(x) {\n\t\tif (typeof x === 'symbol') {\n\t\t\treturn 'Symbol';\n\t\t}\n\t\treturn ES5.Type(x);\n\t},\n\n\t// https://ecma-international.org/ecma-262/6.0/#sec-speciesconstructor\n\tSpeciesConstructor: function SpeciesConstructor(O, defaultConstructor) {\n\t\tif (this.Type(O) !== 'Object') {\n\t\t\tthrow new $TypeError('Assertion failed: Type(O) is not Object');\n\t\t}\n\t\tvar C = O.constructor;\n\t\tif (typeof C === 'undefined') {\n\t\t\treturn defaultConstructor;\n\t\t}\n\t\tif (this.Type(C) !== 'Object') {\n\t\t\tthrow new $TypeError('O.constructor is not an Object');\n\t\t}\n\t\tvar S = hasSymbols && $Symbol.species ? C[$Symbol.species] : void 0;\n\t\tif (S == null) {\n\t\t\treturn defaultConstructor;\n\t\t}\n\t\tif (this.IsConstructor(S)) {\n\t\t\treturn S;\n\t\t}\n\t\tthrow new $TypeError('no constructor found');\n\t},\n\n\t// https://ecma-international.org/ecma-262/6.0/#sec-completepropertydescriptor\n\tCompletePropertyDescriptor: function CompletePropertyDescriptor(Desc) {\n\t\tassertRecord(this, 'Property Descriptor', 'Desc', Desc);\n\n\t\tif (this.IsGenericDescriptor(Desc) || this.IsDataDescriptor(Desc)) {\n\t\t\tif (!has(Desc, '[[Value]]')) {\n\t\t\t\tDesc['[[Value]]'] = void 0;\n\t\t\t}\n\t\t\tif (!has(Desc, '[[Writable]]')) {\n\t\t\t\tDesc['[[Writable]]'] = false;\n\t\t\t}\n\t\t} else {\n\t\t\tif (!has(Desc, '[[Get]]')) {\n\t\t\t\tDesc['[[Get]]'] = void 0;\n\t\t\t}\n\t\t\tif (!has(Desc, '[[Set]]')) {\n\t\t\t\tDesc['[[Set]]'] = void 0;\n\t\t\t}\n\t\t}\n\t\tif (!has(Desc, '[[Enumerable]]')) {\n\t\t\tDesc['[[Enumerable]]'] = false;\n\t\t}\n\t\tif (!has(Desc, '[[Configurable]]')) {\n\t\t\tDesc['[[Configurable]]'] = false;\n\t\t}\n\t\treturn Desc;\n\t},\n\n\t// https://ecma-international.org/ecma-262/6.0/#sec-set-o-p-v-throw\n\tSet: function Set(O, P, V, Throw) {\n\t\tif (this.Type(O) !== 'Object') {\n\t\t\tthrow new $TypeError('O must be an Object');\n\t\t}\n\t\tif (!this.IsPropertyKey(P)) {\n\t\t\tthrow new $TypeError('P must be a Property Key');\n\t\t}\n\t\tif (this.Type(Throw) !== 'Boolean') {\n\t\t\tthrow new $TypeError('Throw must be a Boolean');\n\t\t}\n\t\tif (Throw) {\n\t\t\tO[P] = V;\n\t\t\treturn true;\n\t\t} else {\n\t\t\ttry {\n\t\t\t\tO[P] = V;\n\t\t\t} catch (e) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t},\n\n\t// https://ecma-international.org/ecma-262/6.0/#sec-hasownproperty\n\tHasOwnProperty: function HasOwnProperty(O, P) {\n\t\tif (this.Type(O) !== 'Object') {\n\t\t\tthrow new $TypeError('O must be an Object');\n\t\t}\n\t\tif (!this.IsPropertyKey(P)) {\n\t\t\tthrow new $TypeError('P must be a Property Key');\n\t\t}\n\t\treturn has(O, P);\n\t},\n\n\t// https://ecma-international.org/ecma-262/6.0/#sec-hasproperty\n\tHasProperty: function HasProperty(O, P) {\n\t\tif (this.Type(O) !== 'Object') {\n\t\t\tthrow new $TypeError('O must be an Object');\n\t\t}\n\t\tif (!this.IsPropertyKey(P)) {\n\t\t\tthrow new $TypeError('P must be a Property Key');\n\t\t}\n\t\treturn P in O;\n\t},\n\n\t// https://ecma-international.org/ecma-262/6.0/#sec-isconcatspreadable\n\tIsConcatSpreadable: function IsConcatSpreadable(O) {\n\t\tif (this.Type(O) !== 'Object') {\n\t\t\treturn false;\n\t\t}\n\t\tif (hasSymbols && typeof $Symbol.isConcatSpreadable === 'symbol') {\n\t\t\tvar spreadable = this.Get(O, Symbol.isConcatSpreadable);\n\t\t\tif (typeof spreadable !== 'undefined') {\n\t\t\t\treturn this.ToBoolean(spreadable);\n\t\t\t}\n\t\t}\n\t\treturn this.IsArray(O);\n\t},\n\n\t// https://ecma-international.org/ecma-262/6.0/#sec-invoke\n\tInvoke: function Invoke(O, P) {\n\t\tif (!this.IsPropertyKey(P)) {\n\t\t\tthrow new $TypeError('P must be a Property Key');\n\t\t}\n\t\tvar argumentsList = arraySlice(arguments, 2);\n\t\tvar func = this.GetV(O, P);\n\t\treturn this.Call(func, O, argumentsList);\n\t},\n\n\t// https://ecma-international.org/ecma-262/6.0/#sec-getiterator\n\tGetIterator: function GetIterator(obj, method) {\n\t\tif (!hasSymbols) {\n\t\t\tthrow new SyntaxError('ES.GetIterator depends on native iterator support.');\n\t\t}\n\n\t\tvar actualMethod = method;\n\t\tif (arguments.length < 2) {\n\t\t\tactualMethod = this.GetMethod(obj, $Symbol.iterator);\n\t\t}\n\t\tvar iterator = this.Call(actualMethod, obj);\n\t\tif (this.Type(iterator) !== 'Object') {\n\t\t\tthrow new $TypeError('iterator must return an object');\n\t\t}\n\n\t\treturn iterator;\n\t},\n\n\t// https://ecma-international.org/ecma-262/6.0/#sec-iteratornext\n\tIteratorNext: function IteratorNext(iterator, value) {\n\t\tvar result = this.Invoke(iterator, 'next', arguments.length < 2 ? [] : [value]);\n\t\tif (this.Type(result) !== 'Object') {\n\t\t\tthrow new $TypeError('iterator next must return an object');\n\t\t}\n\t\treturn result;\n\t},\n\n\t// https://ecma-international.org/ecma-262/6.0/#sec-iteratorcomplete\n\tIteratorComplete: function IteratorComplete(iterResult) {\n\t\tif (this.Type(iterResult) !== 'Object') {\n\t\t\tthrow new $TypeError('Assertion failed: Type(iterResult) is not Object');\n\t\t}\n\t\treturn this.ToBoolean(this.Get(iterResult, 'done'));\n\t},\n\n\t// https://ecma-international.org/ecma-262/6.0/#sec-iteratorvalue\n\tIteratorValue: function IteratorValue(iterResult) {\n\t\tif (this.Type(iterResult) !== 'Object') {\n\t\t\tthrow new $TypeError('Assertion failed: Type(iterResult) is not Object');\n\t\t}\n\t\treturn this.Get(iterResult, 'value');\n\t},\n\n\t// https://ecma-international.org/ecma-262/6.0/#sec-iteratorstep\n\tIteratorStep: function IteratorStep(iterator) {\n\t\tvar result = this.IteratorNext(iterator);\n\t\tvar done = this.IteratorComplete(result);\n\t\treturn done === true ? false : result;\n\t},\n\n\t// https://ecma-international.org/ecma-262/6.0/#sec-iteratorclose\n\tIteratorClose: function IteratorClose(iterator, completion) {\n\t\tif (this.Type(iterator) !== 'Object') {\n\t\t\tthrow new $TypeError('Assertion failed: Type(iterator) is not Object');\n\t\t}\n\t\tif (!this.IsCallable(completion)) {\n\t\t\tthrow new $TypeError('Assertion failed: completion is not a thunk for a Completion Record');\n\t\t}\n\t\tvar completionThunk = completion;\n\n\t\tvar iteratorReturn = this.GetMethod(iterator, 'return');\n\n\t\tif (typeof iteratorReturn === 'undefined') {\n\t\t\treturn completionThunk();\n\t\t}\n\n\t\tvar completionRecord;\n\t\ttry {\n\t\t\tvar innerResult = this.Call(iteratorReturn, iterator, []);\n\t\t} catch (e) {\n\t\t\t// if we hit here, then \"e\" is the innerResult completion that needs re-throwing\n\n\t\t\t// if the completion is of type \"throw\", this will throw.\n\t\t\tcompletionRecord = completionThunk();\n\t\t\tcompletionThunk = null; // ensure it's not called twice.\n\n\t\t\t// if not, then return the innerResult completion\n\t\t\tthrow e;\n\t\t}\n\t\tcompletionRecord = completionThunk(); // if innerResult worked, then throw if the completion does\n\t\tcompletionThunk = null; // ensure it's not called twice.\n\n\t\tif (this.Type(innerResult) !== 'Object') {\n\t\t\tthrow new $TypeError('iterator .return must return an object');\n\t\t}\n\n\t\treturn completionRecord;\n\t},\n\n\t// https://ecma-international.org/ecma-262/6.0/#sec-createiterresultobject\n\tCreateIterResultObject: function CreateIterResultObject(value, done) {\n\t\tif (this.Type(done) !== 'Boolean') {\n\t\t\tthrow new $TypeError('Assertion failed: Type(done) is not Boolean');\n\t\t}\n\t\treturn {\n\t\t\tvalue: value,\n\t\t\tdone: done\n\t\t};\n\t},\n\n\t// https://ecma-international.org/ecma-262/6.0/#sec-regexpexec\n\tRegExpExec: function RegExpExec(R, S) {\n\t\tif (this.Type(R) !== 'Object') {\n\t\t\tthrow new $TypeError('R must be an Object');\n\t\t}\n\t\tif (this.Type(S) !== 'String') {\n\t\t\tthrow new $TypeError('S must be a String');\n\t\t}\n\t\tvar exec = this.Get(R, 'exec');\n\t\tif (this.IsCallable(exec)) {\n\t\t\tvar result = this.Call(exec, R, [S]);\n\t\t\tif (result === null || this.Type(result) === 'Object') {\n\t\t\t\treturn result;\n\t\t\t}\n\t\t\tthrow new $TypeError('\"exec\" method must return `null` or an Object');\n\t\t}\n\t\treturn regexExec(R, S);\n\t},\n\n\t// https://ecma-international.org/ecma-262/6.0/#sec-arrayspeciescreate\n\tArraySpeciesCreate: function ArraySpeciesCreate(originalArray, length) {\n\t\tif (!this.IsInteger(length) || length < 0) {\n\t\t\tthrow new $TypeError('Assertion failed: length must be an integer >= 0');\n\t\t}\n\t\tvar len = length === 0 ? 0 : length;\n\t\tvar C;\n\t\tvar isArray = this.IsArray(originalArray);\n\t\tif (isArray) {\n\t\t\tC = this.Get(originalArray, 'constructor');\n\t\t\t// TODO: figure out how to make a cross-realm normal Array, a same-realm Array\n\t\t\t// if (this.IsConstructor(C)) {\n\t\t\t// \tif C is another realm's Array, C = undefined\n\t\t\t// \tObject.getPrototypeOf(Object.getPrototypeOf(Object.getPrototypeOf(Array))) === null ?\n\t\t\t// }\n\t\t\tif (this.Type(C) === 'Object' && hasSymbols && $Symbol.species) {\n\t\t\t\tC = this.Get(C, $Symbol.species);\n\t\t\t\tif (C === null) {\n\t\t\t\t\tC = void 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (typeof C === 'undefined') {\n\t\t\treturn $Array(len);\n\t\t}\n\t\tif (!this.IsConstructor(C)) {\n\t\t\tthrow new $TypeError('C must be a constructor');\n\t\t}\n\t\treturn new C(len); // this.Construct(C, len);\n\t},\n\n\tCreateDataProperty: function CreateDataProperty(O, P, V) {\n\t\tif (this.Type(O) !== 'Object') {\n\t\t\tthrow new $TypeError('Assertion failed: Type(O) is not Object');\n\t\t}\n\t\tif (!this.IsPropertyKey(P)) {\n\t\t\tthrow new $TypeError('Assertion failed: IsPropertyKey(P) is not true');\n\t\t}\n\t\tvar oldDesc = $gOPD(O, P);\n\t\tvar extensible = oldDesc || (typeof $isExtensible !== 'function' || $isExtensible(O));\n\t\tvar immutable = oldDesc && (!oldDesc.writable || !oldDesc.configurable);\n\t\tif (immutable || !extensible) {\n\t\t\treturn false;\n\t\t}\n\t\tvar newDesc = {\n\t\t\tconfigurable: true,\n\t\t\tenumerable: true,\n\t\t\tvalue: V,\n\t\t\twritable: true\n\t\t};\n\t\t$defineProperty(O, P, newDesc);\n\t\treturn true;\n\t},\n\n\t// https://ecma-international.org/ecma-262/6.0/#sec-createdatapropertyorthrow\n\tCreateDataPropertyOrThrow: function CreateDataPropertyOrThrow(O, P, V) {\n\t\tif (this.Type(O) !== 'Object') {\n\t\t\tthrow new $TypeError('Assertion failed: Type(O) is not Object');\n\t\t}\n\t\tif (!this.IsPropertyKey(P)) {\n\t\t\tthrow new $TypeError('Assertion failed: IsPropertyKey(P) is not true');\n\t\t}\n\t\tvar success = this.CreateDataProperty(O, P, V);\n\t\tif (!success) {\n\t\t\tthrow new $TypeError('unable to create data property');\n\t\t}\n\t\treturn success;\n\t},\n\n\t// https://www.ecma-international.org/ecma-262/6.0/#sec-objectcreate\n\tObjectCreate: function ObjectCreate(proto, internalSlotsList) {\n\t\tif (proto !== null && this.Type(proto) !== 'Object') {\n\t\t\tthrow new $TypeError('Assertion failed: proto must be null or an object');\n\t\t}\n\t\tvar slots = arguments.length < 2 ? [] : internalSlotsList;\n\t\tif (slots.length > 0) {\n\t\t\tthrow new $SyntaxError('es-abstract does not yet support internal slots');\n\t\t}\n\n\t\tif (proto === null && !$ObjectCreate) {\n\t\t\tthrow new $SyntaxError('native Object.create support is required to create null objects');\n\t\t}\n\n\t\treturn $ObjectCreate(proto);\n\t},\n\n\t// https://ecma-international.org/ecma-262/6.0/#sec-advancestringindex\n\tAdvanceStringIndex: function AdvanceStringIndex(S, index, unicode) {\n\t\tif (this.Type(S) !== 'String') {\n\t\t\tthrow new $TypeError('S must be a String');\n\t\t}\n\t\tif (!this.IsInteger(index) || index < 0 || index > MAX_SAFE_INTEGER) {\n\t\t\tthrow new $TypeError('Assertion failed: length must be an integer >= 0 and <= 2**53');\n\t\t}\n\t\tif (this.Type(unicode) !== 'Boolean') {\n\t\t\tthrow new $TypeError('Assertion failed: unicode must be a Boolean');\n\t\t}\n\t\tif (!unicode) {\n\t\t\treturn index + 1;\n\t\t}\n\t\tvar length = S.length;\n\t\tif ((index + 1) >= length) {\n\t\t\treturn index + 1;\n\t\t}\n\n\t\tvar first = $charCodeAt(S, index);\n\t\tif (first < 0xD800 || first > 0xDBFF) {\n\t\t\treturn index + 1;\n\t\t}\n\n\t\tvar second = $charCodeAt(S, index + 1);\n\t\tif (second < 0xDC00 || second > 0xDFFF) {\n\t\t\treturn index + 1;\n\t\t}\n\n\t\treturn index + 2;\n\t},\n\n\t// https://www.ecma-international.org/ecma-262/6.0/#sec-createmethodproperty\n\tCreateMethodProperty: function CreateMethodProperty(O, P, V) {\n\t\tif (this.Type(O) !== 'Object') {\n\t\t\tthrow new $TypeError('Assertion failed: Type(O) is not Object');\n\t\t}\n\n\t\tif (!this.IsPropertyKey(P)) {\n\t\t\tthrow new $TypeError('Assertion failed: IsPropertyKey(P) is not true');\n\t\t}\n\n\t\tvar newDesc = {\n\t\t\tconfigurable: true,\n\t\t\tenumerable: false,\n\t\t\tvalue: V,\n\t\t\twritable: true\n\t\t};\n\t\treturn !!$defineProperty(O, P, newDesc);\n\t},\n\n\t// https://www.ecma-international.org/ecma-262/6.0/#sec-definepropertyorthrow\n\tDefinePropertyOrThrow: function DefinePropertyOrThrow(O, P, desc) {\n\t\tif (this.Type(O) !== 'Object') {\n\t\t\tthrow new $TypeError('Assertion failed: Type(O) is not Object');\n\t\t}\n\n\t\tif (!this.IsPropertyKey(P)) {\n\t\t\tthrow new $TypeError('Assertion failed: IsPropertyKey(P) is not true');\n\t\t}\n\n\t\treturn !!$defineProperty(O, P, desc);\n\t},\n\n\t// https://www.ecma-international.org/ecma-262/6.0/#sec-deletepropertyorthrow\n\tDeletePropertyOrThrow: function DeletePropertyOrThrow(O, P) {\n\t\tif (this.Type(O) !== 'Object') {\n\t\t\tthrow new $TypeError('Assertion failed: Type(O) is not Object');\n\t\t}\n\n\t\tif (!this.IsPropertyKey(P)) {\n\t\t\tthrow new $TypeError('Assertion failed: IsPropertyKey(P) is not true');\n\t\t}\n\n\t\tvar success = delete O[P];\n\t\tif (!success) {\n\t\t\tthrow new TypeError('Attempt to delete property failed.');\n\t\t}\n\t\treturn success;\n\t},\n\n\t// https://www.ecma-international.org/ecma-262/6.0/#sec-enumerableownnames\n\tEnumerableOwnNames: function EnumerableOwnNames(O) {\n\t\tif (this.Type(O) !== 'Object') {\n\t\t\tthrow new $TypeError('Assertion failed: Type(O) is not Object');\n\t\t}\n\n\t\treturn keys(O);\n\t},\n\n\t// https://ecma-international.org/ecma-262/6.0/#sec-properties-of-the-number-prototype-object\n\tthisNumberValue: function thisNumberValue(value) {\n\t\tif (this.Type(value) === 'Number') {\n\t\t\treturn value;\n\t\t}\n\n\t\treturn $NumberValueOf(value);\n\t},\n\n\t// https://ecma-international.org/ecma-262/6.0/#sec-properties-of-the-boolean-prototype-object\n\tthisBooleanValue: function thisBooleanValue(value) {\n\t\tif (this.Type(value) === 'Boolean') {\n\t\t\treturn value;\n\t\t}\n\n\t\treturn $BooleanValueOf(value);\n\t},\n\n\t// https://ecma-international.org/ecma-262/6.0/#sec-properties-of-the-string-prototype-object\n\tthisStringValue: function thisStringValue(value) {\n\t\tif (this.Type(value) === 'String') {\n\t\t\treturn value;\n\t\t}\n\n\t\treturn $StringValueOf(value);\n\t},\n\n\t// https://ecma-international.org/ecma-262/6.0/#sec-properties-of-the-date-prototype-object\n\tthisTimeValue: function thisTimeValue(value) {\n\t\treturn $DateValueOf(value);\n\t}\n});\n\ndelete ES6.CheckObjectCoercible; // renamed in ES6 to RequireObjectCoercible\n\nmodule.exports = ES6;\n"]},"metadata":{},"sourceType":"script"}