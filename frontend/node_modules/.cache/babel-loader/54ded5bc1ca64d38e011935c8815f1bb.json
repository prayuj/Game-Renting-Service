{"ast":null,"code":"var _jsxFileName = \"C:\\\\Prayuj Folders\\\\Game-Renting-Service\\\\frontend\\\\src\\\\components\\\\transactions.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport Transaction from \"./transaction\";\n\nclass Transactions extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      transactions: [],\n      filtered: [],\n      ascendingCustomerName: true,\n      ascendingGameName: true,\n      ascendingDateIssue: true,\n      ascendingDateReturn: true,\n      customerNameSortButtonValue: \"Sort\",\n      gameNameSortButtonValue: \"Sort\",\n      dateIssueButtonValue: React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, \"\\u2193\"),\n      dateReturnButtonValue: \"Sort\",\n      dateIssueFrom: \"\",\n      dateIssueTo: \"\",\n      dateReturnFrom: \"\",\n      dateReturnTo: \"\"\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.getTransactions = this.getTransactions.bind(this);\n    this.onClickForSort = this.onClickForSort.bind(this);\n    this.getIssueDates = this.getIssueDates.bind(this);\n    this.getReturnDates = this.getReturnDates.bind(this);\n  }\n\n  componentDidMount() {\n    this.getTransactions();\n  }\n\n  getTransactions() {\n    this.setState({\n      dateIssueFrom: \"\",\n      dateIssueTo: \"\",\n      dateReturnFrom: \"\",\n      dateReturnTo: \"\"\n    });\n    axios.get(\"https://prayuj-gamerent.herokuapp.com/transaction\").then(res => this.setState({\n      transactions: res.data,\n      filtered: res.data\n    }));\n  }\n\n  convertDate(dates) {\n    var date = new Date(dates);\n    var dd = String(date.getDate()).padStart(2, \"0\");\n    var mm = String(date.getMonth() + 1).padStart(2, \"0\"); //January is 0!\n\n    var yyyy = date.getFullYear();\n    var today = dd + \"/\" + mm + \"/\" + yyyy;\n    return today;\n  }\n\n  handleChange(e) {\n    // Variable to hold the original version of the list\n    let currentList = []; // Variable to hold the filtered list before putting into state\n\n    let newList = []; // If the search bar isn't empty\n\n    if (e.target.value !== \"\") {\n      //console.log(\"HERE 1\");\n      // Assign the original list to currentList\n      currentList = this.state.transactions;\n      let firstList = [];\n      let secondList = []; // Use .filter() to determine which items should be displayed\n      // based on the search terms\n\n      firstList = currentList.filter(item => {\n        // change current item to lowercase\n        const lc = item.gameInfo.name.toLowerCase(); // change search term to lowercase\n\n        const filter = e.target.value.toLowerCase(); // check to see if the current list item includes the search term\n        // If it does, it will be added to newList. Using lowercase eliminates\n        // issues with capitalization in search terms and search content\n\n        return lc.includes(filter);\n      });\n      secondList = currentList.filter(item => {\n        // change current item to lowercase\n        const lc = item.customerInfo.name.toLowerCase(); // change search term to lowercase\n\n        const filter = e.target.value.toLowerCase(); // check to see if the current list item includes the search term\n        // If it does, it will be added to newList. Using lowercase eliminates\n        // issues with capitalization in search terms and search content\n\n        return lc.includes(filter);\n      });\n      newList = firstList.concat(secondList); //console.log(newList);\n    } else {\n      //console.log(\"HERE 2\");\n      // If the search bar is empty, set newList to original task list\n      newList = this.state.transactions;\n    } // Set the filtered state based on what our rules added to newList\n\n\n    this.setState({\n      filtered: newList\n    });\n  }\n\n  onClickForSort(e) {\n    if (e.target.value === \"Customer Name\") {\n      let transactions = this.state.filtered;\n      transactions.sort((a, b) => {\n        var x = a.customerInfo.name.toLowerCase();\n        var y = b.customerInfo.name.toLowerCase();\n\n        if (this.state.ascendingCustomerName) {\n          if (x < y) {\n            return 1;\n          }\n\n          if (x > y) {\n            return -1;\n          }\n\n          return 0;\n        }\n\n        if (!this.state.ascendingCustomerName) {\n          if (x < y) {\n            return -1;\n          }\n\n          if (x > y) {\n            return 1;\n          }\n\n          return 0;\n        }\n      });\n      let arrow = this.state.ascendingCustomerName ? React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, \"\\u2193\") : React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, \"\\u2191\");\n      this.setState({\n        filtered: transactions,\n        ascendingCustomerName: !this.state.ascendingCustomerName,\n        customerNameSortButtonValue: arrow,\n        gameNameSortButtonValue: \"Sort\",\n        dateIssueButtonValue: \"Sort\",\n        dateReturnButtonValue: \"Sort\"\n      });\n    }\n\n    if (e.target.value === \"Game Name\") {\n      let transactions = this.state.filtered;\n      transactions.sort((a, b) => {\n        var x = a.gameInfo.name.toLowerCase();\n        var y = b.gameInfo.name.toLowerCase();\n\n        if (this.state.ascendingGameName) {\n          if (x < y) {\n            return 1;\n          }\n\n          if (x > y) {\n            return -1;\n          }\n\n          return 0;\n        }\n\n        if (!this.state.ascendingGameName) {\n          if (x < y) {\n            return -1;\n          }\n\n          if (x > y) {\n            return 1;\n          }\n\n          return 0;\n        }\n      });\n      let arrow = this.state.ascendingGameName ? React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, \"\\u2193\") : React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, \"\\u2191\");\n      this.setState({\n        filtered: transactions,\n        ascendingGameName: !this.state.ascendingGameName,\n        gameNameSortButtonValue: arrow,\n        customerNameSortButtonValue: \"Sort\",\n        dateIssueButtonValue: \"Sort\",\n        dateReturnButtonValue: \"Sort\"\n      });\n    }\n\n    if (e.target.value === \"Date Issue\") {\n      let transactions = this.state.filtered;\n      transactions.sort((a, b) => {\n        var x = a.date_issue;\n        var y = b.date_issue;\n\n        if (this.state.ascendingDateIssue) {\n          if (x < y) {\n            return 1;\n          }\n\n          if (x > y) {\n            return -1;\n          }\n\n          return 0;\n        }\n\n        if (!this.state.ascendingDateIssue) {\n          if (x < y) {\n            return -1;\n          }\n\n          if (x > y) {\n            return 1;\n          }\n\n          return 0;\n        }\n      });\n      let arrow = this.state.ascendingDateIssue ? React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }, \"\\u2193\") : React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, \"\\u2191\");\n      this.setState({\n        filtered: transactions,\n        ascendingDateIssue: !this.state.ascendingDateIssue,\n        dateIssueButtonValue: arrow,\n        customerNameSortButtonValue: \"Sort\",\n        gameNameSortButtonValue: \"Sort\",\n        dateReturnButtonValue: \"Sort\"\n      });\n    }\n\n    if (e.target.value === \"Date Return\") {\n      let transactions = this.state.filtered;\n      transactions.sort((a, b) => {\n        if (this.state.ascendingDateReturn) {\n          if (a.return && b.return) {\n            var x = a.date_return;\n            var y = b.date_return;\n\n            if (x < y) {\n              return 1;\n            }\n\n            if (x > y) {\n              return -1;\n            }\n\n            return 0;\n          } else if (!a.return && b.return) {\n            return 1;\n          } else if (a.return && !b.return) {\n            return -1;\n          } else {\n            var x = a.date_issue;\n            var y = b.date_issue;\n\n            if (x < y) {\n              return 1;\n            }\n\n            if (x > y) {\n              return -1;\n            }\n\n            return 0;\n          }\n        }\n\n        if (!this.state.ascendingDateReturn) {\n          if (a.return && b.return) {\n            var x = a.date_return;\n            var y = b.date_return;\n\n            if (x < y) {\n              return -1;\n            }\n\n            if (x > y) {\n              return 1;\n            }\n\n            return 0;\n          } else if (!a.return && b.return) {\n            return -1;\n          } else if (a.return && !b.return) {\n            return 1;\n          } else {\n            var x = a.date_issue;\n            var y = b.date_issue;\n\n            if (x < y) {\n              return -1;\n            }\n\n            if (x > y) {\n              return 1;\n            }\n\n            return 0;\n          }\n        }\n      });\n      let arrow = this.state.ascendingDateReturn ? React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278\n        },\n        __self: this\n      }, \"\\u2193\") : React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280\n        },\n        __self: this\n      }, \"\\u2191\");\n      this.setState({\n        filtered: transactions,\n        ascendingDateReturn: !this.state.ascendingDateReturn,\n        dateReturnButtonValue: arrow,\n        customerNameSortButtonValue: \"Sort\",\n        gameNameSortButtonValue: \"Sort\",\n        gameNameSortButtonValue: \"Sort\"\n      });\n    }\n  }\n\n  getIssueDates(e) {\n    e.preventDefault();\n\n    if (e.target.from.value !== \"\" && e.target.to.value !== \"\") {\n      axios.get(\"https://prayuj-gamerent.herokuapp.com/transaction/dates/mode=issue&from=\" + e.target.from.value + \"&to=\" + e.target.to.value).then(res => this.setState({\n        transactions: res.data,\n        filtered: res.data\n      }));\n    }\n  }\n\n  getReturnDates(e) {\n    e.preventDefault();\n\n    if (e.target.from.value !== \"\" && e.target.to.value !== \"\") {\n      axios.get(\"https://prayuj-gamerent.herokuapp.com/transaction/dates/mode=return&from=\" + e.target.from.value + \"&to=\" + e.target.to.value).then(res => this.setState({\n        transactions: res.data,\n        filtered: res.data\n      }));\n    }\n  }\n\n  getToday() {\n    var date = new Date();\n    var dd = String(date.getDate()).padStart(2, \"0\");\n    var mm = String(date.getMonth() + 1).padStart(2, \"0\"); //January is 0!\n\n    var yyyy = date.getFullYear();\n    return yyyy + \"-\" + mm + \"-\" + dd;\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      placeholder: \"Search...\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342\n      },\n      __self: this\n    }), React.createElement(\"form\", {\n      onSubmit: this.getIssueDates,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348\n      },\n      __self: this\n    }, \"Select Date of Issue\", React.createElement(\"input\", {\n      name: \"from\",\n      type: \"date\",\n      value: this.state.dateIssueFrom,\n      max: this.getToday(),\n      onChange: e => this.setState({\n        dateIssueFrom: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350\n      },\n      __self: this\n    }), \"to\", React.createElement(\"input\", {\n      name: \"to\",\n      type: \"date\",\n      value: this.state.dateIssueTo,\n      min: this.state.dateIssueFrom,\n      max: this.getToday(),\n      onChange: e => this.setState({\n        dateIssueTo: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"submit\",\n      className: \"btn btn-info\",\n      value: \"Get\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 366\n      },\n      __self: this\n    })), React.createElement(\"form\", {\n      onSubmit: this.getReturnDates,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369\n      },\n      __self: this\n    }, \"Select Date of Return\", React.createElement(\"input\", {\n      name: \"from\",\n      type: \"date\",\n      max: this.getToday(),\n      value: this.state.dateReturnFrom,\n      onChange: e => this.setState({\n        dateReturnFrom: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 371\n      },\n      __self: this\n    }), \"to\", React.createElement(\"input\", {\n      name: \"to\",\n      type: \"date\",\n      value: this.state.dateReturnTo,\n      min: this.state.dateReturnFrom,\n      max: this.getToday(),\n      onChange: e => this.setState({\n        dateReturnTo: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 379\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"submit\",\n      className: \"btn btn-info\",\n      value: \"Get\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 387\n      },\n      __self: this\n    })), React.createElement(\"input\", {\n      type: \"button\",\n      className: \"btn btn-primary\",\n      value: \"Show all\",\n      onClick: this.getTransactions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 389\n      },\n      __self: this\n    }), React.createElement(\"table\", {\n      className: \"table\",\n      style: {\n        marginTop: 20\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 395\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 396\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 397\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      style: {\n        paddingBottom: \"1.3%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 398\n      },\n      __self: this\n    }, \"Sr\"), React.createElement(\"th\", {\n      style: {\n        paddingBottom: \"1.3%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 399\n      },\n      __self: this\n    }, \"Transaction ID\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 400\n      },\n      __self: this\n    }, \"Member Name\", \" \", React.createElement(\"button\", {\n      className: \"btn btn-primary\",\n      value: \"Customer Name\",\n      onClick: this.onClickForSort,\n      style: {\n        \"margin-left\": \"5%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 402\n      },\n      __self: this\n    }, this.state.customerNameSortButtonValue)), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 411\n      },\n      __self: this\n    }, \"Game Name\", \" \", React.createElement(\"button\", {\n      className: \"btn btn-primary\",\n      value: \"Game Name\",\n      onClick: this.onClickForSort,\n      style: {\n        \"margin-left\": \"5%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 413\n      },\n      __self: this\n    }, this.state.gameNameSortButtonValue)), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 422\n      },\n      __self: this\n    }, \"Date Issue\", \" \", React.createElement(\"button\", {\n      className: \"btn btn-primary\",\n      value: \"Date Issue\",\n      onClick: this.onClickForSort,\n      style: {\n        \"margin-left\": \"5%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 424\n      },\n      __self: this\n    }, this.state.dateIssueButtonValue)), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 433\n      },\n      __self: this\n    }, \"Date Return\", React.createElement(\"button\", {\n      className: \"btn btn-primary\",\n      value: \"Date Return\",\n      onClick: this.onClickForSort,\n      style: {\n        \"margin-left\": \"5%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 435\n      },\n      __self: this\n    }, this.state.dateReturnButtonValue)))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 446\n      },\n      __self: this\n    }, this.state.filtered.map((transaction, index) => React.createElement(Transaction, {\n      index: index + 1,\n      id: transaction._id,\n      game_name: transaction.gameInfo.name,\n      customer_name: transaction.customerInfo.name,\n      date_issue: this.convertDate(transaction.date_issue),\n      date_return: transaction.return ? this.convertDate(transaction.date_return) : \"Not Returned\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 448\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nexport default Transactions;","map":{"version":3,"sources":["C:\\Prayuj Folders\\Game-Renting-Service\\frontend\\src\\components\\transactions.js"],"names":["React","Component","axios","Transaction","Transactions","constructor","props","state","transactions","filtered","ascendingCustomerName","ascendingGameName","ascendingDateIssue","ascendingDateReturn","customerNameSortButtonValue","gameNameSortButtonValue","dateIssueButtonValue","dateReturnButtonValue","dateIssueFrom","dateIssueTo","dateReturnFrom","dateReturnTo","handleChange","bind","getTransactions","onClickForSort","getIssueDates","getReturnDates","componentDidMount","setState","get","then","res","data","convertDate","dates","date","Date","dd","String","getDate","padStart","mm","getMonth","yyyy","getFullYear","today","e","currentList","newList","target","value","firstList","secondList","filter","item","lc","gameInfo","name","toLowerCase","includes","customerInfo","concat","sort","a","b","x","y","arrow","date_issue","return","date_return","preventDefault","from","to","getToday","render","marginTop","paddingBottom","map","transaction","index","_id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,MAAMC,YAAN,SAA2BH,SAA3B,CAAqC;AACnCI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,YAAY,EAAE,EADH;AAEXC,MAAAA,QAAQ,EAAE,EAFC;AAGXC,MAAAA,qBAAqB,EAAE,IAHZ;AAIXC,MAAAA,iBAAiB,EAAE,IAJR;AAKXC,MAAAA,kBAAkB,EAAE,IALT;AAMXC,MAAAA,mBAAmB,EAAE,IANV;AAOXC,MAAAA,2BAA2B,EAAE,MAPlB;AAQXC,MAAAA,uBAAuB,EAAE,MARd;AASXC,MAAAA,oBAAoB,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBATX;AAUXC,MAAAA,qBAAqB,EAAE,MAVZ;AAWXC,MAAAA,aAAa,EAAE,EAXJ;AAYXC,MAAAA,WAAW,EAAE,EAZF;AAaXC,MAAAA,cAAc,EAAE,EAbL;AAcXC,MAAAA,YAAY,EAAE;AAdH,KAAb;AAgBA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,eAAL,GAAuB,KAAKA,eAAL,CAAqBD,IAArB,CAA0B,IAA1B,CAAvB;AACA,SAAKE,cAAL,GAAsB,KAAKA,cAAL,CAAoBF,IAApB,CAAyB,IAAzB,CAAtB;AACA,SAAKG,aAAL,GAAqB,KAAKA,aAAL,CAAmBH,IAAnB,CAAwB,IAAxB,CAArB;AACA,SAAKI,cAAL,GAAsB,KAAKA,cAAL,CAAoBJ,IAApB,CAAyB,IAAzB,CAAtB;AACD;;AACDK,EAAAA,iBAAiB,GAAG;AAClB,SAAKJ,eAAL;AACD;;AACDA,EAAAA,eAAe,GAAG;AAChB,SAAKK,QAAL,CAAc;AACZX,MAAAA,aAAa,EAAE,EADH;AAEZC,MAAAA,WAAW,EAAE,EAFD;AAGZC,MAAAA,cAAc,EAAE,EAHJ;AAIZC,MAAAA,YAAY,EAAE;AAJF,KAAd;AAMAnB,IAAAA,KAAK,CAAC4B,GAAN,CAAU,mDAAV,EAA+DC,IAA/D,CAAqEC,GAAD,IAClE,KAAKH,QAAL,CAAc;AACZrB,MAAAA,YAAY,EAAEwB,GAAG,CAACC,IADN;AAEZxB,MAAAA,QAAQ,EAAEuB,GAAG,CAACC;AAFF,KAAd,CADF;AAMD;;AACDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,QAAIC,IAAI,GAAG,IAAIC,IAAJ,CAASF,KAAT,CAAX;AACA,QAAIG,EAAE,GAAGC,MAAM,CAACH,IAAI,CAACI,OAAL,EAAD,CAAN,CAAuBC,QAAvB,CAAgC,CAAhC,EAAmC,GAAnC,CAAT;AACA,QAAIC,EAAE,GAAGH,MAAM,CAACH,IAAI,CAACO,QAAL,KAAkB,CAAnB,CAAN,CAA4BF,QAA5B,CAAqC,CAArC,EAAwC,GAAxC,CAAT,CAHiB,CAGsC;;AACvD,QAAIG,IAAI,GAAGR,IAAI,CAACS,WAAL,EAAX;AACA,QAAIC,KAAK,GAAGR,EAAE,GAAG,GAAL,GAAWI,EAAX,GAAgB,GAAhB,GAAsBE,IAAlC;AACA,WAAOE,KAAP;AACD;;AAEDxB,EAAAA,YAAY,CAACyB,CAAD,EAAI;AACd;AACA,QAAIC,WAAW,GAAG,EAAlB,CAFc,CAGd;;AACA,QAAIC,OAAO,GAAG,EAAd,CAJc,CAMd;;AACA,QAAIF,CAAC,CAACG,MAAF,CAASC,KAAT,KAAmB,EAAvB,EAA2B;AACzB;AACA;AACAH,MAAAA,WAAW,GAAG,KAAKzC,KAAL,CAAWC,YAAzB;AACA,UAAI4C,SAAS,GAAG,EAAhB;AACA,UAAIC,UAAU,GAAG,EAAjB,CALyB,CAOzB;AACA;;AACAD,MAAAA,SAAS,GAAGJ,WAAW,CAACM,MAAZ,CAAoBC,IAAD,IAAU;AACvC;AACA,cAAMC,EAAE,GAAGD,IAAI,CAACE,QAAL,CAAcC,IAAd,CAAmBC,WAAnB,EAAX,CAFuC,CAGvC;;AACA,cAAML,MAAM,GAAGP,CAAC,CAACG,MAAF,CAASC,KAAT,CAAeQ,WAAf,EAAf,CAJuC,CAKvC;AACA;AACA;;AACA,eAAOH,EAAE,CAACI,QAAH,CAAYN,MAAZ,CAAP;AACD,OATW,CAAZ;AAUAD,MAAAA,UAAU,GAAGL,WAAW,CAACM,MAAZ,CAAoBC,IAAD,IAAU;AACxC;AACA,cAAMC,EAAE,GAAGD,IAAI,CAACM,YAAL,CAAkBH,IAAlB,CAAuBC,WAAvB,EAAX,CAFwC,CAGxC;;AACA,cAAML,MAAM,GAAGP,CAAC,CAACG,MAAF,CAASC,KAAT,CAAeQ,WAAf,EAAf,CAJwC,CAKxC;AACA;AACA;;AACA,eAAOH,EAAE,CAACI,QAAH,CAAYN,MAAZ,CAAP;AACD,OATY,CAAb;AAUAL,MAAAA,OAAO,GAAGG,SAAS,CAACU,MAAV,CAAiBT,UAAjB,CAAV,CA7ByB,CA8BzB;AACD,KA/BD,MA+BO;AACL;AACA;AACAJ,MAAAA,OAAO,GAAG,KAAK1C,KAAL,CAAWC,YAArB;AACD,KA1Ca,CA2Cd;;;AACA,SAAKqB,QAAL,CAAc;AACZpB,MAAAA,QAAQ,EAAEwC;AADE,KAAd;AAGD;;AACDxB,EAAAA,cAAc,CAACsB,CAAD,EAAI;AAChB,QAAIA,CAAC,CAACG,MAAF,CAASC,KAAT,KAAmB,eAAvB,EAAwC;AACtC,UAAI3C,YAAY,GAAG,KAAKD,KAAL,CAAWE,QAA9B;AACAD,MAAAA,YAAY,CAACuD,IAAb,CAAkB,CAACC,CAAD,EAAIC,CAAJ,KAAU;AAC1B,YAAIC,CAAC,GAAGF,CAAC,CAACH,YAAF,CAAeH,IAAf,CAAoBC,WAApB,EAAR;AACA,YAAIQ,CAAC,GAAGF,CAAC,CAACJ,YAAF,CAAeH,IAAf,CAAoBC,WAApB,EAAR;;AACA,YAAI,KAAKpD,KAAL,CAAWG,qBAAf,EAAsC;AACpC,cAAIwD,CAAC,GAAGC,CAAR,EAAW;AACT,mBAAO,CAAP;AACD;;AACD,cAAID,CAAC,GAAGC,CAAR,EAAW;AACT,mBAAO,CAAC,CAAR;AACD;;AACD,iBAAO,CAAP;AACD;;AACD,YAAI,CAAC,KAAK5D,KAAL,CAAWG,qBAAhB,EAAuC;AACrC,cAAIwD,CAAC,GAAGC,CAAR,EAAW;AACT,mBAAO,CAAC,CAAR;AACD;;AACD,cAAID,CAAC,GAAGC,CAAR,EAAW;AACT,mBAAO,CAAP;AACD;;AACD,iBAAO,CAAP;AACD;AACF,OArBD;AAsBA,UAAIC,KAAK,GAAG,KAAK7D,KAAL,CAAWG,qBAAX,GACV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADU,GAGV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF;AAKA,WAAKmB,QAAL,CAAc;AACZpB,QAAAA,QAAQ,EAAED,YADE;AAEZE,QAAAA,qBAAqB,EAAE,CAAC,KAAKH,KAAL,CAAWG,qBAFvB;AAGZI,QAAAA,2BAA2B,EAAEsD,KAHjB;AAIZrD,QAAAA,uBAAuB,EAAE,MAJb;AAKZC,QAAAA,oBAAoB,EAAE,MALV;AAMZC,QAAAA,qBAAqB,EAAE;AANX,OAAd;AAQD;;AACD,QAAI8B,CAAC,CAACG,MAAF,CAASC,KAAT,KAAmB,WAAvB,EAAoC;AAClC,UAAI3C,YAAY,GAAG,KAAKD,KAAL,CAAWE,QAA9B;AACAD,MAAAA,YAAY,CAACuD,IAAb,CAAkB,CAACC,CAAD,EAAIC,CAAJ,KAAU;AAC1B,YAAIC,CAAC,GAAGF,CAAC,CAACP,QAAF,CAAWC,IAAX,CAAgBC,WAAhB,EAAR;AACA,YAAIQ,CAAC,GAAGF,CAAC,CAACR,QAAF,CAAWC,IAAX,CAAgBC,WAAhB,EAAR;;AACA,YAAI,KAAKpD,KAAL,CAAWI,iBAAf,EAAkC;AAChC,cAAIuD,CAAC,GAAGC,CAAR,EAAW;AACT,mBAAO,CAAP;AACD;;AACD,cAAID,CAAC,GAAGC,CAAR,EAAW;AACT,mBAAO,CAAC,CAAR;AACD;;AACD,iBAAO,CAAP;AACD;;AACD,YAAI,CAAC,KAAK5D,KAAL,CAAWI,iBAAhB,EAAmC;AACjC,cAAIuD,CAAC,GAAGC,CAAR,EAAW;AACT,mBAAO,CAAC,CAAR;AACD;;AACD,cAAID,CAAC,GAAGC,CAAR,EAAW;AACT,mBAAO,CAAP;AACD;;AACD,iBAAO,CAAP;AACD;AACF,OArBD;AAsBA,UAAIC,KAAK,GAAG,KAAK7D,KAAL,CAAWI,iBAAX,GACV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADU,GAGV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF;AAKA,WAAKkB,QAAL,CAAc;AACZpB,QAAAA,QAAQ,EAAED,YADE;AAEZG,QAAAA,iBAAiB,EAAE,CAAC,KAAKJ,KAAL,CAAWI,iBAFnB;AAGZI,QAAAA,uBAAuB,EAAEqD,KAHb;AAIZtD,QAAAA,2BAA2B,EAAE,MAJjB;AAKZE,QAAAA,oBAAoB,EAAE,MALV;AAMZC,QAAAA,qBAAqB,EAAE;AANX,OAAd;AAQD;;AACD,QAAI8B,CAAC,CAACG,MAAF,CAASC,KAAT,KAAmB,YAAvB,EAAqC;AACnC,UAAI3C,YAAY,GAAG,KAAKD,KAAL,CAAWE,QAA9B;AACAD,MAAAA,YAAY,CAACuD,IAAb,CAAkB,CAACC,CAAD,EAAIC,CAAJ,KAAU;AAC1B,YAAIC,CAAC,GAAGF,CAAC,CAACK,UAAV;AACA,YAAIF,CAAC,GAAGF,CAAC,CAACI,UAAV;;AACA,YAAI,KAAK9D,KAAL,CAAWK,kBAAf,EAAmC;AACjC,cAAIsD,CAAC,GAAGC,CAAR,EAAW;AACT,mBAAO,CAAP;AACD;;AACD,cAAID,CAAC,GAAGC,CAAR,EAAW;AACT,mBAAO,CAAC,CAAR;AACD;;AACD,iBAAO,CAAP;AACD;;AACD,YAAI,CAAC,KAAK5D,KAAL,CAAWK,kBAAhB,EAAoC;AAClC,cAAIsD,CAAC,GAAGC,CAAR,EAAW;AACT,mBAAO,CAAC,CAAR;AACD;;AACD,cAAID,CAAC,GAAGC,CAAR,EAAW;AACT,mBAAO,CAAP;AACD;;AACD,iBAAO,CAAP;AACD;AACF,OArBD;AAsBA,UAAIC,KAAK,GAAG,KAAK7D,KAAL,CAAWK,kBAAX,GACV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADU,GAGV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF;AAKA,WAAKiB,QAAL,CAAc;AACZpB,QAAAA,QAAQ,EAAED,YADE;AAEZI,QAAAA,kBAAkB,EAAE,CAAC,KAAKL,KAAL,CAAWK,kBAFpB;AAGZI,QAAAA,oBAAoB,EAAEoD,KAHV;AAIZtD,QAAAA,2BAA2B,EAAE,MAJjB;AAKZC,QAAAA,uBAAuB,EAAE,MALb;AAMZE,QAAAA,qBAAqB,EAAE;AANX,OAAd;AAQD;;AACD,QAAI8B,CAAC,CAACG,MAAF,CAASC,KAAT,KAAmB,aAAvB,EAAsC;AACpC,UAAI3C,YAAY,GAAG,KAAKD,KAAL,CAAWE,QAA9B;AACAD,MAAAA,YAAY,CAACuD,IAAb,CAAkB,CAACC,CAAD,EAAIC,CAAJ,KAAU;AAC1B,YAAI,KAAK1D,KAAL,CAAWM,mBAAf,EAAoC;AAClC,cAAImD,CAAC,CAACM,MAAF,IAAYL,CAAC,CAACK,MAAlB,EAA0B;AACxB,gBAAIJ,CAAC,GAAGF,CAAC,CAACO,WAAV;AACA,gBAAIJ,CAAC,GAAGF,CAAC,CAACM,WAAV;;AACA,gBAAIL,CAAC,GAAGC,CAAR,EAAW;AACT,qBAAO,CAAP;AACD;;AACD,gBAAID,CAAC,GAAGC,CAAR,EAAW;AACT,qBAAO,CAAC,CAAR;AACD;;AACD,mBAAO,CAAP;AACD,WAVD,MAUO,IAAI,CAACH,CAAC,CAACM,MAAH,IAAaL,CAAC,CAACK,MAAnB,EAA2B;AAChC,mBAAO,CAAP;AACD,WAFM,MAEA,IAAIN,CAAC,CAACM,MAAF,IAAY,CAACL,CAAC,CAACK,MAAnB,EAA2B;AAChC,mBAAO,CAAC,CAAR;AACD,WAFM,MAEA;AACL,gBAAIJ,CAAC,GAAGF,CAAC,CAACK,UAAV;AACA,gBAAIF,CAAC,GAAGF,CAAC,CAACI,UAAV;;AACA,gBAAIH,CAAC,GAAGC,CAAR,EAAW;AACT,qBAAO,CAAP;AACD;;AACD,gBAAID,CAAC,GAAGC,CAAR,EAAW;AACT,qBAAO,CAAC,CAAR;AACD;;AACD,mBAAO,CAAP;AACD;AACF;;AACD,YAAI,CAAC,KAAK5D,KAAL,CAAWM,mBAAhB,EAAqC;AACnC,cAAImD,CAAC,CAACM,MAAF,IAAYL,CAAC,CAACK,MAAlB,EAA0B;AACxB,gBAAIJ,CAAC,GAAGF,CAAC,CAACO,WAAV;AACA,gBAAIJ,CAAC,GAAGF,CAAC,CAACM,WAAV;;AACA,gBAAIL,CAAC,GAAGC,CAAR,EAAW;AACT,qBAAO,CAAC,CAAR;AACD;;AACD,gBAAID,CAAC,GAAGC,CAAR,EAAW;AACT,qBAAO,CAAP;AACD;;AACD,mBAAO,CAAP;AACD,WAVD,MAUO,IAAI,CAACH,CAAC,CAACM,MAAH,IAAaL,CAAC,CAACK,MAAnB,EAA2B;AAChC,mBAAO,CAAC,CAAR;AACD,WAFM,MAEA,IAAIN,CAAC,CAACM,MAAF,IAAY,CAACL,CAAC,CAACK,MAAnB,EAA2B;AAChC,mBAAO,CAAP;AACD,WAFM,MAEA;AACL,gBAAIJ,CAAC,GAAGF,CAAC,CAACK,UAAV;AACA,gBAAIF,CAAC,GAAGF,CAAC,CAACI,UAAV;;AACA,gBAAIH,CAAC,GAAGC,CAAR,EAAW;AACT,qBAAO,CAAC,CAAR;AACD;;AACD,gBAAID,CAAC,GAAGC,CAAR,EAAW;AACT,qBAAO,CAAP;AACD;;AACD,mBAAO,CAAP;AACD;AACF;AACF,OAvDD;AAwDA,UAAIC,KAAK,GAAG,KAAK7D,KAAL,CAAWM,mBAAX,GACV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADU,GAGV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF;AAKA,WAAKgB,QAAL,CAAc;AACZpB,QAAAA,QAAQ,EAAED,YADE;AAEZK,QAAAA,mBAAmB,EAAE,CAAC,KAAKN,KAAL,CAAWM,mBAFrB;AAGZI,QAAAA,qBAAqB,EAAEmD,KAHX;AAIZtD,QAAAA,2BAA2B,EAAE,MAJjB;AAKZC,QAAAA,uBAAuB,EAAE,MALb;AAMZA,QAAAA,uBAAuB,EAAE;AANb,OAAd;AAQD;AACF;;AAEDW,EAAAA,aAAa,CAACqB,CAAD,EAAI;AACfA,IAAAA,CAAC,CAACyB,cAAF;;AACA,QAAIzB,CAAC,CAACG,MAAF,CAASuB,IAAT,CAActB,KAAd,KAAwB,EAAxB,IAA8BJ,CAAC,CAACG,MAAF,CAASwB,EAAT,CAAYvB,KAAZ,KAAsB,EAAxD,EAA4D;AAC1DjD,MAAAA,KAAK,CACF4B,GADH,CAEI,6EACEiB,CAAC,CAACG,MAAF,CAASuB,IAAT,CAActB,KADhB,GAEE,MAFF,GAGEJ,CAAC,CAACG,MAAF,CAASwB,EAAT,CAAYvB,KALlB,EAOGpB,IAPH,CAOSC,GAAD,IACJ,KAAKH,QAAL,CAAc;AACZrB,QAAAA,YAAY,EAAEwB,GAAG,CAACC,IADN;AAEZxB,QAAAA,QAAQ,EAAEuB,GAAG,CAACC;AAFF,OAAd,CARJ;AAaD;AACF;;AAEDN,EAAAA,cAAc,CAACoB,CAAD,EAAI;AAChBA,IAAAA,CAAC,CAACyB,cAAF;;AACA,QAAIzB,CAAC,CAACG,MAAF,CAASuB,IAAT,CAActB,KAAd,KAAwB,EAAxB,IAA8BJ,CAAC,CAACG,MAAF,CAASwB,EAAT,CAAYvB,KAAZ,KAAsB,EAAxD,EAA4D;AAC1DjD,MAAAA,KAAK,CACF4B,GADH,CAEI,8EACEiB,CAAC,CAACG,MAAF,CAASuB,IAAT,CAActB,KADhB,GAEE,MAFF,GAGEJ,CAAC,CAACG,MAAF,CAASwB,EAAT,CAAYvB,KALlB,EAOGpB,IAPH,CAOSC,GAAD,IACJ,KAAKH,QAAL,CAAc;AACZrB,QAAAA,YAAY,EAAEwB,GAAG,CAACC,IADN;AAEZxB,QAAAA,QAAQ,EAAEuB,GAAG,CAACC;AAFF,OAAd,CARJ;AAaD;AACF;;AAED0C,EAAAA,QAAQ,GAAG;AACT,QAAIvC,IAAI,GAAG,IAAIC,IAAJ,EAAX;AACA,QAAIC,EAAE,GAAGC,MAAM,CAACH,IAAI,CAACI,OAAL,EAAD,CAAN,CAAuBC,QAAvB,CAAgC,CAAhC,EAAmC,GAAnC,CAAT;AACA,QAAIC,EAAE,GAAGH,MAAM,CAACH,IAAI,CAACO,QAAL,KAAkB,CAAnB,CAAN,CAA4BF,QAA5B,CAAqC,CAArC,EAAwC,GAAxC,CAAT,CAHS,CAG8C;;AACvD,QAAIG,IAAI,GAAGR,IAAI,CAACS,WAAL,EAAX;AACA,WAAOD,IAAI,GAAG,GAAP,GAAaF,EAAb,GAAkB,GAAlB,GAAwBJ,EAA/B;AACD;;AAEDsC,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,SAAS,EAAC,cAFZ;AAGE,MAAA,WAAW,EAAC,WAHd;AAIE,MAAA,QAAQ,EAAE,KAAKtD,YAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAOE;AAAM,MAAA,QAAQ,EAAE,KAAKI,aAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAEE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,IAAI,EAAC,MAFP;AAGE,MAAA,KAAK,EAAE,KAAKnB,KAAL,CAAWW,aAHpB;AAIE,MAAA,GAAG,EAAE,KAAKyD,QAAL,EAJP;AAKE,MAAA,QAAQ,EAAG5B,CAAD,IAAO,KAAKlB,QAAL,CAAc;AAAEX,QAAAA,aAAa,EAAE6B,CAAC,CAACG,MAAF,CAASC;AAA1B,OAAd,CALnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,QAUE;AACE,MAAA,IAAI,EAAC,IADP;AAEE,MAAA,IAAI,EAAC,MAFP;AAGE,MAAA,KAAK,EAAE,KAAK5C,KAAL,CAAWY,WAHpB;AAIE,MAAA,GAAG,EAAE,KAAKZ,KAAL,CAAWW,aAJlB;AAKE,MAAA,GAAG,EAAE,KAAKyD,QAAL,EALP;AAME,MAAA,QAAQ,EAAG5B,CAAD,IAAO,KAAKlB,QAAL,CAAc;AAAEV,QAAAA,WAAW,EAAE4B,CAAC,CAACG,MAAF,CAASC;AAAxB,OAAd,CANnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVF,EAkBE;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,SAAS,EAAC,cAA/B;AAA8C,MAAA,KAAK,EAAC,KAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAlBF,CAPF,EA4BE;AAAM,MAAA,QAAQ,EAAE,KAAKxB,cAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAEE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,IAAI,EAAC,MAFP;AAGE,MAAA,GAAG,EAAE,KAAKgD,QAAL,EAHP;AAIE,MAAA,KAAK,EAAE,KAAKpE,KAAL,CAAWa,cAJpB;AAKE,MAAA,QAAQ,EAAG2B,CAAD,IAAO,KAAKlB,QAAL,CAAc;AAAET,QAAAA,cAAc,EAAE2B,CAAC,CAACG,MAAF,CAASC;AAA3B,OAAd,CALnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,QAUE;AACE,MAAA,IAAI,EAAC,IADP;AAEE,MAAA,IAAI,EAAC,MAFP;AAGE,MAAA,KAAK,EAAE,KAAK5C,KAAL,CAAWc,YAHpB;AAIE,MAAA,GAAG,EAAE,KAAKd,KAAL,CAAWa,cAJlB;AAKE,MAAA,GAAG,EAAE,KAAKuD,QAAL,EALP;AAME,MAAA,QAAQ,EAAG5B,CAAD,IAAO,KAAKlB,QAAL,CAAc;AAAER,QAAAA,YAAY,EAAE0B,CAAC,CAACG,MAAF,CAASC;AAAzB,OAAd,CANnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVF,EAkBE;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,SAAS,EAAC,cAA/B;AAA8C,MAAA,KAAK,EAAC,KAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAlBF,CA5BF,EAgDE;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,SAAS,EAAC,iBAFZ;AAGE,MAAA,KAAK,EAAC,UAHR;AAIE,MAAA,OAAO,EAAE,KAAK3B,eAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAhDF,EAsDE;AAAO,MAAA,SAAS,EAAC,OAAjB;AAAyB,MAAA,KAAK,EAAE;AAAEqD,QAAAA,SAAS,EAAE;AAAb,OAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAI,MAAA,KAAK,EAAE;AAAEC,QAAAA,aAAa,EAAE;AAAjB,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEE;AAAI,MAAA,KAAK,EAAE;AAAEA,QAAAA,aAAa,EAAE;AAAjB,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACc,GADd,EAEE;AACE,MAAA,SAAS,EAAC,iBADZ;AAEE,MAAA,KAAK,EAAC,eAFR;AAGE,MAAA,OAAO,EAAE,KAAKrD,cAHhB;AAIE,MAAA,KAAK,EAAE;AAAE,uBAAe;AAAjB,OAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMG,KAAKlB,KAAL,CAAWO,2BANd,CAFF,CAHF,EAcE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACY,GADZ,EAEE;AACE,MAAA,SAAS,EAAC,iBADZ;AAEE,MAAA,KAAK,EAAC,WAFR;AAGE,MAAA,OAAO,EAAE,KAAKW,cAHhB;AAIE,MAAA,KAAK,EAAE;AAAE,uBAAe;AAAjB,OAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMG,KAAKlB,KAAL,CAAWQ,uBANd,CAFF,CAdF,EAyBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACa,GADb,EAEE;AACE,MAAA,SAAS,EAAC,iBADZ;AAEE,MAAA,KAAK,EAAC,YAFR;AAGE,MAAA,OAAO,EAAE,KAAKU,cAHhB;AAIE,MAAA,KAAK,EAAE;AAAE,uBAAe;AAAjB,OAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMG,KAAKlB,KAAL,CAAWS,oBANd,CAFF,CAzBF,EAoCE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAEE;AACE,MAAA,SAAS,EAAC,iBADZ;AAEE,MAAA,KAAK,EAAC,aAFR;AAGE,MAAA,OAAO,EAAE,KAAKS,cAHhB;AAIE,MAAA,KAAK,EAAE;AAAE,uBAAe;AAAjB,OAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMG,KAAKlB,KAAL,CAAWU,qBANd,CAFF,CApCF,CADF,CADF,EAmDE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKV,KAAL,CAAWE,QAAX,CAAoBsE,GAApB,CAAwB,CAACC,WAAD,EAAcC,KAAd,KACvB,oBAAC,WAAD;AACE,MAAA,KAAK,EAAEA,KAAK,GAAG,CADjB;AAEE,MAAA,EAAE,EAAED,WAAW,CAACE,GAFlB;AAGE,MAAA,SAAS,EAAEF,WAAW,CAACvB,QAAZ,CAAqBC,IAHlC;AAIE,MAAA,aAAa,EAAEsB,WAAW,CAACnB,YAAZ,CAAyBH,IAJ1C;AAKE,MAAA,UAAU,EAAE,KAAKxB,WAAL,CAAiB8C,WAAW,CAACX,UAA7B,CALd;AAME,MAAA,WAAW,EACTW,WAAW,CAACV,MAAZ,GACI,KAAKpC,WAAL,CAAiB8C,WAAW,CAACT,WAA7B,CADJ,GAEI,cATR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CADH,CAnDF,CAtDF,CADF;AA6HD;;AA5ckC;;AA+crC,eAAenE,YAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport Transaction from \"./transaction\";\r\n\r\nclass Transactions extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      transactions: [],\r\n      filtered: [],\r\n      ascendingCustomerName: true,\r\n      ascendingGameName: true,\r\n      ascendingDateIssue: true,\r\n      ascendingDateReturn: true,\r\n      customerNameSortButtonValue: \"Sort\",\r\n      gameNameSortButtonValue: \"Sort\",\r\n      dateIssueButtonValue: <span>&darr;</span>,\r\n      dateReturnButtonValue: \"Sort\",\r\n      dateIssueFrom: \"\",\r\n      dateIssueTo: \"\",\r\n      dateReturnFrom: \"\",\r\n      dateReturnTo: \"\",\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.getTransactions = this.getTransactions.bind(this);\r\n    this.onClickForSort = this.onClickForSort.bind(this);\r\n    this.getIssueDates = this.getIssueDates.bind(this);\r\n    this.getReturnDates = this.getReturnDates.bind(this);\r\n  }\r\n  componentDidMount() {\r\n    this.getTransactions();\r\n  }\r\n  getTransactions() {\r\n    this.setState({\r\n      dateIssueFrom: \"\",\r\n      dateIssueTo: \"\",\r\n      dateReturnFrom: \"\",\r\n      dateReturnTo: \"\",\r\n    });\r\n    axios.get(\"https://prayuj-gamerent.herokuapp.com/transaction\").then((res) =>\r\n      this.setState({\r\n        transactions: res.data,\r\n        filtered: res.data,\r\n      })\r\n    );\r\n  }\r\n  convertDate(dates) {\r\n    var date = new Date(dates);\r\n    var dd = String(date.getDate()).padStart(2, \"0\");\r\n    var mm = String(date.getMonth() + 1).padStart(2, \"0\"); //January is 0!\r\n    var yyyy = date.getFullYear();\r\n    var today = dd + \"/\" + mm + \"/\" + yyyy;\r\n    return today;\r\n  }\r\n\r\n  handleChange(e) {\r\n    // Variable to hold the original version of the list\r\n    let currentList = [];\r\n    // Variable to hold the filtered list before putting into state\r\n    let newList = [];\r\n\r\n    // If the search bar isn't empty\r\n    if (e.target.value !== \"\") {\r\n      //console.log(\"HERE 1\");\r\n      // Assign the original list to currentList\r\n      currentList = this.state.transactions;\r\n      let firstList = [];\r\n      let secondList = [];\r\n\r\n      // Use .filter() to determine which items should be displayed\r\n      // based on the search terms\r\n      firstList = currentList.filter((item) => {\r\n        // change current item to lowercase\r\n        const lc = item.gameInfo.name.toLowerCase();\r\n        // change search term to lowercase\r\n        const filter = e.target.value.toLowerCase();\r\n        // check to see if the current list item includes the search term\r\n        // If it does, it will be added to newList. Using lowercase eliminates\r\n        // issues with capitalization in search terms and search content\r\n        return lc.includes(filter);\r\n      });\r\n      secondList = currentList.filter((item) => {\r\n        // change current item to lowercase\r\n        const lc = item.customerInfo.name.toLowerCase();\r\n        // change search term to lowercase\r\n        const filter = e.target.value.toLowerCase();\r\n        // check to see if the current list item includes the search term\r\n        // If it does, it will be added to newList. Using lowercase eliminates\r\n        // issues with capitalization in search terms and search content\r\n        return lc.includes(filter);\r\n      });\r\n      newList = firstList.concat(secondList);\r\n      //console.log(newList);\r\n    } else {\r\n      //console.log(\"HERE 2\");\r\n      // If the search bar is empty, set newList to original task list\r\n      newList = this.state.transactions;\r\n    }\r\n    // Set the filtered state based on what our rules added to newList\r\n    this.setState({\r\n      filtered: newList,\r\n    });\r\n  }\r\n  onClickForSort(e) {\r\n    if (e.target.value === \"Customer Name\") {\r\n      let transactions = this.state.filtered;\r\n      transactions.sort((a, b) => {\r\n        var x = a.customerInfo.name.toLowerCase();\r\n        var y = b.customerInfo.name.toLowerCase();\r\n        if (this.state.ascendingCustomerName) {\r\n          if (x < y) {\r\n            return 1;\r\n          }\r\n          if (x > y) {\r\n            return -1;\r\n          }\r\n          return 0;\r\n        }\r\n        if (!this.state.ascendingCustomerName) {\r\n          if (x < y) {\r\n            return -1;\r\n          }\r\n          if (x > y) {\r\n            return 1;\r\n          }\r\n          return 0;\r\n        }\r\n      });\r\n      let arrow = this.state.ascendingCustomerName ? (\r\n        <span>&darr;</span>\r\n      ) : (\r\n        <span>&uarr;</span>\r\n      );\r\n      this.setState({\r\n        filtered: transactions,\r\n        ascendingCustomerName: !this.state.ascendingCustomerName,\r\n        customerNameSortButtonValue: arrow,\r\n        gameNameSortButtonValue: \"Sort\",\r\n        dateIssueButtonValue: \"Sort\",\r\n        dateReturnButtonValue: \"Sort\",\r\n      });\r\n    }\r\n    if (e.target.value === \"Game Name\") {\r\n      let transactions = this.state.filtered;\r\n      transactions.sort((a, b) => {\r\n        var x = a.gameInfo.name.toLowerCase();\r\n        var y = b.gameInfo.name.toLowerCase();\r\n        if (this.state.ascendingGameName) {\r\n          if (x < y) {\r\n            return 1;\r\n          }\r\n          if (x > y) {\r\n            return -1;\r\n          }\r\n          return 0;\r\n        }\r\n        if (!this.state.ascendingGameName) {\r\n          if (x < y) {\r\n            return -1;\r\n          }\r\n          if (x > y) {\r\n            return 1;\r\n          }\r\n          return 0;\r\n        }\r\n      });\r\n      let arrow = this.state.ascendingGameName ? (\r\n        <span>&darr;</span>\r\n      ) : (\r\n        <span>&uarr;</span>\r\n      );\r\n      this.setState({\r\n        filtered: transactions,\r\n        ascendingGameName: !this.state.ascendingGameName,\r\n        gameNameSortButtonValue: arrow,\r\n        customerNameSortButtonValue: \"Sort\",\r\n        dateIssueButtonValue: \"Sort\",\r\n        dateReturnButtonValue: \"Sort\",\r\n      });\r\n    }\r\n    if (e.target.value === \"Date Issue\") {\r\n      let transactions = this.state.filtered;\r\n      transactions.sort((a, b) => {\r\n        var x = a.date_issue;\r\n        var y = b.date_issue;\r\n        if (this.state.ascendingDateIssue) {\r\n          if (x < y) {\r\n            return 1;\r\n          }\r\n          if (x > y) {\r\n            return -1;\r\n          }\r\n          return 0;\r\n        }\r\n        if (!this.state.ascendingDateIssue) {\r\n          if (x < y) {\r\n            return -1;\r\n          }\r\n          if (x > y) {\r\n            return 1;\r\n          }\r\n          return 0;\r\n        }\r\n      });\r\n      let arrow = this.state.ascendingDateIssue ? (\r\n        <span>&darr;</span>\r\n      ) : (\r\n        <span>&uarr;</span>\r\n      );\r\n      this.setState({\r\n        filtered: transactions,\r\n        ascendingDateIssue: !this.state.ascendingDateIssue,\r\n        dateIssueButtonValue: arrow,\r\n        customerNameSortButtonValue: \"Sort\",\r\n        gameNameSortButtonValue: \"Sort\",\r\n        dateReturnButtonValue: \"Sort\",\r\n      });\r\n    }\r\n    if (e.target.value === \"Date Return\") {\r\n      let transactions = this.state.filtered;\r\n      transactions.sort((a, b) => {\r\n        if (this.state.ascendingDateReturn) {\r\n          if (a.return && b.return) {\r\n            var x = a.date_return;\r\n            var y = b.date_return;\r\n            if (x < y) {\r\n              return 1;\r\n            }\r\n            if (x > y) {\r\n              return -1;\r\n            }\r\n            return 0;\r\n          } else if (!a.return && b.return) {\r\n            return 1;\r\n          } else if (a.return && !b.return) {\r\n            return -1;\r\n          } else {\r\n            var x = a.date_issue;\r\n            var y = b.date_issue;\r\n            if (x < y) {\r\n              return 1;\r\n            }\r\n            if (x > y) {\r\n              return -1;\r\n            }\r\n            return 0;\r\n          }\r\n        }\r\n        if (!this.state.ascendingDateReturn) {\r\n          if (a.return && b.return) {\r\n            var x = a.date_return;\r\n            var y = b.date_return;\r\n            if (x < y) {\r\n              return -1;\r\n            }\r\n            if (x > y) {\r\n              return 1;\r\n            }\r\n            return 0;\r\n          } else if (!a.return && b.return) {\r\n            return -1;\r\n          } else if (a.return && !b.return) {\r\n            return 1;\r\n          } else {\r\n            var x = a.date_issue;\r\n            var y = b.date_issue;\r\n            if (x < y) {\r\n              return -1;\r\n            }\r\n            if (x > y) {\r\n              return 1;\r\n            }\r\n            return 0;\r\n          }\r\n        }\r\n      });\r\n      let arrow = this.state.ascendingDateReturn ? (\r\n        <span>&darr;</span>\r\n      ) : (\r\n        <span>&uarr;</span>\r\n      );\r\n      this.setState({\r\n        filtered: transactions,\r\n        ascendingDateReturn: !this.state.ascendingDateReturn,\r\n        dateReturnButtonValue: arrow,\r\n        customerNameSortButtonValue: \"Sort\",\r\n        gameNameSortButtonValue: \"Sort\",\r\n        gameNameSortButtonValue: \"Sort\",\r\n      });\r\n    }\r\n  }\r\n\r\n  getIssueDates(e) {\r\n    e.preventDefault();\r\n    if (e.target.from.value !== \"\" && e.target.to.value !== \"\") {\r\n      axios\r\n        .get(\r\n          \"https://prayuj-gamerent.herokuapp.com/transaction/dates/mode=issue&from=\" +\r\n            e.target.from.value +\r\n            \"&to=\" +\r\n            e.target.to.value\r\n        )\r\n        .then((res) =>\r\n          this.setState({\r\n            transactions: res.data,\r\n            filtered: res.data,\r\n          })\r\n        );\r\n    }\r\n  }\r\n\r\n  getReturnDates(e) {\r\n    e.preventDefault();\r\n    if (e.target.from.value !== \"\" && e.target.to.value !== \"\") {\r\n      axios\r\n        .get(\r\n          \"https://prayuj-gamerent.herokuapp.com/transaction/dates/mode=return&from=\" +\r\n            e.target.from.value +\r\n            \"&to=\" +\r\n            e.target.to.value\r\n        )\r\n        .then((res) =>\r\n          this.setState({\r\n            transactions: res.data,\r\n            filtered: res.data,\r\n          })\r\n        );\r\n    }\r\n  }\r\n\r\n  getToday() {\r\n    var date = new Date();\r\n    var dd = String(date.getDate()).padStart(2, \"0\");\r\n    var mm = String(date.getMonth() + 1).padStart(2, \"0\"); //January is 0!\r\n    var yyyy = date.getFullYear();\r\n    return yyyy + \"-\" + mm + \"-\" + dd;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          placeholder=\"Search...\"\r\n          onChange={this.handleChange}\r\n        />\r\n        <form onSubmit={this.getIssueDates}>\r\n          Select Date of Issue\r\n          <input\r\n            name=\"from\"\r\n            type=\"date\"\r\n            value={this.state.dateIssueFrom}\r\n            max={this.getToday()}\r\n            onChange={(e) => this.setState({ dateIssueFrom: e.target.value })}\r\n          />\r\n          to\r\n          <input\r\n            name=\"to\"\r\n            type=\"date\"\r\n            value={this.state.dateIssueTo}\r\n            min={this.state.dateIssueFrom}\r\n            max={this.getToday()}\r\n            onChange={(e) => this.setState({ dateIssueTo: e.target.value })}\r\n          />\r\n          <input type=\"submit\" className=\"btn btn-info\" value=\"Get\" />\r\n        </form>\r\n\r\n        <form onSubmit={this.getReturnDates}>\r\n          Select Date of Return\r\n          <input\r\n            name=\"from\"\r\n            type=\"date\"\r\n            max={this.getToday()}\r\n            value={this.state.dateReturnFrom}\r\n            onChange={(e) => this.setState({ dateReturnFrom: e.target.value })}\r\n          />\r\n          to\r\n          <input\r\n            name=\"to\"\r\n            type=\"date\"\r\n            value={this.state.dateReturnTo}\r\n            min={this.state.dateReturnFrom}\r\n            max={this.getToday()}\r\n            onChange={(e) => this.setState({ dateReturnTo: e.target.value })}\r\n          />\r\n          <input type=\"submit\" className=\"btn btn-info\" value=\"Get\" />\r\n        </form>\r\n        <input\r\n          type=\"button\"\r\n          className=\"btn btn-primary\"\r\n          value=\"Show all\"\r\n          onClick={this.getTransactions}\r\n        />\r\n        <table className=\"table\" style={{ marginTop: 20 }}>\r\n          <thead>\r\n            <tr>\r\n              <th style={{ paddingBottom: \"1.3%\" }}>Sr</th>\r\n              <th style={{ paddingBottom: \"1.3%\" }}>Transaction ID</th>\r\n              <th>\r\n                Member Name{\" \"}\r\n                <button\r\n                  className=\"btn btn-primary\"\r\n                  value=\"Customer Name\"\r\n                  onClick={this.onClickForSort}\r\n                  style={{ \"margin-left\": \"5%\" }}\r\n                >\r\n                  {this.state.customerNameSortButtonValue}\r\n                </button>\r\n              </th>\r\n              <th>\r\n                Game Name{\" \"}\r\n                <button\r\n                  className=\"btn btn-primary\"\r\n                  value=\"Game Name\"\r\n                  onClick={this.onClickForSort}\r\n                  style={{ \"margin-left\": \"5%\" }}\r\n                >\r\n                  {this.state.gameNameSortButtonValue}\r\n                </button>\r\n              </th>\r\n              <th>\r\n                Date Issue{\" \"}\r\n                <button\r\n                  className=\"btn btn-primary\"\r\n                  value=\"Date Issue\"\r\n                  onClick={this.onClickForSort}\r\n                  style={{ \"margin-left\": \"5%\" }}\r\n                >\r\n                  {this.state.dateIssueButtonValue}\r\n                </button>\r\n              </th>\r\n              <th>\r\n                Date Return\r\n                <button\r\n                  className=\"btn btn-primary\"\r\n                  value=\"Date Return\"\r\n                  onClick={this.onClickForSort}\r\n                  style={{ \"margin-left\": \"5%\" }}\r\n                >\r\n                  {this.state.dateReturnButtonValue}\r\n                </button>\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {this.state.filtered.map((transaction, index) => (\r\n              <Transaction\r\n                index={index + 1}\r\n                id={transaction._id}\r\n                game_name={transaction.gameInfo.name}\r\n                customer_name={transaction.customerInfo.name}\r\n                date_issue={this.convertDate(transaction.date_issue)}\r\n                date_return={\r\n                  transaction.return\r\n                    ? this.convertDate(transaction.date_return)\r\n                    : \"Not Returned\"\r\n                }\r\n              />\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Transactions;\r\n"]},"metadata":{},"sourceType":"module"}