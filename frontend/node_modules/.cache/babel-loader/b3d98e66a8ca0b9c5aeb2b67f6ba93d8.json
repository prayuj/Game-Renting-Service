{"ast":null,"code":"'use strict';\n\nvar bind = require('function-bind');\n\nvar ES2016 = require('./es2016');\n\nvar assign = require('./helpers/assign');\n\nvar forEach = require('./helpers/forEach');\n\nvar GetIntrinsic = require('./GetIntrinsic');\n\nvar $TypeError = GetIntrinsic('%TypeError%');\nvar $isEnumerable = bind.call(Function.call, GetIntrinsic('%ObjectPrototype%').propertyIsEnumerable);\nvar $pushApply = bind.call(Function.apply, GetIntrinsic('%ArrayPrototype%').push);\nvar ES2017 = assign(assign({}, ES2016), {\n  ToIndex: function ToIndex(value) {\n    if (typeof value === 'undefined') {\n      return 0;\n    }\n\n    var integerIndex = this.ToInteger(value);\n\n    if (integerIndex < 0) {\n      throw new RangeError('index must be >= 0');\n    }\n\n    var index = this.ToLength(integerIndex);\n\n    if (!this.SameValueZero(integerIndex, index)) {\n      throw new RangeError('index must be >= 0 and < 2 ** 53 - 1');\n    }\n\n    return index;\n  },\n  // https://www.ecma-international.org/ecma-262/8.0/#sec-enumerableownproperties\n  EnumerableOwnProperties: function EnumerableOwnProperties(O, kind) {\n    var keys = ES2016.EnumerableOwnNames(O);\n\n    if (kind === 'key') {\n      return keys;\n    }\n\n    if (kind === 'value' || kind === 'key+value') {\n      var results = [];\n      forEach(keys, function (key) {\n        if ($isEnumerable(O, key)) {\n          $pushApply(results, [kind === 'value' ? O[key] : [key, O[key]]]);\n        }\n      });\n      return results;\n    }\n\n    throw new $TypeError('Assertion failed: \"kind\" is not \"key\", \"value\", or \"key+value\": ' + kind);\n  }\n});\ndelete ES2017.EnumerableOwnNames; // replaced with EnumerableOwnProperties\n\nmodule.exports = ES2017;","map":{"version":3,"sources":["C:/Prayuj Folders/Game-Renting-Service/frontend/node_modules/es-abstract/es2017.js"],"names":["bind","require","ES2016","assign","forEach","GetIntrinsic","$TypeError","$isEnumerable","call","Function","propertyIsEnumerable","$pushApply","apply","push","ES2017","ToIndex","value","integerIndex","ToInteger","RangeError","index","ToLength","SameValueZero","EnumerableOwnProperties","O","kind","keys","EnumerableOwnNames","results","key","module","exports"],"mappings":"AAAA;;AAEA,IAAIA,IAAI,GAAGC,OAAO,CAAC,eAAD,CAAlB;;AAEA,IAAIC,MAAM,GAAGD,OAAO,CAAC,UAAD,CAApB;;AACA,IAAIE,MAAM,GAAGF,OAAO,CAAC,kBAAD,CAApB;;AACA,IAAIG,OAAO,GAAGH,OAAO,CAAC,mBAAD,CAArB;;AAEA,IAAII,YAAY,GAAGJ,OAAO,CAAC,gBAAD,CAA1B;;AAEA,IAAIK,UAAU,GAAGD,YAAY,CAAC,aAAD,CAA7B;AACA,IAAIE,aAAa,GAAGP,IAAI,CAACQ,IAAL,CAAUC,QAAQ,CAACD,IAAnB,EAAyBH,YAAY,CAAC,mBAAD,CAAZ,CAAkCK,oBAA3D,CAApB;AACA,IAAIC,UAAU,GAAGX,IAAI,CAACQ,IAAL,CAAUC,QAAQ,CAACG,KAAnB,EAA0BP,YAAY,CAAC,kBAAD,CAAZ,CAAiCQ,IAA3D,CAAjB;AAEA,IAAIC,MAAM,GAAGX,MAAM,CAACA,MAAM,CAAC,EAAD,EAAKD,MAAL,CAAP,EAAqB;AACvCa,EAAAA,OAAO,EAAE,SAASA,OAAT,CAAiBC,KAAjB,EAAwB;AAChC,QAAI,OAAOA,KAAP,KAAiB,WAArB,EAAkC;AACjC,aAAO,CAAP;AACA;;AACD,QAAIC,YAAY,GAAG,KAAKC,SAAL,CAAeF,KAAf,CAAnB;;AACA,QAAIC,YAAY,GAAG,CAAnB,EAAsB;AACrB,YAAM,IAAIE,UAAJ,CAAe,oBAAf,CAAN;AACA;;AACD,QAAIC,KAAK,GAAG,KAAKC,QAAL,CAAcJ,YAAd,CAAZ;;AACA,QAAI,CAAC,KAAKK,aAAL,CAAmBL,YAAnB,EAAiCG,KAAjC,CAAL,EAA8C;AAC7C,YAAM,IAAID,UAAJ,CAAe,sCAAf,CAAN;AACA;;AACD,WAAOC,KAAP;AACA,GAdsC;AAgBvC;AACAG,EAAAA,uBAAuB,EAAE,SAASA,uBAAT,CAAiCC,CAAjC,EAAoCC,IAApC,EAA0C;AAClE,QAAIC,IAAI,GAAGxB,MAAM,CAACyB,kBAAP,CAA0BH,CAA1B,CAAX;;AACA,QAAIC,IAAI,KAAK,KAAb,EAAoB;AACnB,aAAOC,IAAP;AACA;;AACD,QAAID,IAAI,KAAK,OAAT,IAAoBA,IAAI,KAAK,WAAjC,EAA8C;AAC7C,UAAIG,OAAO,GAAG,EAAd;AACAxB,MAAAA,OAAO,CAACsB,IAAD,EAAO,UAAUG,GAAV,EAAe;AAC5B,YAAItB,aAAa,CAACiB,CAAD,EAAIK,GAAJ,CAAjB,EAA2B;AAC1BlB,UAAAA,UAAU,CAACiB,OAAD,EAAU,CACnBH,IAAI,KAAK,OAAT,GAAmBD,CAAC,CAACK,GAAD,CAApB,GAA4B,CAACA,GAAD,EAAML,CAAC,CAACK,GAAD,CAAP,CADT,CAAV,CAAV;AAGA;AACD,OANM,CAAP;AAOA,aAAOD,OAAP;AACA;;AACD,UAAM,IAAItB,UAAJ,CAAe,qEAAqEmB,IAApF,CAAN;AACA;AAlCsC,CAArB,CAAnB;AAqCA,OAAOX,MAAM,CAACa,kBAAd,C,CAAkC;;AAElCG,MAAM,CAACC,OAAP,GAAiBjB,MAAjB","sourcesContent":["'use strict';\n\nvar bind = require('function-bind');\n\nvar ES2016 = require('./es2016');\nvar assign = require('./helpers/assign');\nvar forEach = require('./helpers/forEach');\n\nvar GetIntrinsic = require('./GetIntrinsic');\n\nvar $TypeError = GetIntrinsic('%TypeError%');\nvar $isEnumerable = bind.call(Function.call, GetIntrinsic('%ObjectPrototype%').propertyIsEnumerable);\nvar $pushApply = bind.call(Function.apply, GetIntrinsic('%ArrayPrototype%').push);\n\nvar ES2017 = assign(assign({}, ES2016), {\n\tToIndex: function ToIndex(value) {\n\t\tif (typeof value === 'undefined') {\n\t\t\treturn 0;\n\t\t}\n\t\tvar integerIndex = this.ToInteger(value);\n\t\tif (integerIndex < 0) {\n\t\t\tthrow new RangeError('index must be >= 0');\n\t\t}\n\t\tvar index = this.ToLength(integerIndex);\n\t\tif (!this.SameValueZero(integerIndex, index)) {\n\t\t\tthrow new RangeError('index must be >= 0 and < 2 ** 53 - 1');\n\t\t}\n\t\treturn index;\n\t},\n\n\t// https://www.ecma-international.org/ecma-262/8.0/#sec-enumerableownproperties\n\tEnumerableOwnProperties: function EnumerableOwnProperties(O, kind) {\n\t\tvar keys = ES2016.EnumerableOwnNames(O);\n\t\tif (kind === 'key') {\n\t\t\treturn keys;\n\t\t}\n\t\tif (kind === 'value' || kind === 'key+value') {\n\t\t\tvar results = [];\n\t\t\tforEach(keys, function (key) {\n\t\t\t\tif ($isEnumerable(O, key)) {\n\t\t\t\t\t$pushApply(results, [\n\t\t\t\t\t\tkind === 'value' ? O[key] : [key, O[key]]\n\t\t\t\t\t]);\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn results;\n\t\t}\n\t\tthrow new $TypeError('Assertion failed: \"kind\" is not \"key\", \"value\", or \"key+value\": ' + kind);\n\t}\n});\n\ndelete ES2017.EnumerableOwnNames; // replaced with EnumerableOwnProperties\n\nmodule.exports = ES2017;\n"]},"metadata":{},"sourceType":"script"}